{
	"id": "1c3547d4973a5cd76dbd559dce908005",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fatcat/marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface GetBalance { \n    function balanceOf(address _addrr) external view returns (uint tokenId);\n}\n\ninterface IConnected {\n    // Struct to encapsulate detailed information about an NFT, used for easy data retrieval.\n    struct NFT{ \n        uint256 tokenId;    \n        uint256 price;\n        uint256 count;\n        bool minted;\n        address artist;\n        string uri;\n        uint mintTime;\n    }\n\n\n    // Functions to be implemented by connected contracts for updating and retrieving NFT data\n    function updateTokenId(address _to,uint _tokenId,address seller) external;\n    // function update_TokenIdTime(uint _tokenId) external;\n    function getTokenId(address _address) external view returns(NFT [] memory);\n    function getTokenUri(uint _tokenId) external view returns(string memory);\n\n}\ncontract NFTMarketplace is Ownable {\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _itemIds;\n    Counters.Counter private _itemsSold;\n    uint totalVolume;\n    uint artistFeePerAge;\n    uint sellerFeePerAge;\n    uint buyerFeePerAge;\n    uint256 soldCount;\n    address FatCats= 0x5F31f088c0d692FF133bd3b11b923F4E1bE99E9B;\n    address FatLeopards= 0xE2CBAdc3250Dc901596E1cDFFA778fc313162247;\n    address FatTigers= 0x572dD734F1068C1EDa13E0b655BC227b31AD8f72;\n    address FatKittens= 0xE533f399513F8Ed44D7E12E458d532Fe7005CF4e;\n\n        constructor(address owner) Ownable(msg.sender){\n    memberShipPer[memberShip.Gold] = 0;\n    memberShipPer[memberShip.Silver] = 3;\n    memberShipPer[memberShip.Bronze] = 4;\n    memberShipPer[memberShip.Standard] = 5;\n    owner = msg.sender;\n\n\n    }\n\n\n    enum memberShip{Gold, Silver, Bronze, Standard}\n\n\n    struct NFTlist {\n        uint256 tokenId;    \n        address seller;\n        address owner;\n        uint256 price;\n        uint256 count;\n        bool listed;\n        address artist;\n        uint artistFeePerAge;\n        uint sellerFeePerAge;\n        uint buyerFeePerAge;\n\n    }\n    struct tokenAddress{ \n        address contractAddress;\n        uint TokenId;\n    }\n    struct VolumeData{\n        uint _price;\n        uint _time;\n    }\n    struct commissionData{\n       uint totalCommission;\n       uint timestamp; \n    }\n\n    mapping (memberShip => uint) public memberShipPer;\n    \n    // Similar to `ListTokenId` but specifically for NFTs listed for direct sale.\n    struct ListedNftTokenId {\n        NFTlist listedData;          // The direct sale listing data for the NFT.\n        uint Index;          // A count or ID similar to `ListTokenId`.\n        string uriData;          // URI for the NFT metadata.\n    }\n    mapping(address mintContractAddress=> mapping (uint256 => NFTlist)) public _items;\n    mapping(uint => tokenAddress) public Index;\n    mapping(uint => VolumeData) public Volume; \n    mapping(uint => commissionData) public commission;\n    mapping(uint => uint) public Sales;\n\n\n    event ItemCreated(uint256 indexed itemId, address indexed creator, string uri, uint256 price);\n    event ItemSold(uint256 indexed itemId, address indexed buyer, uint256 price);\n        // Emitted when an NFT is listed for sale.\n    event NFTListed(uint256 tokenId, address seller, address owner, uint256 price);\n\n    // Emitted when an NFT is sold.\n    event NFTSold(uint256 tokenId, address seller, address owner, uint256 price, uint SoldTime);\n        // Emitted when fees are paid to an artist.\n    event Fee(address ArtistAddress, uint ArtistFee);\n        // Emitted when NFT list get Cancle\n    event NFTCancel(uint256 tokenId, address seller, address owner, uint256 price);\n\n\n    function listItem( address mintContract , uint _tokenId, string memory uri, uint256 price, address artist) public {\n        _itemIds.increment();\n        _itemIds.current();\n        _items[mintContract][_tokenId]= NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge);\n        Index[_itemIds.current()] = tokenAddress(mintContract,_tokenId );\n        ERC721(mintContract).transferFrom(msg.sender,address(this),_tokenId);\n        Volume[totalVolume] = VolumeData(price , block.timestamp);\n        totalVolume++;\n        emit ItemCreated(_itemIds.current(), msg.sender, uri, price);\n    }\n\n\n    function Buy(uint listIndex, memberShip choice) public payable { \n        address contractAddress = Index[listIndex].contractAddress;\n        uint tokenId = Index[listIndex].TokenId;\n        uint memberPerAgeCal= (_items[contractAddress][tokenId].price * memberShipPer[choice]) / 100 ;\n        require(_items[contractAddress][tokenId].seller != msg.sender, \"Not the Seller\");\n        require(msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal), \"Not enough price\");\n        ERC721(contractAddress).transferFrom(address(this),msg.sender,tokenId);\n        // IConnected(Index[listIndex].contractAddress).updateTokenId(msg.sender,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller);\n            if(_items[contractAddress][tokenId].count == 0){\n                _items[contractAddress][tokenId].artist =_items[contractAddress][tokenId].seller;\n                _items[contractAddress][tokenId].artistFeePerAge = 85;\n                _items[contractAddress][tokenId].buyerFeePerAge= 15;\n\n\n            }\n            if(_items[contractAddress][tokenId].count > 0){ \n                _items[contractAddress][tokenId].artistFeePerAge = 5;\n                _items[contractAddress][tokenId].sellerFeePerAge=95;\n                _items[contractAddress][tokenId].buyerFeePerAge= 5;\n            }\n        \n        uint buyerFeeCul =  (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * buyerFeePerAge) / 1000;\n        uint sellerFeeCul = (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * sellerFeePerAge) / 1000;\n        uint artistFeePer = _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge;\n        uint artistFee = (_items[contractAddress][tokenId].price * artistFeePer) / 100;\n        uint sellerAmount = _items[contractAddress][tokenId].price - (artistFee + buyerFeeCul + sellerFeeCul);\n\n        payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount);\n        payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee);\n        payable(owner()).transfer(buyerFeeCul);\n        payable(owner()).transfer(memberPerAgeCal);\n\n       _items[contractAddress][tokenId].listed = false;\n        // IConnected(Index[listIndex].contractAddress);\n        _items[contractAddress][tokenId].count++;\n\n        Index[listIndex]= Index[_itemIds.current()];\n        _itemIds.decrement();\n        emit Fee(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge);\n        emit NFTSold(_items[contractAddress][tokenId].tokenId ,\n        _items[contractAddress][tokenId].seller,\n        msg.sender, sellerAmount, block.timestamp);\n    }\n\n    function checkBalanceOf (address userAddrr) public view returns ( \n    bool isGoldMember, bool isSilverMember, bool isBronzeMember, bool isStandardMember){ \n        \n        uint tokenIdOne = GetBalance(FatCats).balanceOf(userAddrr);\n        uint tokenIdTwo = GetBalance(FatLeopards).balanceOf(userAddrr);\n        uint tokenIdThree = GetBalance(FatTigers).balanceOf(userAddrr);\n        uint tokenIdFour = GetBalance(FatKittens).balanceOf(userAddrr);\n        \n        if (tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {\n            return ( true, true, true, true);\n        } else if (tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {\n            return ( false, true, true, true);\n        } else if (tokenIdThree > 0 && tokenIdFour > 0) {\n            return ( false, false, true, true);\n        } else if (tokenIdFour > 0) {\n            return ( false, false, false, true);\n        }\n    }\n\n\n    function editList(uint listIndex, uint price) public { \n        require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \");\n        require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender,\"You are not Owner\");\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price = price;\n    }\n\n    function CancleListForSale(uint listIndex) public { \n        require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \");\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].owner =_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller;\n        ERC721(Index[listIndex].contractAddress).transferFrom(address(this),_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller,Index[listIndex].TokenId);\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed = false;\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].count = listIndex;\n        Index[listIndex] = Index[_itemIds.current()];\n        _itemIds.decrement();\n        emit NFTCancel(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId,\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller,\n        msg.sender,\n        _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price);\n    }\n\n    function getAllListedNfts() public view returns (ListedNftTokenId[] memory) { \n    uint listNftCount = 0;\n    ListedNftTokenId[] memory getNFTtokenid = new ListedNftTokenId[](_itemIds.current());\n    \n    for (uint i = 1; i <= _itemIds.current(); i++) { \n        if (_items[Index[i].contractAddress][Index[i].TokenId].listed) {\n            getNFTtokenid[listNftCount] = ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId));\n            listNftCount++;\n        }\n    }\n    return getNFTtokenid;\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/fatcat/marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/fatcat/marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/fatcat/marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/fatcat/marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fatcat/marketplace.sol": {
				"GetBalance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addrr",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addrr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fatcat/marketplace.sol\":\"GetBalance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/fatcat/marketplace.sol\":{\"keccak256\":\"0xbd4eb17d488c6f940faee47157442f1fa14c553c46a9eaa087f6995b99185edf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1c218d1b56ee19e8eb58b9cf40d3c29c201d55debe8680a035256cfbe9f9ae\",\"dweb:/ipfs/QmWiFFRN66dGoKRVgaRAespLW5dkaxThHs5unTEx5gEra6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IConnected": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getTokenId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "count",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "minted",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "artist",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "uri",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "mintTime",
											"type": "uint256"
										}
									],
									"internalType": "struct IConnected.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenUri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								}
							],
							"name": "updateTokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTokenId(address)": "f1537686",
							"getTokenUri(uint256)": "8ad91345",
							"updateTokenId(address,uint256,address)": "6e0cee09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mintTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IConnected.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"updateTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fatcat/marketplace.sol\":\"IConnected\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/fatcat/marketplace.sol\":{\"keccak256\":\"0xbd4eb17d488c6f940faee47157442f1fa14c553c46a9eaa087f6995b99185edf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1c218d1b56ee19e8eb58b9cf40d3c29c201d55debe8680a035256cfbe9f9ae\",\"dweb:/ipfs/QmWiFFRN66dGoKRVgaRAespLW5dkaxThHs5unTEx5gEra6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "ArtistAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ArtistFee",
									"type": "uint256"
								}
							],
							"name": "Fee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTCancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "SoldTime",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								},
								{
									"internalType": "enum NFTMarketplace.memberShip",
									"name": "choice",
									"type": "uint8"
								}
							],
							"name": "Buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								}
							],
							"name": "CancleListForSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Index",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "TokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Sales",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Volume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_items",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "listed",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "artist",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "artistFeePerAge",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sellerFeePerAge",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "buyerFeePerAge",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddrr",
									"type": "address"
								}
							],
							"name": "checkBalanceOf",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isGoldMember",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isSilverMember",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isBronzeMember",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isStandardMember",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "commission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCommission",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "editList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllListedNfts",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "tokenId",
													"type": "uint256"
												},
												{
													"internalType": "address",
													"name": "seller",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "owner",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "price",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "count",
													"type": "uint256"
												},
												{
													"internalType": "bool",
													"name": "listed",
													"type": "bool"
												},
												{
													"internalType": "address",
													"name": "artist",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "artistFeePerAge",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "sellerFeePerAge",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "buyerFeePerAge",
													"type": "uint256"
												}
											],
											"internalType": "struct NFTMarketplace.NFTlist",
											"name": "listedData",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "Index",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "uriData",
											"type": "string"
										}
									],
									"internalType": "struct NFTMarketplace.ListedNftTokenId[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "artist",
									"type": "address"
								}
							],
							"name": "listItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum NFTMarketplace.memberShip",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "memberShipPer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fatcat/marketplace.sol\":1155:10487  contract NFTMarketplace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fatcat/marketplace.sol\":1440:1499  address FatCats= 0x5F31f088c0d692FF133bd3b11b923F4E1bE99E9B */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/fatcat/marketplace.sol\":1457:1499  0x5F31f088c0d692FF133bd3b11b923F4E1bE99E9B */\n  0x5f31f088c0d692ff133bd3b11b923f4e1be99e9b\n    /* \"contracts/fatcat/marketplace.sol\":1440:1499  address FatCats= 0x5F31f088c0d692FF133bd3b11b923F4E1bE99E9B */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1505:1568  address FatLeopards= 0xE2CBAdc3250Dc901596E1cDFFA778fc313162247 */\n  0x09\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/fatcat/marketplace.sol\":1526:1568  0xE2CBAdc3250Dc901596E1cDFFA778fc313162247 */\n  0xe2cbadc3250dc901596e1cdffa778fc313162247\n    /* \"contracts/fatcat/marketplace.sol\":1505:1568  address FatLeopards= 0xE2CBAdc3250Dc901596E1cDFFA778fc313162247 */\n  or\n  swap1\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1574:1635  address FatTigers= 0x572dD734F1068C1EDa13E0b655BC227b31AD8f72 */\n  0x0a\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/fatcat/marketplace.sol\":1593:1635  0x572dD734F1068C1EDa13E0b655BC227b31AD8f72 */\n  0x572dd734f1068c1eda13e0b655bc227b31ad8f72\n    /* \"contracts/fatcat/marketplace.sol\":1574:1635  address FatTigers= 0x572dD734F1068C1EDa13E0b655BC227b31AD8f72 */\n  or\n  swap1\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1641:1703  address FatKittens= 0xE533f399513F8Ed44D7E12E458d532Fe7005CF4e */\n  0x0b\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/fatcat/marketplace.sol\":1661:1703  0xE533f399513F8Ed44D7E12E458d532Fe7005CF4e */\n  0xe533f399513f8ed44d7e12e458d532fe7005cf4e\n    /* \"contracts/fatcat/marketplace.sol\":1641:1703  address FatKittens= 0xE533f399513F8Ed44D7E12E458d532Fe7005CF4e */\n  or\n  swap1\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1714:1961  constructor(address owner) Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/fatcat/marketplace.sol\":1749:1759  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"contracts/fatcat/marketplace.sol\":1766:1779  memberShipPer */\n  0x0c\n    /* \"contracts/fatcat/marketplace.sol\":1766:1796  memberShipPer[memberShip.Gold] */\n  0x20\n  mstore\n    /* \"contracts/fatcat/marketplace.sol\":1799:1800  0 */\n  0x00\n    /* \"contracts/fatcat/marketplace.sol\":1766:1796  memberShipPer[memberShip.Gold] */\n  0x13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e8\n    /* \"contracts/fatcat/marketplace.sol\":1766:1800  memberShipPer[memberShip.Gold] = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1841:1842  3 */\n  0x03\n    /* \"contracts/fatcat/marketplace.sol\":1806:1838  memberShipPer[memberShip.Silver] */\n  0xd421a5181c571bba3f01190c922c3b2a896fc1d84e86c9f17ac10e67ebef8b5c\n    /* \"contracts/fatcat/marketplace.sol\":1806:1842  memberShipPer[memberShip.Silver] = 3 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1883:1884  4 */\n  0x04\n    /* \"contracts/fatcat/marketplace.sol\":1848:1880  memberShipPer[memberShip.Bronze] */\n  0x5d6016397a73f5e079297ac5a36fef17b4d9c3831618e63ab105738020ddd720\n    /* \"contracts/fatcat/marketplace.sol\":1848:1884  memberShipPer[memberShip.Bronze] = 4 */\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1890:1924  memberShipPer[memberShip.Standard] */\n  swap1\n  mstore\n    /* \"contracts/fatcat/marketplace.sol\":1927:1928  5 */\n  0x05\n    /* \"contracts/fatcat/marketplace.sol\":1890:1924  memberShipPer[memberShip.Standard] */\n  0xc0da782485e77ae272268ae0a3ff44c1552ecb60b3743924de17a815e0a3cfd7\n    /* \"contracts/fatcat/marketplace.sol\":1890:1928  memberShipPer[memberShip.Standard] = 5 */\n  sstore\n    /* \"contracts/fatcat/marketplace.sol\":1155:10487  contract NFTMarketplace is Ownable {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_34:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_35:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":517:644   */\ntag_32:\n    /* \"contracts/fatcat/marketplace.sol\":1155:10487  contract NFTMarketplace is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fatcat/marketplace.sol\":1155:10487  contract NFTMarketplace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7c7ce62d\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9f5e6fd9\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x9f5e6fd9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb50c0d20\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbc4bc9c8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x7c7ce62d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x93f31109\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95ce4a3b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6081a0dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x6081a0dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x62590604\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x752cd654\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x03147f39\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1065cf73\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3529280b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fatcat/marketplace.sol\":7502:8425  function checkBalanceOf (address userAddrr) public view returns ( ... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":711:725   */\n      swap5\n      iszero\n        /* \"#utility.yul\":704:726   */\n      iszero\n        /* \"#utility.yul\":686:727   */\n      dup6\n      mstore\n        /* \"#utility.yul\":770:784   */\n      swap3\n      iszero\n        /* \"#utility.yul\":763:785   */\n      iszero\n        /* \"#utility.yul\":758:760   */\n      0x20\n        /* \"#utility.yul\":743:761   */\n      dup6\n      add\n        /* \"#utility.yul\":736:786   */\n      mstore\n        /* \"#utility.yul\":829:843   */\n      swap1\n      iszero\n        /* \"#utility.yul\":822:844   */\n      iszero\n        /* \"#utility.yul\":802:820   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":795:845   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":888:902   */\n      iszero\n        /* \"#utility.yul\":881:903   */\n      iszero\n        /* \"#utility.yul\":876:878   */\n      0x60\n        /* \"#utility.yul\":861:879   */\n      dup3\n      add\n        /* \"#utility.yul\":854:904   */\n      mstore\n        /* \"#utility.yul\":673:676   */\n      0x80\n        /* \"#utility.yul\":658:677   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7502:8425  function checkBalanceOf (address userAddrr) public view returns ( ... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fatcat/marketplace.sol\":3127:3176  mapping(uint => commissionData) public commission */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_28:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1320:1345   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1361:1379   */\n      dup4\n      add\n        /* \"#utility.yul\":1354:1388   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1293:1311   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":3127:3176  mapping(uint => commissionData) public commission */\n      tag_25\n        /* \"#utility.yul\":1146:1394   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":3182:3216  mapping(uint => uint) public Sales */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_36:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1545:1570   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1533:1535   */\n      0x20\n        /* \"#utility.yul\":1518:1536   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":3182:3216  mapping(uint => uint) public Sales */\n      tag_25\n        /* \"#utility.yul\":1399:1576   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":8432:8826  function editList(uint listIndex, uint price) public { ... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/fatcat/marketplace.sol\":4600:7496  function Buy(uint listIndex, memberShip choice) public payable { ... */\n    tag_6:\n      tag_41\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_41\n      tag_51\n      jump\t// in\n        /* \"contracts/fatcat/marketplace.sol\":3079:3120  mapping(uint => VolumeData) public Volume */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_28\n      tag_54\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_54:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":3910:4593  function listItem( address mintContract , uint _tokenId, string memory uri, uint256 price, address artist) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_41\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4361:4412   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4349:4351   */\n      0x20\n        /* \"#utility.yul\":4334:4352   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":4215:4418   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":2944:3025  mapping(address mintContractAddress=> mapping (uint256 => NFTlist)) public _items */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      0x0d\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      dup8\n      add\n      sload\n      0x07\n      dup9\n      add\n      sload\n      0x08\n      swap1\n      swap9\n      add\n      sload\n      swap7\n      swap8\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      swap8\n      swap6\n      dup8\n      and\n      swap7\n      swap5\n      swap6\n      swap4\n      swap5\n      0xff\n      dup5\n      and\n      swap5\n      0x0100\n      swap1\n      swap5\n      div\n      and\n      swap3\n      dup11\n      jump\n    tag_68:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5121:5146   */\n      swap11\n      dup12\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5182:5214   */\n      swap10\n      dup11\n      and\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"#utility.yul\":5162:5180   */\n      dup13\n      add\n        /* \"#utility.yul\":5155:5215   */\n      mstore\n        /* \"#utility.yul\":5251:5283   */\n      swap8\n      dup10\n      and\n        /* \"#utility.yul\":5231:5249   */\n      swap8\n      dup11\n      add\n        /* \"#utility.yul\":5224:5284   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":5315:5317   */\n      0x60\n        /* \"#utility.yul\":5300:5318   */\n      dup10\n      add\n        /* \"#utility.yul\":5293:5327   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":5358:5361   */\n      0x80\n        /* \"#utility.yul\":5343:5362   */\n      dup9\n      add\n        /* \"#utility.yul\":5336:5371   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":5415:5429   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5408:5430   */\n      iszero\n        /* \"#utility.yul\":5202:5205   */\n      0xa0\n        /* \"#utility.yul\":5387:5406   */\n      dup8\n      add\n        /* \"#utility.yul\":5380:5431   */\n      mstore\n        /* \"#utility.yul\":5468:5500   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5462:5465   */\n      0xc0\n        /* \"#utility.yul\":5447:5466   */\n      dup6\n      add\n        /* \"#utility.yul\":5440:5501   */\n      mstore\n        /* \"#utility.yul\":5532:5535   */\n      0xe0\n        /* \"#utility.yul\":5517:5536   */\n      dup5\n      add\n        /* \"#utility.yul\":5510:5545   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5576:5579   */\n      0x0100\n        /* \"#utility.yul\":5561:5580   */\n      dup4\n      add\n        /* \"#utility.yul\":5554:5589   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5620:5623   */\n      0x0120\n        /* \"#utility.yul\":5605:5624   */\n      dup3\n      add\n        /* \"#utility.yul\":5598:5633   */\n      mstore\n        /* \"#utility.yul\":5108:5111   */\n      0x0140\n        /* \"#utility.yul\":5093:5112   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":2944:3025  mapping(address mintContractAddress=> mapping (uint256 => NFTlist)) public _items */\n      tag_25\n        /* \"#utility.yul\":4728:5639   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":9900:10484  function getAllListedNfts() public view returns (ListedNftTokenId[] memory) { ... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n        /* \"contracts/fatcat/marketplace.sol\":8832:9894  function CancleListForSale(uint listIndex) public { ... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_41\n      tag_81\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/fatcat/marketplace.sol\":2550:2599  mapping (memberShip => uint) public memberShipPer */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_35\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":3031:3073  mapping(uint => tokenAddress) public Index */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_91:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\n    tag_90:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8474:8506   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8456:8507   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8538:8540   */\n      0x20\n        /* \"#utility.yul\":8523:8541   */\n      dup4\n      add\n        /* \"#utility.yul\":8516:8550   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8429:8447   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":3031:3073  mapping(uint => tokenAddress) public Index */\n      tag_25\n        /* \"#utility.yul\":8282:8556   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_41\n      tag_97\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/fatcat/marketplace.sol\":7502:8425  function checkBalanceOf (address userAddrr) public view returns ( ... */\n    tag_24:\n        /* \"contracts/fatcat/marketplace.sol\":7705:7712  FatCats */\n      sload(0x08)\n        /* \"contracts/fatcat/marketplace.sol\":7694:7734  GetBalance(FatCats).balanceOf(userAddrr) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4379:4411   */\n      dup4\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":7694:7734  GetBalance(FatCats).balanceOf(userAddrr) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7573:7590  bool isGoldMember */\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"contracts/fatcat/marketplace.sol\":7705:7712  FatCats */\n      swap2\n      and\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":7694:7723  GetBalance(FatCats).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7694:7734  GetBalance(FatCats).balanceOf(userAddrr) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/fatcat/marketplace.sol\":7773:7784  FatLeopards */\n      sload(0x09)\n        /* \"contracts/fatcat/marketplace.sol\":7762:7806  GetBalance(FatLeopards).balanceOf(userAddrr) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4379:4411   */\n      dup10\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":7762:7806  GetBalance(FatLeopards).balanceOf(userAddrr) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7676:7734  uint tokenIdOne = GetBalance(FatCats).balanceOf(userAddrr) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7744:7759  uint tokenIdTwo */\n      0x00\n      swap3\n        /* \"contracts/fatcat/marketplace.sol\":7773:7784  FatLeopards */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":7762:7795  GetBalance(FatLeopards).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7762:7806  GetBalance(FatLeopards).balanceOf(userAddrr) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_108:\n        /* \"contracts/fatcat/marketplace.sol\":7847:7856  FatTigers */\n      sload(0x0a)\n        /* \"contracts/fatcat/marketplace.sol\":7836:7878  GetBalance(FatTigers).balanceOf(userAddrr) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4379:4411   */\n      dup11\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":7836:7878  GetBalance(FatTigers).balanceOf(userAddrr) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7744:7806  uint tokenIdTwo = GetBalance(FatLeopards).balanceOf(userAddrr) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7816:7833  uint tokenIdThree */\n      0x00\n      swap3\n        /* \"contracts/fatcat/marketplace.sol\":7847:7856  FatTigers */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":7836:7867  GetBalance(FatTigers).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7836:7878  GetBalance(FatTigers).balanceOf(userAddrr) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_112:\n        /* \"contracts/fatcat/marketplace.sol\":7918:7928  FatKittens */\n      sload(0x0b)\n        /* \"contracts/fatcat/marketplace.sol\":7907:7950  GetBalance(FatKittens).balanceOf(userAddrr) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4379:4411   */\n      dup12\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":7907:7950  GetBalance(FatKittens).balanceOf(userAddrr) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7816:7878  uint tokenIdThree = GetBalance(FatTigers).balanceOf(userAddrr) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7888:7904  uint tokenIdFour */\n      0x00\n      swap3\n        /* \"contracts/fatcat/marketplace.sol\":7918:7928  FatKittens */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":7907:7939  GetBalance(FatKittens).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7907:7950  GetBalance(FatKittens).balanceOf(userAddrr) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_116:\n        /* \"contracts/fatcat/marketplace.sol\":7888:7950  uint tokenIdFour = GetBalance(FatKittens).balanceOf(userAddrr) */\n      swap1\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7986:7987  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":7973:7983  tokenIdOne */\n      dup5\n        /* \"contracts/fatcat/marketplace.sol\":7973:7987  tokenIdOne > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":7973:8005  tokenIdOne > 0 && tokenIdTwo > 0 */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8004:8005  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":7991:8001  tokenIdTwo */\n      dup4\n        /* \"contracts/fatcat/marketplace.sol\":7991:8005  tokenIdTwo > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":7973:8005  tokenIdOne > 0 && tokenIdTwo > 0 */\n    tag_117:\n        /* \"contracts/fatcat/marketplace.sol\":7973:8025  tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8024:8025  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8009:8021  tokenIdThree */\n      dup3\n        /* \"contracts/fatcat/marketplace.sol\":8009:8025  tokenIdThree > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":7973:8025  tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 */\n    tag_118:\n        /* \"contracts/fatcat/marketplace.sol\":7973:8044  tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8043:8044  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8029:8040  tokenIdFour */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":8029:8044  tokenIdFour > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":7973:8044  tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0 */\n    tag_119:\n        /* \"contracts/fatcat/marketplace.sol\":7969:8419  if (tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":8069:8073  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8075:8079  true */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8081:8085  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8087:8091  true */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8060:8092  return ( true, true, true, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_99)\n        /* \"contracts/fatcat/marketplace.sol\":7969:8419  if (tokenIdOne > 0 && tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {... */\n    tag_120:\n        /* \"contracts/fatcat/marketplace.sol\":8126:8127  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8113:8123  tokenIdTwo */\n      dup4\n        /* \"contracts/fatcat/marketplace.sol\":8113:8127  tokenIdTwo > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":8113:8147  tokenIdTwo > 0 && tokenIdThree > 0 */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8146:8147  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8131:8143  tokenIdThree */\n      dup3\n        /* \"contracts/fatcat/marketplace.sol\":8131:8147  tokenIdThree > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":8113:8147  tokenIdTwo > 0 && tokenIdThree > 0 */\n    tag_122:\n        /* \"contracts/fatcat/marketplace.sol\":8113:8166  tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0 */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8165:8166  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8151:8162  tokenIdFour */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":8151:8166  tokenIdFour > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":8113:8166  tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0 */\n    tag_123:\n        /* \"contracts/fatcat/marketplace.sol\":8109:8419  if (tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":8191:8196  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8198:8202  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8204:8208  true */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8210:8214  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8182:8215  return ( false, true, true, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_99)\n        /* \"contracts/fatcat/marketplace.sol\":8109:8419  if (tokenIdTwo > 0 && tokenIdThree > 0 && tokenIdFour > 0) {... */\n    tag_124:\n        /* \"contracts/fatcat/marketplace.sol\":8251:8252  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8236:8248  tokenIdThree */\n      dup3\n        /* \"contracts/fatcat/marketplace.sol\":8236:8252  tokenIdThree > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":8236:8271  tokenIdThree > 0 && tokenIdFour > 0 */\n      dup1\n      iszero\n      tag_126\n      jumpi\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":8270:8271  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8256:8267  tokenIdFour */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":8256:8271  tokenIdFour > 0 */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":8236:8271  tokenIdThree > 0 && tokenIdFour > 0 */\n    tag_126:\n        /* \"contracts/fatcat/marketplace.sol\":8232:8419  if (tokenIdThree > 0 && tokenIdFour > 0) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":8296:8301  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8303:8308  false */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8310:8314  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8316:8320  true */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8287:8321  return ( false, false, true, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_99)\n        /* \"contracts/fatcat/marketplace.sol\":8232:8419  if (tokenIdThree > 0 && tokenIdFour > 0) {... */\n    tag_127:\n        /* \"contracts/fatcat/marketplace.sol\":8342:8357  tokenIdFour > 0 */\n      dup1\n      iszero\n        /* \"contracts/fatcat/marketplace.sol\":8338:8419  if (tokenIdFour > 0) {... */\n      tag_129\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":8382:8387  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8389:8394  false */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":8396:8401  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8403:8407  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8373:8408  return ( false, false, false, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_99)\n        /* \"contracts/fatcat/marketplace.sol\":8338:8419  if (tokenIdFour > 0) {... */\n    tag_129:\n        /* \"contracts/fatcat/marketplace.sol\":7656:8425  { ... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7502:8425  function checkBalanceOf (address userAddrr) public view returns ( ... */\n    tag_99:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/fatcat/marketplace.sol\":8432:8826  function editList(uint listIndex, uint price) public { ... */\n    tag_44:\n        /* \"contracts/fatcat/marketplace.sol\":8504:8544  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8511:8527  Index[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8511:8516  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":8511:8527  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8511:8543  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8504:8544  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8504:8510  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":8504:8544  _items[Index[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8511:8543  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8545:8569  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":8504:8570  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8504:8577  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8496:8602  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8952:8954   */\n      0x20\n        /* \"contracts/fatcat/marketplace.sol\":8496:8602  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8934:8955   */\n      mstore\n        /* \"#utility.yul\":8991:8993   */\n      0x15\n        /* \"#utility.yul\":8971:8989   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8964:8994   */\n      mstore\n      shl(0x5d, 0x02a3434b99024ba32b6903737ba103634b9ba32b21)\n        /* \"#utility.yul\":9010:9028   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9003:9054   */\n      mstore\n        /* \"#utility.yul\":9071:9089   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":8496:8602  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/fatcat/marketplace.sol\":8620:8660  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8627:8643  Index[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8627:8632  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":8627:8643  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8627:8659  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8620:8660  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8620:8626  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":8620:8660  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8627:8659  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8661:8685  Index[listIndex].TokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":8620:8687  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId ] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8620:8694  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller */\n      swap1\n      swap2\n      add\n      sload\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8698:8708  msg.sender */\n      caller\n        /* \"contracts/fatcat/marketplace.sol\":8620:8708  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender */\n      eq\n        /* \"contracts/fatcat/marketplace.sol\":8612:8729  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender,\"You are not Owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9302:9304   */\n      0x20\n        /* \"contracts/fatcat/marketplace.sol\":8612:8729  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender,\"You are not Owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9284:9305   */\n      mstore\n        /* \"#utility.yul\":9341:9343   */\n      0x11\n        /* \"#utility.yul\":9321:9339   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9314:9344   */\n      mstore\n      shl(0x79, 0x2cb7ba9030b932903737ba1027bbb732b9)\n        /* \"#utility.yul\":9360:9378   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9353:9400   */\n      mstore\n        /* \"#utility.yul\":9417:9435   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":8612:8729  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender,\"You are not Owner\") */\n      tag_132\n        /* \"#utility.yul\":9100:9441   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":8612:8729  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId ].seller == msg.sender,\"You are not Owner\") */\n    tag_134:\n        /* \"contracts/fatcat/marketplace.sol\":8739:8779  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8746:8762  Index[listIndex] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8746:8751  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":8746:8762  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8746:8778  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8739:8779  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8739:8745  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":8739:8779  _items[Index[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8746:8778  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8780:8804  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":8739:8805  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8739:8811  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price */\n      0x03\n      add\n        /* \"contracts/fatcat/marketplace.sol\":8739:8819  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price = price */\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":8432:8826  function editList(uint listIndex, uint price) public { ... */\n      jump\t// out\n        /* \"contracts/fatcat/marketplace.sol\":4600:7496  function Buy(uint listIndex, memberShip choice) public payable { ... */\n    tag_48:\n        /* \"contracts/fatcat/marketplace.sol\":4674:4697  address contractAddress */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4700:4716  Index[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4700:4705  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":4700:4716  Index[listIndex] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4700:4732  Index[listIndex].contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":4757:4781  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4700:4732  Index[listIndex].contractAddress */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":4880:4883  100 */\n      0x64\n        /* \"contracts/fatcat/marketplace.sol\":4855:4868  memberShipPer */\n      0x0c\n        /* \"contracts/fatcat/marketplace.sol\":4674:4697  address contractAddress */\n      dup3\n        /* \"contracts/fatcat/marketplace.sol\":4869:4875  choice */\n      dup7\n        /* \"contracts/fatcat/marketplace.sol\":4855:4876  memberShipPer[choice] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_142\n      tag_140\n      jump\t// in\n    tag_142:\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4814:4837  _items[contractAddress] */\n      dup9\n      and\n      dup3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4814:4820  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":4814:4837  _items[contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4814:4846  _items[contractAddress][tokenId] */\n      dup8\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4814:4852  _items[contractAddress][tokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":4814:4876  _items[contractAddress][tokenId].price * memberShipPer[choice] */\n      tag_143\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":4855:4876  memberShipPer[choice] */\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":4814:4876  _items[contractAddress][tokenId].price * memberShipPer[choice] */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/fatcat/marketplace.sol\":4813:4883  (_items[contractAddress][tokenId].price * memberShipPer[choice]) / 100 */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4902:4925  _items[contractAddress] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4902:4908  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":4902:4925  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4902:4934  _items[contractAddress][tokenId] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4902:4941  _items[contractAddress][tokenId].seller */\n      0x01\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":4791:4883  uint memberPerAgeCal= (_items[contractAddress][tokenId].price * memberShipPer[choice]) / 100 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4945:4955  msg.sender */\n      caller\n        /* \"contracts/fatcat/marketplace.sol\":4902:4941  _items[contractAddress][tokenId].seller */\n      swap2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":4902:4955  _items[contractAddress][tokenId].seller != msg.sender */\n      sub\n        /* \"contracts/fatcat/marketplace.sol\":4894:4974  require(_items[contractAddress][tokenId].seller != msg.sender, \"Not the Seller\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10307:10309   */\n      0x20\n        /* \"contracts/fatcat/marketplace.sol\":4894:4974  require(_items[contractAddress][tokenId].seller != msg.sender, \"Not the Seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10289:10310   */\n      mstore\n        /* \"#utility.yul\":10346:10348   */\n      0x0e\n        /* \"#utility.yul\":10326:10344   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10319:10349   */\n      mstore\n      shl(0x91, 0x2737ba103a34329029b2b63632b9)\n        /* \"#utility.yul\":10365:10383   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10358:10402   */\n      mstore\n        /* \"#utility.yul\":10419:10437   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4894:4974  require(_items[contractAddress][tokenId].seller != msg.sender, \"Not the Seller\") */\n      tag_132\n        /* \"#utility.yul\":10105:10443   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":4894:4974  require(_items[contractAddress][tokenId].seller != msg.sender, \"Not the Seller\") */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5007:5030  _items[contractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5007:5013  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":5007:5030  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5007:5039  _items[contractAddress][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5007:5045  _items[contractAddress][tokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":5007:5063  _items[contractAddress][tokenId].price + memberPerAgeCal */\n      tag_150\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":5048:5063  memberPerAgeCal */\n      dup3\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":5007:5063  _items[contractAddress][tokenId].price + memberPerAgeCal */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"contracts/fatcat/marketplace.sol\":4992:5001  msg.value */\n      callvalue\n        /* \"contracts/fatcat/marketplace.sol\":4992:5064  msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal) */\n      lt\n      iszero\n        /* \"contracts/fatcat/marketplace.sol\":4984:5085  require(msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal), \"Not enough price\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10780:10782   */\n      0x20\n        /* \"contracts/fatcat/marketplace.sol\":4984:5085  require(msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal), \"Not enough price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10762:10783   */\n      mstore\n        /* \"#utility.yul\":10819:10821   */\n      0x10\n        /* \"#utility.yul\":10799:10817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10792:10822   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f756768207072696365)\n        /* \"#utility.yul\":10838:10856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10831:10877   */\n      mstore\n        /* \"#utility.yul\":10894:10912   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4984:5085  require(msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal), \"Not enough price\") */\n      tag_132\n        /* \"#utility.yul\":10578:10918   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":4984:5085  require(msg.value >=  (_items[contractAddress][tokenId].price + memberPerAgeCal), \"Not enough price\") */\n    tag_152:\n        /* \"contracts/fatcat/marketplace.sol\":5095:5165  ERC721(contractAddress).transferFrom(address(this),msg.sender,tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5140:5144  this */\n      address\n        /* \"contracts/fatcat/marketplace.sol\":5095:5165  ERC721(contractAddress).transferFrom(address(this),msg.sender,tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11125:11176   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5146:5156  msg.sender */\n      caller\n        /* \"#utility.yul\":11192:11210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11185:11245   */\n      mstore\n        /* \"#utility.yul\":11261:11279   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11254:11288   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5095:5131  ERC721(contractAddress).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11098:11116   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5095:5165  ERC721(contractAddress).transferFrom(address(this),msg.sender,tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5414:5437  _items[contractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5414:5420  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":5414:5437  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5414:5446  _items[contractAddress][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5414:5452  _items[contractAddress][tokenId].count */\n      0x04\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":5414:5457  _items[contractAddress][tokenId].count == 0 */\n      swap1\n      sub\n        /* \"contracts/fatcat/marketplace.sol\":5411:5713  if(_items[contractAddress][tokenId].count == 0){... */\n      tag_160\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5517:5540  _items[contractAddress] */\n      dup4\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5517:5523  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":5517:5540  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5517:5549  _items[contractAddress][tokenId] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5517:5556  _items[contractAddress][tokenId].seller */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":5476:5515  _items[contractAddress][tokenId].artist */\n      0x05\n      dup3\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5476:5556  _items[contractAddress][tokenId].artist =_items[contractAddress][tokenId].seller */\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":5517:5556  _items[contractAddress][tokenId].seller */\n      swap2\n      swap1\n      swap4\n      and\n      0x0100\n        /* \"contracts/fatcat/marketplace.sol\":5476:5556  _items[contractAddress][tokenId].artist =_items[contractAddress][tokenId].seller */\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5625:5627  85 */\n      0x55\n        /* \"contracts/fatcat/marketplace.sol\":5574:5622  _items[contractAddress][tokenId].artistFeePerAge */\n      0x06\n      dup3\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5574:5627  _items[contractAddress][tokenId].artistFeePerAge = 85 */\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5694:5696  15 */\n      0x0f\n        /* \"contracts/fatcat/marketplace.sol\":5645:5692  _items[contractAddress][tokenId].buyerFeePerAge */\n      0x08\n      swap1\n      swap2\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5645:5696  _items[contractAddress][tokenId].buyerFeePerAge= 15 */\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5411:5713  if(_items[contractAddress][tokenId].count == 0){... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5729:5752  _items[contractAddress] */\n      dup4\n      and\n        /* \"contracts/fatcat/marketplace.sol\":5770:5771  0 */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":5729:5752  _items[contractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5729:5735  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":5729:5752  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5729:5761  _items[contractAddress][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5729:5767  _items[contractAddress][tokenId].count */\n      0x04\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":5729:5771  _items[contractAddress][tokenId].count > 0 */\n      iszero\n        /* \"contracts/fatcat/marketplace.sol\":5726:5995  if(_items[contractAddress][tokenId].count > 0){ ... */\n      tag_161\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":5791:5814  _items[contractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":5791:5797  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":5791:5814  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5791:5823  _items[contractAddress][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":5842:5843  5 */\n      0x05\n        /* \"contracts/fatcat/marketplace.sol\":5791:5839  _items[contractAddress][tokenId].artistFeePerAge */\n      0x06\n      dup3\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5791:5843  _items[contractAddress][tokenId].artistFeePerAge = 5 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5910:5912  95 */\n      0x5f\n        /* \"contracts/fatcat/marketplace.sol\":5861:5909  _items[contractAddress][tokenId].sellerFeePerAge */\n      0x07\n      dup4\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5861:5912  _items[contractAddress][tokenId].sellerFeePerAge=95 */\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5930:5977  _items[contractAddress][tokenId].buyerFeePerAge */\n      0x08\n      swap1\n      swap2\n      add\n        /* \"contracts/fatcat/marketplace.sol\":5930:5980  _items[contractAddress][tokenId].buyerFeePerAge= 5 */\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":5726:5995  if(_items[contractAddress][tokenId].count > 0){ ... */\n    tag_161:\n        /* \"contracts/fatcat/marketplace.sol\":6109:6123  buyerFeePerAge */\n      sload(0x06)\n        /* \"contracts/fatcat/marketplace.sol\":6013:6029  uint buyerFeeCul */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6041:6057  Index[listIndex] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6041:6046  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":6041:6057  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6041:6073  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6034:6074  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6034:6040  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6034:6074  _items[Index[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6041:6073  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":6075:6099  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6034:6100  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6034:6106  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6013:6029  uint buyerFeeCul */\n      swap1\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6127:6131  1000 */\n      0x03e8\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6034:6123  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * buyerFeePerAge */\n      tag_162\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6109:6123  buyerFeePerAge */\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":6034:6123  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * buyerFeePerAge */\n      tag_144\n      jump\t// in\n    tag_162:\n        /* \"contracts/fatcat/marketplace.sol\":6033:6131  (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * buyerFeePerAge) / 1000 */\n      tag_163\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_163:\n        /* \"contracts/fatcat/marketplace.sol\":6237:6252  sellerFeePerAge */\n      sload(0x05)\n        /* \"contracts/fatcat/marketplace.sol\":6141:6158  uint sellerFeeCul */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6169:6185  Index[listIndex] */\n      dup9\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6169:6174  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":6169:6185  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6169:6201  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6162:6202  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6162:6168  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6162:6202  _items[Index[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6169:6201  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":6203:6227  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6162:6228  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6162:6234  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6013:6131  uint buyerFeeCul =  (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * buyerFeePerAge) / 1000 */\n      swap3\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":6141:6158  uint sellerFeeCul */\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6256:6260  1000 */\n      0x03e8\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6162:6252  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * sellerFeePerAge */\n      tag_164\n      swap2\n      tag_144\n      jump\t// in\n    tag_164:\n        /* \"contracts/fatcat/marketplace.sol\":6161:6260  (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * sellerFeePerAge) / 1000 */\n      tag_165\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_165:\n        /* \"contracts/fatcat/marketplace.sol\":6270:6287  uint artistFeePer */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6297:6313  Index[listIndex] */\n      dup9\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6297:6302  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":6297:6313  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6297:6329  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6290:6330  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6290:6296  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6290:6330  _items[Index[listIndex].contractAddress] */\n      dup1\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6297:6329  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":6331:6355  Index[listIndex].TokenId */\n      swap1\n      swap4\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6290:6356  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6290:6372  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge */\n      0x06\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6400:6423  _items[contractAddress] */\n      swap1\n      dup12\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6400:6432  _items[contractAddress][tokenId] */\n      dup10\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6400:6438  _items[contractAddress][tokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6141:6260  uint sellerFeeCul = (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price * sellerFeePerAge) / 1000 */\n      swap3\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":6290:6372  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge */\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6457:6460  100 */\n      0x64\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":6400:6453  _items[contractAddress][tokenId].price * artistFeePer */\n      tag_166\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":6290:6372  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge */\n      dup5\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":6400:6453  _items[contractAddress][tokenId].price * artistFeePer */\n      tag_144\n      jump\t// in\n    tag_166:\n        /* \"contracts/fatcat/marketplace.sol\":6399:6460  (_items[contractAddress][tokenId].price * artistFeePer) / 100 */\n      tag_167\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_167:\n        /* \"contracts/fatcat/marketplace.sol\":6382:6460  uint artistFee = (_items[contractAddress][tokenId].price * artistFeePer) / 100 */\n      swap1\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":6470:6487  uint sellerAmount */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6558:6570  sellerFeeCul */\n      dup4\n        /* \"contracts/fatcat/marketplace.sol\":6532:6555  artistFee + buyerFeeCul */\n      tag_168\n        /* \"contracts/fatcat/marketplace.sol\":6544:6555  buyerFeeCul */\n      dup7\n        /* \"contracts/fatcat/marketplace.sol\":6382:6460  uint artistFee = (_items[contractAddress][tokenId].price * artistFeePer) / 100 */\n      dup5\n        /* \"contracts/fatcat/marketplace.sol\":6532:6555  artistFee + buyerFeeCul */\n      tag_151\n      jump\t// in\n    tag_168:\n        /* \"contracts/fatcat/marketplace.sol\":6532:6570  artistFee + buyerFeeCul + sellerFeeCul */\n      tag_169\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":6490:6513  _items[contractAddress] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6490:6496  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6490:6513  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6490:6522  _items[contractAddress][tokenId] */\n      dup12\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6490:6528  _items[contractAddress][tokenId].price */\n      0x03\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6490:6571  _items[contractAddress][tokenId].price - (artistFee + buyerFeeCul + sellerFeeCul) */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/fatcat/marketplace.sol\":6590:6630  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6597:6613  Index[listIndex] */\n      dup12\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6597:6602  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":6597:6613  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6597:6629  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6590:6630  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6590:6596  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6590:6630  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6597:6629  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":6631:6655  Index[listIndex].TokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6590:6656  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6590:6663  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6582:6687  payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount) */\n      swap1\n      mload\n        /* \"contracts/fatcat/marketplace.sol\":6470:6571  uint sellerAmount = _items[contractAddress][tokenId].price - (artistFee + buyerFeeCul + sellerFeeCul) */\n      swap4\n      swap5\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":6590:6663  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      and\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6582:6687  payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6470:6571  uint sellerAmount = _items[contractAddress][tokenId].price - (artistFee + buyerFeeCul + sellerFeeCul) */\n      dup5\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6582:6687  payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount) */\n      swap1\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6590:6630  _items[Index[listIndex].contractAddress] */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6582:6687  payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount) */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6470:6571  uint sellerAmount = _items[contractAddress][tokenId].price - (artistFee + buyerFeeCul + sellerFeeCul) */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":6590:6663  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      dup9\n        /* \"contracts/fatcat/marketplace.sol\":6582:6687  payable(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller).transfer(sellerAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":6706:6746  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6713:6729  Index[listIndex] */\n      dup11\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6713:6718  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":6713:6729  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6713:6745  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6706:6746  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6706:6712  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6706:6746  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6713:6745  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":6747:6771  Index[listIndex].TokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6706:6772  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6706:6779  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist */\n      0x05\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6697:6800  payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee) */\n      swap1\n      mload\n        /* \"contracts/fatcat/marketplace.sol\":6713:6745  Index[listIndex].contractAddress */\n      0x0100\n        /* \"contracts/fatcat/marketplace.sol\":6706:6779  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist */\n      swap1\n      swap2\n      div\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6697:6800  payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6790:6799  artistFee */\n      dup6\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6697:6800  payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee) */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6706:6746  _items[Index[listIndex].contractAddress] */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6697:6800  payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee) */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6790:6799  artistFee */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":6706:6779  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist */\n      dup9\n        /* \"contracts/fatcat/marketplace.sol\":6697:6800  payable (_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist).transfer(artistFee) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6810:6848  payable(owner()).transfer(buyerFeeCul) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6810:6848  payable(owner()).transfer(buyerFeeCul) */\n      dup8\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6836:6847  buyerFeeCul */\n      dup9\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6810:6848  payable(owner()).transfer(buyerFeeCul) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6810:6848  payable(owner()).transfer(buyerFeeCul) */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6836:6847  buyerFeeCul */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"contracts/fatcat/marketplace.sol\":6810:6848  payable(owner()).transfer(buyerFeeCul) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":6858:6900  payable(owner()).transfer(memberPerAgeCal) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6858:6900  payable(owner()).transfer(memberPerAgeCal) */\n      dup9\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6884:6899  memberPerAgeCal */\n      dup10\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":6858:6900  payable(owner()).transfer(memberPerAgeCal) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6858:6900  payable(owner()).transfer(memberPerAgeCal) */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":6884:6899  memberPerAgeCal */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"contracts/fatcat/marketplace.sol\":6858:6900  payable(owner()).transfer(memberPerAgeCal) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":6910:6933  _items[contractAddress] */\n      dup9\n      and\n        /* \"contracts/fatcat/marketplace.sol\":6952:6957  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":6910:6933  _items[contractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":6910:6916  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":6910:6933  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6910:6942  _items[contractAddress][tokenId] */\n      dup11\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":6910:6949  _items[contractAddress][tokenId].listed */\n      0x05\n      dup2\n      add\n        /* \"contracts/fatcat/marketplace.sol\":6910:6957  _items[contractAddress][tokenId].listed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":7024:7062  _items[contractAddress][tokenId].count */\n      0x04\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7024:7064  _items[contractAddress][tokenId].count++ */\n      dup1\n      sload\n      swap2\n      tag_182\n      dup4\n      tag_183\n      jump\t// in\n    tag_182:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":7093:7098  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":7093:7118  Index[_itemIds.current()] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":7099:7117  _itemIds.current() */\n      tag_184\n        /* \"contracts/fatcat/marketplace.sol\":7099:7107  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":7099:7117  _itemIds.current() */\n    tag_184:\n        /* \"contracts/fatcat/marketplace.sol\":7093:7118  Index[_itemIds.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7075:7091  Index[listIndex] */\n      dup14\n      dup3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7075:7080  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":7075:7091  Index[listIndex] */\n      swap1\n      swap4\n      mstore\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7075:7118  Index[listIndex]= Index[_itemIds.current()] */\n      dup2\n      sload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      0x01\n      swap2\n      dup3\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":7128:7148  _itemIds.decrement() */\n      tag_186\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":7128:7146  _itemIds.decrement */\n      tag_187\n        /* \"contracts/fatcat/marketplace.sol\":7128:7148  _itemIds.decrement() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/fatcat/marketplace.sol\":7167:7207  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":7174:7190  Index[listIndex] */\n      dup11\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7174:7179  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":7174:7190  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7174:7206  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":7167:7207  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7167:7173  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":7167:7207  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7174:7206  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":7208:7232  Index[listIndex].TokenId */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":7167:7233  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7167:7240  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":7241:7323  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge */\n      0x06\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":7163:7324  Fee(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge) */\n      dup3\n      mload\n        /* \"contracts/fatcat/marketplace.sol\":7174:7206  Index[listIndex].contractAddress */\n      0x0100\n        /* \"contracts/fatcat/marketplace.sol\":7167:7240  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist */\n      swap1\n      swap3\n      div\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":8456:8507   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8523:8541   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":8516:8550   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7163:7324  Fee(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge) */\n      0x7bd3aa7d673767f759ebf216e7f6c12844986c661ae6e0f1d988cf7eb7394d1d\n      swap2\n        /* \"#utility.yul\":8429:8447   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":7163:7324  Fee(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artist,_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].artistFeePerAge) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":7347:7370  _items[contractAddress] */\n      dup9\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7347:7353  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":7347:7370  _items[contractAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7347:7379  _items[contractAddress][tokenId] */\n      dup12\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":7347:7387  _items[contractAddress][tokenId].tokenId */\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":7398:7437  _items[contractAddress][tokenId].seller */\n      0x01\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":7339:7489  NFTSold(_items[contractAddress][tokenId].tokenId ,... */\n      dup4\n      mload\n        /* \"#utility.yul\":11831:11856   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7398:7437  _items[contractAddress][tokenId].seller */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":11872:11890   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":11865:11925   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7447:7457  msg.sender */\n      caller\n        /* \"#utility.yul\":11941:11959   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":11934:11994   */\n      mstore\n        /* \"#utility.yul\":12025:12027   */\n      0x60\n        /* \"#utility.yul\":12010:12028   */\n      dup3\n      add\n        /* \"#utility.yul\":12003:12037   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7473:7488  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":12068:12071   */\n      0x80\n        /* \"#utility.yul\":12053:12072   */\n      dup4\n      add\n        /* \"#utility.yul\":12046:12081   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":7339:7489  NFTSold(_items[contractAddress][tokenId].tokenId ,... */\n      mload\n      0x5fafad85dec201c2e73b6a2bef6351129304a624ea8720ecd04cd7f04d83bc39\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":11818:11821   */\n      0xa0\n        /* \"contracts/fatcat/marketplace.sol\":7339:7489  NFTSold(_items[contractAddress][tokenId].tokenId ,... */\n      add\n      swap1\n      log1\n        /* \"contracts/fatcat/marketplace.sol\":4663:7496  { ... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4600:7496  function Buy(uint listIndex, memberShip choice) public payable { ... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/fatcat/marketplace.sol\":3910:4593  function listItem( address mintContract , uint _tokenId, string memory uri, uint256 price, address artist) public {... */\n    tag_61:\n        /* \"contracts/fatcat/marketplace.sol\":4034:4054  _itemIds.increment() */\n      tag_198\n        /* \"contracts/fatcat/marketplace.sol\":4034:4042  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":4034:4054  _itemIds.increment() */\n    tag_198:\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      mload(0x40)\n      dup1\n      0x0140\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":4133:4141  _tokenId */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4142:4152  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4161:4165  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4168:4173  price */\n      dup4\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4174:4180  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":4174:4194  _items[mintContract] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4181:4193  mintContract */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4174:4194  _items[mintContract] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4174:4204  _items[mintContract][_tokenId] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4195:4203  _tokenId */\n      dup8\n        /* \"contracts/fatcat/marketplace.sol\":4174:4204  _items[mintContract][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4174:4210  _items[mintContract][_tokenId].count */\n      0x04\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4212:4216  true */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4219:4225  artist */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4227:4242  artistFeePerAge */\n      sload(0x04)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4243:4258  sellerFeePerAge */\n      sload(0x05)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4259:4273  buyerFeePerAge */\n      sload(0x06)\n        /* \"contracts/fatcat/marketplace.sol\":4124:4274  NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4092:4098  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":4092:4112  _items[mintContract] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4099:4111  mintContract */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4092:4112  _items[mintContract] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4092:4122  _items[mintContract][_tokenId] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4113:4121  _tokenId */\n      dup7\n        /* \"contracts/fatcat/marketplace.sol\":4092:4122  _items[mintContract][_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4092:4274  _items[mintContract][_tokenId]= NFTlist( _tokenId,msg.sender,address(this), price,_items[mintContract][_tokenId].count ,true , artist ,artistFeePerAge,sellerFeePerAge,buyerFeePerAge) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      0x0120\n      dup3\n      add\n      mload\n      dup2\n      0x08\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4312:4348  tokenAddress(mintContract,_tokenId ) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":4325:4337  mintContract */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat/marketplace.sol\":4312:4348  tokenAddress(mintContract,_tokenId ) */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4338:4346  _tokenId */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":4312:4348  tokenAddress(mintContract,_tokenId ) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4284:4289  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":4284:4309  Index[_itemIds.current()] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4290:4308  _itemIds.current() */\n      tag_201\n        /* \"contracts/fatcat/marketplace.sol\":4290:4298  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":4290:4308  _itemIds.current() */\n    tag_201:\n        /* \"contracts/fatcat/marketplace.sol\":4284:4309  Index[_itemIds.current()] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4284:4348  Index[_itemIds.current()] = tokenAddress(mintContract,_tokenId ) */\n      dup4\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      swap4\n      swap1\n      swap3\n      add\n      mload\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":4358:4426  ERC721(mintContract).transferFrom(msg.sender,address(this),_tokenId) */\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4392:4402  msg.sender */\n      caller\n        /* \"contracts/fatcat/marketplace.sol\":4358:4426  ERC721(mintContract).transferFrom(msg.sender,address(this),_tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11125:11176   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4411:4415  this */\n      address\n        /* \"#utility.yul\":11192:11210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11185:11245   */\n      mstore\n        /* \"#utility.yul\":11261:11279   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11254:11288   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4358:4391  ERC721(mintContract).transferFrom */\n      swap1\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11098:11116   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":4358:4426  ERC721(mintContract).transferFrom(msg.sender,address(this),_tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4458:4493  VolumeData(price , block.timestamp) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup6\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4477:4492  block.timestamp */\n      timestamp\n        /* \"contracts/fatcat/marketplace.sol\":4458:4493  VolumeData(price , block.timestamp) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4443:4454  totalVolume */\n      0x03\n      dup1\n      sload\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":4436:4455  Volume[totalVolume] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":4436:4442  Volume */\n      0x0f\n        /* \"contracts/fatcat/marketplace.sol\":4436:4455  Volume[totalVolume] */\n      swap1\n      swap3\n      mstore\n      swap4\n      dup2\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":4436:4493  Volume[totalVolume] = VolumeData(price , block.timestamp) */\n      swap3\n      mload\n      dup4\n      sstore\n      swap1\n      mload\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":4503:4516  totalVolume++ */\n      dup2\n      sload\n      swap4\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4443:4454  totalVolume */\n      swap1\n      swap2\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4503:4516  totalVolume++ */\n      tag_206\n      dup4\n      tag_183\n      jump\t// in\n    tag_206:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":4543:4551  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":4563:4573  msg.sender */\n      caller\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":4531:4586  ItemCreated(_itemIds.current(), msg.sender, uri, price) */\n      0x1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a8\n        /* \"contracts/fatcat/marketplace.sol\":4575:4578  uri */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":4580:4585  price */\n      dup6\n        /* \"contracts/fatcat/marketplace.sol\":4531:4586  ItemCreated(_itemIds.current(), msg.sender, uri, price) */\n      mload(0x40)\n      tag_208\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/fatcat/marketplace.sol\":3910:4593  function listItem( address mintContract , uint _tokenId, string memory uri, uint256 price, address artist) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fatcat/marketplace.sol\":9900:10484  function getAllListedNfts() public view returns (ListedNftTokenId[] memory) { ... */\n    tag_76:\n        /* \"contracts/fatcat/marketplace.sol\":9949:9974  ListedNftTokenId[] memory */\n      0x60\n        /* \"contracts/fatcat/marketplace.sol\":9983:10000  uint listNftCount */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":10010:10049  ListedNftTokenId[] memory getNFTtokenid */\n      dup1\n        /* \"contracts/fatcat/marketplace.sol\":10075:10093  _itemIds.current() */\n      tag_212\n        /* \"contracts/fatcat/marketplace.sol\":10075:10083  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":10075:10093  _itemIds.current() */\n    tag_212:\n        /* \"contracts/fatcat/marketplace.sol\":10052:10094  new ListedNftTokenId[](_itemIds.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_214\n      jumpi\n      tag_214\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_216\n      jumpi\n      dup2\n      0x20\n      add\n    tag_217:\n      0x40\n      dup1\n      mload\n      0x01a0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      0x60\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      0x80\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xa0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xc0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0xe0\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0100\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0120\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0140\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0160\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x0180\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_217\n      jumpi\n      swap1\n      pop\n    tag_216:\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10010:10094  ListedNftTokenId[] memory getNFTtokenid = new ListedNftTokenId[](_itemIds.current()) */\n      swap1\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10119:10120  1 */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":10105:10452  for (uint i = 1; i <= _itemIds.current(); i++) { ... */\n    tag_220:\n        /* \"contracts/fatcat/marketplace.sol\":10127:10135  _itemIds */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":10122:10123  i */\n      dup2\n        /* \"contracts/fatcat/marketplace.sol\":10122:10145  i <= _itemIds.current() */\n      gt\n        /* \"contracts/fatcat/marketplace.sol\":10105:10452  for (uint i = 1; i <= _itemIds.current(); i++) { ... */\n      tag_221\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":10167:10199  _items[Index[i].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":10174:10182  Index[i] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10174:10179  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":10174:10182  Index[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10174:10198  Index[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":10167:10199  _items[Index[i].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10167:10173  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":10167:10199  _items[Index[i].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10174:10198  Index[i].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":10200:10216  Index[i].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":10167:10217  _items[Index[i].contractAddress][Index[i].TokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10167:10224  _items[Index[i].contractAddress][Index[i].TokenId].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/fatcat/marketplace.sol\":10163:10446  if (_items[Index[i].contractAddress][Index[i].TokenId].listed) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/fatcat/marketplace.sol\":10270:10407  ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      0x40\n      dup1\n      mload\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":10294:10302  Index[i] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10294:10299  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":10294:10302  Index[i] */\n      0x20\n      dup2\n      dup2\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10294:10318  Index[i].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":10287:10319  _items[Index[i].contractAddress] */\n      dup1\n      dup7\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10287:10293  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":10287:10319  _items[Index[i].contractAddress] */\n      dup5\n      mstore\n      dup8\n      dup7\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10294:10318  Index[i].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":10320:10336  Index[i].TokenId */\n      swap4\n      dup5\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":10287:10337  _items[Index[i].contractAddress][Index[i].TokenId] */\n      dup1\n      dup9\n      mstore\n      swap1\n      dup6\n      mstore\n      dup9\n      dup8\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":10270:10407  ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      0x01a0\n      dup10\n      add\n      dup11\n      mstore\n      dup1\n      sload\n      0x60\n      dup11\n      add\n      swap1\n      dup2\n      mstore\n      swap5\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup11\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      dup5\n      and\n      0xa0\n      dup11\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0xc0\n      dup11\n      add\n      mstore\n      0x04\n      dup1\n      dup3\n      add\n      sload\n      0xe0\n      dup12\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      0xff\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/fatcat/marketplace.sol\":10294:10318  Index[i].contractAddress */\n      0x0100\n        /* \"contracts/fatcat/marketplace.sol\":10270:10407  ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      dup1\n      dup14\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      div\n      swap1\n      swap5\n      and\n      0x0120\n      dup11\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0x0140\n      dup11\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0x0160\n      dup11\n      add\n      mstore\n      0x08\n      add\n      sload\n      0x0180\n      dup10\n      add\n      mstore\n      swap3\n      dup8\n      mstore\n      dup4\n      dup8\n      add\n      dup10\n      swap1\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10351:10359  Index[i] */\n      swap5\n      dup9\n      swap1\n      mstore\n      swap3\n      swap1\n      swap2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10340:10406  IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId) */\n      dup5\n      mload\n      shl(0xe0, 0x8ad91345)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1545:1570   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":10270:10407  ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      swap2\n      swap3\n      dup4\n      add\n      swap2\n        /* \"contracts/fatcat/marketplace.sol\":10340:10388  IConnected(Index[i].contractAddress).getTokenUri */\n      0x8ad91345\n      swap1\n        /* \"#utility.yul\":1518:1536   */\n      0x24\n      add\n        /* \"contracts/fatcat/marketplace.sol\":10340:10406  IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_228\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/fatcat/marketplace.sol\":10270:10407  ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10240:10253  getNFTtokenid */\n      dup3\n        /* \"contracts/fatcat/marketplace.sol\":10254:10266  listNftCount */\n      dup5\n        /* \"contracts/fatcat/marketplace.sol\":10240:10267  getNFTtokenid[listNftCount] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_232\n      jump\t// in\n    tag_231:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/fatcat/marketplace.sol\":10240:10407  getNFTtokenid[listNftCount] = ListedNftTokenId(_items[Index[i].contractAddress][Index[i].TokenId],i,IConnected(Index[i].contractAddress).getTokenUri(Index[i].TokenId)) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10421:10435  listNftCount++ */\n      dup3\n      dup1\n      tag_233\n      swap1\n      tag_183\n      jump\t// in\n    tag_233:\n      swap4\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10163:10446  if (_items[Index[i].contractAddress][Index[i].TokenId].listed) {... */\n    tag_224:\n        /* \"contracts/fatcat/marketplace.sol\":10147:10150  i++ */\n      dup1\n      tag_234\n      dup2\n      tag_183\n      jump\t// in\n    tag_234:\n      swap2\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10105:10452  for (uint i = 1; i <= _itemIds.current(); i++) { ... */\n      jump(tag_220)\n    tag_221:\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":10464:10477  getNFTtokenid */\n      swap3\n        /* \"contracts/fatcat/marketplace.sol\":9900:10484  function getAllListedNfts() public view returns (ListedNftTokenId[] memory) { ... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fatcat/marketplace.sol\":8832:9894  function CancleListForSale(uint listIndex) public { ... */\n    tag_82:\n        /* \"contracts/fatcat/marketplace.sol\":8901:8941  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":8908:8924  Index[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8908:8913  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":8908:8924  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8908:8940  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8901:8941  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":8901:8907  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":8901:8941  _items[Index[listIndex].contractAddress] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8908:8940  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":8942:8966  Index[listIndex].TokenId */\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":8901:8967  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":8901:8974  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/fatcat/marketplace.sol\":8893:8999  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8952:8954   */\n      0x20\n        /* \"contracts/fatcat/marketplace.sol\":8893:8999  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8934:8955   */\n      mstore\n        /* \"#utility.yul\":8991:8993   */\n      0x15\n        /* \"#utility.yul\":8971:8989   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8964:8994   */\n      mstore\n      shl(0x5d, 0x02a3434b99024ba32b6903737ba103634b9ba32b21)\n        /* \"#utility.yul\":9010:9028   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9003:9054   */\n      mstore\n        /* \"#utility.yul\":9071:9089   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":8893:8999  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n      tag_132\n        /* \"#utility.yul\":8750:9095   */\n      jump\n        /* \"contracts/fatcat/marketplace.sol\":8893:8999  require(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed,\"This Item not listed \") */\n    tag_236:\n        /* \"contracts/fatcat/marketplace.sol\":9083:9123  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":9090:9106  Index[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9090:9095  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":9090:9106  Index[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9090:9122  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9083:9123  _items[Index[listIndex].contractAddress] */\n      dup7\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9083:9089  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":9083:9123  _items[Index[listIndex].contractAddress] */\n      dup1\n      dup6\n      mstore\n      dup4\n      dup8\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9090:9122  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":9124:9148  Index[listIndex].TokenId */\n      dup1\n      dup6\n      add\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9083:9149  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup11\n      mstore\n      swap2\n      dup8\n      mstore\n      dup6\n      dup10\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9083:9156  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      dup1\n      dup3\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9009:9081  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].owner */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/fatcat/marketplace.sol\":9009:9156  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].owner =_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9083:9156  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap2\n      dup7\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9009:9156  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].owner =_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":9173:9205  Index[listIndex].contractAddress */\n      swap4\n      sload\n      dup4\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9234:9274  _items[Index[listIndex].contractAddress] */\n      dup1\n      dup10\n      mstore\n      swap2\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9275:9299  Index[listIndex].TokenId */\n      swap1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9234:9300  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup1\n      dup10\n      mstore\n      swap1\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9234:9307  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap1\n      swap4\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9308:9324  Index[listIndex] */\n      swap7\n      dup9\n      swap1\n      mstore\n      swap5\n      swap1\n      swap4\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9166:9333  ERC721(Index[listIndex].contractAddress).transferFrom(address(this),_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller,Index[listIndex].TokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9228:9232  this */\n      address\n        /* \"contracts/fatcat/marketplace.sol\":9166:9333  ERC721(Index[listIndex].contractAddress).transferFrom(address(this),_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller,Index[listIndex].TokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11125:11176   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9234:9307  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap4\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11192:11210   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":11185:11245   */\n      mstore\n        /* \"#utility.yul\":11261:11279   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":11254:11288   */\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9173:9205  Index[listIndex].contractAddress */\n      swap1\n        /* \"contracts/fatcat/marketplace.sol\":9166:9219  ERC721(Index[listIndex].contractAddress).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11098:11116   */\n      0x64\n      add\n        /* \"contracts/fatcat/marketplace.sol\":9166:9333  ERC721(Index[listIndex].contractAddress).transferFrom(address(this),_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller,Index[listIndex].TokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":9419:9424  false */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":9350:9366  Index[listIndex] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9350:9355  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":9350:9366  Index[listIndex] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9350:9382  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9343:9383  _items[Index[listIndex].contractAddress] */\n      dup7\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9343:9349  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":9343:9383  _items[Index[listIndex].contractAddress] */\n      dup1\n      dup6\n      mstore\n      dup4\n      dup8\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9350:9382  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":9384:9408  Index[listIndex].TokenId */\n      dup1\n      dup6\n      add\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9343:9409  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup11\n      mstore\n      swap2\n      dup8\n      mstore\n      dup6\n      dup10\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9343:9416  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed */\n      0x05\n      add\n        /* \"contracts/fatcat/marketplace.sol\":9343:9424  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].listed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":9441:9473  Index[listIndex].contractAddress */\n      dup5\n      sload\n      dup5\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9434:9474  _items[Index[listIndex].contractAddress] */\n      dup10\n      mstore\n      swap2\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9475:9499  Index[listIndex].TokenId */\n      dup2\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9434:9500  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup10\n      mstore\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9434:9506  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].count */\n      0x04\n      add\n        /* \"contracts/fatcat/marketplace.sol\":9434:9518  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].count = listIndex */\n      dup11\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      dup2\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9547:9572  Index[_itemIds.current()] */\n      dup9\n      mstore\n      swap6\n      swap1\n      swap5\n      mstore\n      swap2\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9528:9544  Index[listIndex] */\n      swap5\n      dup8\n      swap1\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9528:9572  Index[listIndex] = Index[_itemIds.current()] */\n      dup5\n      sload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      dup3\n      add\n      sload\n      swap1\n      sstore\n        /* \"contracts/fatcat/marketplace.sol\":9582:9602  _itemIds.decrement() */\n      tag_243\n      swap2\n      pop\n        /* \"contracts/fatcat/marketplace.sol\":9582:9600  _itemIds.decrement */\n      tag_187\n        /* \"contracts/fatcat/marketplace.sol\":9582:9602  _itemIds.decrement() */\n      jump\t// in\n    tag_243:\n        /* \"contracts/fatcat/marketplace.sol\":9627:9667  _items[Index[listIndex].contractAddress] */\n      0x00\n        /* \"contracts/fatcat/marketplace.sol\":9634:9650  Index[listIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9634:9639  Index */\n      0x0e\n        /* \"contracts/fatcat/marketplace.sol\":9634:9650  Index[listIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9634:9666  Index[listIndex].contractAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/fatcat/marketplace.sol\":9627:9667  _items[Index[listIndex].contractAddress] */\n      dup6\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9627:9633  _items */\n      0x0d\n        /* \"contracts/fatcat/marketplace.sol\":9627:9667  _items[Index[listIndex].contractAddress] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9634:9666  Index[listIndex].contractAddress */\n      0x01\n        /* \"contracts/fatcat/marketplace.sol\":9668:9692  Index[listIndex].TokenId */\n      swap3\n      dup4\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9627:9693  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId] */\n      dup7\n      mstore\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/fatcat/marketplace.sol\":9627:9701  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId */\n      dup1\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9711:9784  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap2\n      dup2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9814:9886  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].price */\n      0x03\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/fatcat/marketplace.sol\":9617:9887  NFTCancel(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId,... */\n      dup4\n      mload\n        /* \"#utility.yul\":13425:13450   */\n      swap3\n      dup4\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9711:9784  _items[Index[listIndex].contractAddress][Index[listIndex].TokenId].seller */\n      swap5\n      and\n        /* \"#utility.yul\":13466:13484   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":13459:13519   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9794:9804  msg.sender */\n      caller\n        /* \"#utility.yul\":13535:13553   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13528:13588   */\n      mstore\n        /* \"#utility.yul\":13619:13621   */\n      0x60\n        /* \"#utility.yul\":13604:13622   */\n      dup2\n      add\n        /* \"#utility.yul\":13597:13631   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/fatcat/marketplace.sol\":9617:9887  NFTCancel(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId,... */\n      0xfb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e02443603\n      swap1\n        /* \"#utility.yul\":13412:13415   */\n      0x80\n        /* \"#utility.yul\":13397:13416   */\n      add\n        /* \"contracts/fatcat/marketplace.sol\":9617:9887  NFTCancel(_items[Index[listIndex].contractAddress][Index[listIndex].TokenId].tokenId,... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/fatcat/marketplace.sol\":8832:9894  function CancleListForSale(uint listIndex) public { ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_132\n        /* \"#utility.yul\":4215:4418   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13844:13846   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13826:13847   */\n      mstore\n        /* \"#utility.yul\":13883:13885   */\n      0x1b\n        /* \"#utility.yul\":13863:13881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13856:13886   */\n      mstore\n        /* \"#utility.yul\":13922:13951   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":13902:13920   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13895:13952   */\n      mstore\n        /* \"#utility.yul\":13969:13987   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_132\n        /* \"#utility.yul\":13642:13993   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_254:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4361:4412   */\n      mstore\n        /* \"#utility.yul\":4334:4352   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_132\n        /* \"#utility.yul\":4215:4418   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_269:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_280:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_23:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_282:\n        /* \"#utility.yul\":343:372   */\n      tag_283\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_269\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":915:1141   */\n    tag_30:\n        /* \"#utility.yul\":974:980   */\n      0x00\n        /* \"#utility.yul\":1027:1029   */\n      0x20\n        /* \"#utility.yul\":1015:1024   */\n      dup3\n        /* \"#utility.yul\":1006:1013   */\n      dup5\n        /* \"#utility.yul\":1002:1025   */\n      sub\n        /* \"#utility.yul\":998:1030   */\n      slt\n        /* \"#utility.yul\":995:1047   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":1043:1044   */\n      0x00\n        /* \"#utility.yul\":1040:1041   */\n      dup1\n        /* \"#utility.yul\":1033:1045   */\n      revert\n        /* \"#utility.yul\":995:1047   */\n    tag_287:\n      pop\n        /* \"#utility.yul\":1088:1111   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":915:1141   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1581:1927   */\n    tag_43:\n        /* \"#utility.yul\":1649:1655   */\n      0x00\n        /* \"#utility.yul\":1657:1663   */\n      dup1\n        /* \"#utility.yul\":1710:1712   */\n      0x40\n        /* \"#utility.yul\":1698:1707   */\n      dup4\n        /* \"#utility.yul\":1689:1696   */\n      dup6\n        /* \"#utility.yul\":1685:1708   */\n      sub\n        /* \"#utility.yul\":1681:1713   */\n      slt\n        /* \"#utility.yul\":1678:1730   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1723:1724   */\n      dup1\n        /* \"#utility.yul\":1716:1728   */\n      revert\n        /* \"#utility.yul\":1678:1730   */\n    tag_291:\n      pop\n      pop\n        /* \"#utility.yul\":1771:1794   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1891:1893   */\n      0x20\n        /* \"#utility.yul\":1876:1894   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1863:1895   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1581:1927   */\n      jump\t// out\n        /* \"#utility.yul\":1932:2083   */\n    tag_271:\n        /* \"#utility.yul\":2008:2028   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2057:2058   */\n      0x04\n        /* \"#utility.yul\":2047:2059   */\n      dup2\n      lt\n        /* \"#utility.yul\":2037:2077   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2073:2074   */\n      0x00\n        /* \"#utility.yul\":2070:2071   */\n      dup1\n        /* \"#utility.yul\":2063:2075   */\n      revert\n        /* \"#utility.yul\":2088:2411   */\n    tag_47:\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2179:2185   */\n      dup1\n        /* \"#utility.yul\":2232:2234   */\n      0x40\n        /* \"#utility.yul\":2220:2229   */\n      dup4\n        /* \"#utility.yul\":2211:2218   */\n      dup6\n        /* \"#utility.yul\":2207:2230   */\n      sub\n        /* \"#utility.yul\":2203:2235   */\n      slt\n        /* \"#utility.yul\":2200:2252   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2248:2249   */\n      0x00\n        /* \"#utility.yul\":2245:2246   */\n      dup1\n        /* \"#utility.yul\":2238:2250   */\n      revert\n        /* \"#utility.yul\":2200:2252   */\n    tag_295:\n        /* \"#utility.yul\":2293:2316   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2359:2405   */\n      tag_296\n        /* \"#utility.yul\":2401:2403   */\n      0x20\n        /* \"#utility.yul\":2386:2404   */\n      dup5\n      add\n        /* \"#utility.yul\":2359:2405   */\n      tag_271\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2349:2405   */\n      swap1\n      pop\n        /* \"#utility.yul\":2088:2411   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2416:2543   */\n    tag_215:\n        /* \"#utility.yul\":2477:2487   */\n      0x4e487b71\n        /* \"#utility.yul\":2472:2475   */\n      0xe0\n        /* \"#utility.yul\":2468:2488   */\n      shl\n        /* \"#utility.yul\":2465:2466   */\n      0x00\n        /* \"#utility.yul\":2458:2489   */\n      mstore\n        /* \"#utility.yul\":2508:2512   */\n      0x41\n        /* \"#utility.yul\":2505:2506   */\n      0x04\n        /* \"#utility.yul\":2498:2513   */\n      mstore\n        /* \"#utility.yul\":2532:2536   */\n      0x24\n        /* \"#utility.yul\":2529:2530   */\n      0x00\n        /* \"#utility.yul\":2522:2537   */\n      revert\n        /* \"#utility.yul\":2548:2823   */\n    tag_272:\n        /* \"#utility.yul\":2619:2621   */\n      0x40\n        /* \"#utility.yul\":2613:2622   */\n      mload\n        /* \"#utility.yul\":2684:2686   */\n      0x1f\n        /* \"#utility.yul\":2665:2678   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2661:2688   */\n      and\n        /* \"#utility.yul\":2649:2689   */\n      dup2\n      add\n        /* \"#utility.yul\":2719:2737   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2704:2738   */\n      dup2\n      gt\n        /* \"#utility.yul\":2740:2762   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2701:2763   */\n      or\n        /* \"#utility.yul\":2698:2786   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2766:2784   */\n      tag_300\n      tag_215\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2802:2804   */\n      0x40\n        /* \"#utility.yul\":2795:2817   */\n      mstore\n        /* \"#utility.yul\":2548:2823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2828:3015   */\n    tag_273:\n        /* \"#utility.yul\":2877:2881   */\n      0x00\n        /* \"#utility.yul\":2910:2928   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2902:2908   */\n      dup3\n        /* \"#utility.yul\":2899:2929   */\n      gt\n        /* \"#utility.yul\":2896:2952   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2932:2950   */\n      tag_303\n      tag_215\n      jump\t// in\n    tag_303:\n      pop\n        /* \"#utility.yul\":2998:3000   */\n      0x1f\n        /* \"#utility.yul\":2977:2992   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2973:3002   */\n      and\n        /* \"#utility.yul\":3004:3008   */\n      0x20\n        /* \"#utility.yul\":2969:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2828:3015   */\n      jump\t// out\n        /* \"#utility.yul\":3020:4101   */\n    tag_60:\n        /* \"#utility.yul\":3125:3131   */\n      0x00\n        /* \"#utility.yul\":3133:3139   */\n      dup1\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3149:3155   */\n      dup1\n        /* \"#utility.yul\":3157:3163   */\n      0x00\n        /* \"#utility.yul\":3210:3213   */\n      0xa0\n        /* \"#utility.yul\":3198:3207   */\n      dup7\n        /* \"#utility.yul\":3189:3196   */\n      dup9\n        /* \"#utility.yul\":3185:3208   */\n      sub\n        /* \"#utility.yul\":3181:3214   */\n      slt\n        /* \"#utility.yul\":3178:3231   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3224:3225   */\n      dup1\n        /* \"#utility.yul\":3217:3229   */\n      revert\n        /* \"#utility.yul\":3178:3231   */\n    tag_305:\n        /* \"#utility.yul\":3250:3279   */\n      tag_306\n        /* \"#utility.yul\":3269:3278   */\n      dup7\n        /* \"#utility.yul\":3250:3279   */\n      tag_269\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3240:3279   */\n      swap5\n      pop\n        /* \"#utility.yul\":3348:3350   */\n      0x20\n        /* \"#utility.yul\":3333:3351   */\n      dup7\n      add\n        /* \"#utility.yul\":3320:3352   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":3427:3429   */\n      0x40\n        /* \"#utility.yul\":3412:3430   */\n      dup7\n      add\n        /* \"#utility.yul\":3399:3431   */\n      calldataload\n        /* \"#utility.yul\":3454:3472   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3443:3473   */\n      dup2\n      gt\n        /* \"#utility.yul\":3440:3490   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3483:3484   */\n      dup1\n        /* \"#utility.yul\":3476:3488   */\n      revert\n        /* \"#utility.yul\":3440:3490   */\n    tag_307:\n        /* \"#utility.yul\":3509:3531   */\n      dup7\n      add\n        /* \"#utility.yul\":3562:3566   */\n      0x1f\n        /* \"#utility.yul\":3554:3567   */\n      dup2\n      add\n        /* \"#utility.yul\":3550:3577   */\n      dup9\n      sgt\n        /* \"#utility.yul\":3540:3595   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3591:3592   */\n      0x00\n        /* \"#utility.yul\":3588:3589   */\n      dup1\n        /* \"#utility.yul\":3581:3593   */\n      revert\n        /* \"#utility.yul\":3540:3595   */\n    tag_308:\n        /* \"#utility.yul\":3631:3633   */\n      dup1\n        /* \"#utility.yul\":3618:3634   */\n      calldataload\n        /* \"#utility.yul\":3656:3709   */\n      tag_309\n        /* \"#utility.yul\":3672:3708   */\n      tag_310\n        /* \"#utility.yul\":3701:3707   */\n      dup3\n        /* \"#utility.yul\":3672:3708   */\n      tag_273\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3656:3709   */\n      tag_272\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3732:3738   */\n      dup2\n        /* \"#utility.yul\":3725:3730   */\n      dup2\n        /* \"#utility.yul\":3718:3739   */\n      mstore\n        /* \"#utility.yul\":3780:3787   */\n      dup10\n        /* \"#utility.yul\":3775:3777   */\n      0x20\n        /* \"#utility.yul\":3766:3772   */\n      dup4\n        /* \"#utility.yul\":3762:3764   */\n      dup6\n        /* \"#utility.yul\":3758:3773   */\n      add\n        /* \"#utility.yul\":3754:3778   */\n      add\n        /* \"#utility.yul\":3751:3788   */\n      gt\n        /* \"#utility.yul\":3748:3805   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3798:3799   */\n      dup1\n        /* \"#utility.yul\":3791:3803   */\n      revert\n        /* \"#utility.yul\":3748:3805   */\n    tag_311:\n        /* \"#utility.yul\":3856:3862   */\n      dup2\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"#utility.yul\":3847:3849   */\n      dup5\n        /* \"#utility.yul\":3843:3854   */\n      add\n        /* \"#utility.yul\":3838:3840   */\n      0x20\n        /* \"#utility.yul\":3831:3836   */\n      dup4\n        /* \"#utility.yul\":3827:3841   */\n      add\n        /* \"#utility.yul\":3814:3863   */\n      calldatacopy\n        /* \"#utility.yul\":3908:3909   */\n      0x00\n        /* \"#utility.yul\":3883:3901   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3903:3905   */\n      0x20\n        /* \"#utility.yul\":3879:3906   */\n      add\n        /* \"#utility.yul\":3872:3910   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3887:3892   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":4007:4009   */\n      0x60\n        /* \"#utility.yul\":3992:4010   */\n      dup7\n      add\n        /* \"#utility.yul\":3979:4011   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4056:4095   */\n      tag_312\n        /* \"#utility.yul\":4090:4093   */\n      0x80\n        /* \"#utility.yul\":4075:4094   */\n      dup8\n      add\n        /* \"#utility.yul\":4056:4095   */\n      tag_269\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4046:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3020:4101   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4723   */\n    tag_70:\n        /* \"#utility.yul\":4491:4497   */\n      0x00\n        /* \"#utility.yul\":4499:4505   */\n      dup1\n        /* \"#utility.yul\":4552:4554   */\n      0x40\n        /* \"#utility.yul\":4540:4549   */\n      dup4\n        /* \"#utility.yul\":4531:4538   */\n      dup6\n        /* \"#utility.yul\":4527:4550   */\n      sub\n        /* \"#utility.yul\":4523:4555   */\n      slt\n        /* \"#utility.yul\":4520:4572   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":4568:4569   */\n      0x00\n        /* \"#utility.yul\":4565:4566   */\n      dup1\n        /* \"#utility.yul\":4558:4570   */\n      revert\n        /* \"#utility.yul\":4520:4572   */\n    tag_316:\n        /* \"#utility.yul\":4591:4620   */\n      tag_317\n        /* \"#utility.yul\":4610:4619   */\n      dup4\n        /* \"#utility.yul\":4591:4620   */\n      tag_269\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4581:4620   */\n      swap5\n        /* \"#utility.yul\":4689:4691   */\n      0x20\n        /* \"#utility.yul\":4674:4692   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4661:4693   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4423:4723   */\n      jump\t// out\n        /* \"#utility.yul\":5644:5894   */\n    tag_275:\n        /* \"#utility.yul\":5729:5730   */\n      0x00\n        /* \"#utility.yul\":5739:5852   */\n    tag_320:\n        /* \"#utility.yul\":5753:5759   */\n      dup4\n        /* \"#utility.yul\":5750:5751   */\n      dup2\n        /* \"#utility.yul\":5747:5760   */\n      lt\n        /* \"#utility.yul\":5739:5852   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5829:5840   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5823:5841   */\n      mload\n        /* \"#utility.yul\":5810:5821   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5803:5842   */\n      mstore\n        /* \"#utility.yul\":5775:5777   */\n      0x20\n        /* \"#utility.yul\":5768:5778   */\n      add\n        /* \"#utility.yul\":5739:5852   */\n      jump(tag_320)\n    tag_322:\n      pop\n      pop\n        /* \"#utility.yul\":5886:5887   */\n      0x00\n        /* \"#utility.yul\":5868:5884   */\n      swap2\n      add\n        /* \"#utility.yul\":5861:5888   */\n      mstore\n        /* \"#utility.yul\":5644:5894   */\n      jump\t// out\n        /* \"#utility.yul\":5899:6170   */\n    tag_276:\n        /* \"#utility.yul\":5941:5944   */\n      0x00\n        /* \"#utility.yul\":5979:5984   */\n      dup2\n        /* \"#utility.yul\":5973:5985   */\n      mload\n        /* \"#utility.yul\":6006:6012   */\n      dup1\n        /* \"#utility.yul\":6001:6004   */\n      dup5\n        /* \"#utility.yul\":5994:6013   */\n      mstore\n        /* \"#utility.yul\":6022:6098   */\n      tag_324\n        /* \"#utility.yul\":6091:6097   */\n      dup2\n        /* \"#utility.yul\":6084:6088   */\n      0x20\n        /* \"#utility.yul\":6079:6082   */\n      dup7\n        /* \"#utility.yul\":6075:6089   */\n      add\n        /* \"#utility.yul\":6068:6072   */\n      0x20\n        /* \"#utility.yul\":6061:6066   */\n      dup7\n        /* \"#utility.yul\":6057:6073   */\n      add\n        /* \"#utility.yul\":6022:6098   */\n      tag_275\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6152:6154   */\n      0x1f\n        /* \"#utility.yul\":6131:6146   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6127:6156   */\n      and\n        /* \"#utility.yul\":6118:6157   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6159:6163   */\n      0x20\n        /* \"#utility.yul\":6114:6164   */\n      add\n      swap3\n        /* \"#utility.yul\":5899:6170   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6175:8063   */\n    tag_78:\n        /* \"#utility.yul\":6385:6389   */\n      0x00\n        /* \"#utility.yul\":6433:6435   */\n      0x20\n        /* \"#utility.yul\":6422:6431   */\n      dup3\n        /* \"#utility.yul\":6418:6436   */\n      add\n        /* \"#utility.yul\":6463:6465   */\n      0x20\n        /* \"#utility.yul\":6452:6461   */\n      dup4\n        /* \"#utility.yul\":6445:6466   */\n      mstore\n        /* \"#utility.yul\":6486:6492   */\n      dup1\n        /* \"#utility.yul\":6521:6527   */\n      dup5\n        /* \"#utility.yul\":6515:6528   */\n      mload\n        /* \"#utility.yul\":6552:6558   */\n      dup1\n        /* \"#utility.yul\":6544:6550   */\n      dup4\n        /* \"#utility.yul\":6537:6559   */\n      mstore\n        /* \"#utility.yul\":6590:6592   */\n      0x40\n        /* \"#utility.yul\":6579:6588   */\n      dup6\n        /* \"#utility.yul\":6575:6593   */\n      add\n        /* \"#utility.yul\":6568:6593   */\n      swap2\n      pop\n        /* \"#utility.yul\":6652:6654   */\n      0x40\n        /* \"#utility.yul\":6642:6648   */\n      dup2\n        /* \"#utility.yul\":6639:6640   */\n      0x05\n        /* \"#utility.yul\":6635:6649   */\n      shl\n        /* \"#utility.yul\":6624:6633   */\n      dup7\n        /* \"#utility.yul\":6620:6650   */\n      add\n        /* \"#utility.yul\":6616:6655   */\n      add\n        /* \"#utility.yul\":6602:6655   */\n      swap3\n      pop\n        /* \"#utility.yul\":6690:6692   */\n      0x20\n        /* \"#utility.yul\":6682:6688   */\n      dup7\n        /* \"#utility.yul\":6678:6693   */\n      add\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6721:8034   */\n    tag_326:\n        /* \"#utility.yul\":6735:6741   */\n      dup3\n        /* \"#utility.yul\":6732:6733   */\n      dup2\n        /* \"#utility.yul\":6729:6742   */\n      lt\n        /* \"#utility.yul\":6721:8034   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6828:6830   */\n      0x3f\n        /* \"#utility.yul\":6824:6831   */\n      not\n        /* \"#utility.yul\":6812:6821   */\n      dup8\n        /* \"#utility.yul\":6804:6810   */\n      dup7\n        /* \"#utility.yul\":6800:6822   */\n      sub\n        /* \"#utility.yul\":6796:6832   */\n      add\n        /* \"#utility.yul\":6791:6794   */\n      dup5\n        /* \"#utility.yul\":6784:6833   */\n      mstore\n        /* \"#utility.yul\":6862:6868   */\n      dup2\n        /* \"#utility.yul\":6856:6869   */\n      mload\n        /* \"#utility.yul\":6898:6900   */\n      dup1\n        /* \"#utility.yul\":6892:6901   */\n      mload\n        /* \"#utility.yul\":6935:6937   */\n      dup1\n        /* \"#utility.yul\":6929:6938   */\n      mload\n        /* \"#utility.yul\":6921:6927   */\n      dup8\n        /* \"#utility.yul\":6914:6939   */\n      mstore\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6982:6984   */\n      dup2\n        /* \"#utility.yul\":6978:6989   */\n      add\n        /* \"#utility.yul\":6972:6990   */\n      mload\n        /* \"#utility.yul\":7003:7052   */\n      tag_329\n        /* \"#utility.yul\":7048:7050   */\n      0x20\n        /* \"#utility.yul\":7040:7046   */\n      dup10\n        /* \"#utility.yul\":7036:7051   */\n      add\n        /* \"#utility.yul\":7022:7034   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4172:4203   */\n      and\n        /* \"#utility.yul\":4160:4204   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4106:4210   */\n      jump\n        /* \"#utility.yul\":7003:7052   */\n    tag_329:\n      pop\n        /* \"#utility.yul\":7101:7103   */\n      0x40\n        /* \"#utility.yul\":7097:7099   */\n      dup2\n        /* \"#utility.yul\":7093:7104   */\n      add\n        /* \"#utility.yul\":7087:7105   */\n      mload\n        /* \"#utility.yul\":7118:7169   */\n      tag_330\n        /* \"#utility.yul\":7165:7167   */\n      0x40\n        /* \"#utility.yul\":7157:7163   */\n      dup10\n        /* \"#utility.yul\":7153:7168   */\n      add\n        /* \"#utility.yul\":7137:7151   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4172:4203   */\n      and\n        /* \"#utility.yul\":4160:4204   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4106:4210   */\n      jump\n        /* \"#utility.yul\":7118:7169   */\n    tag_330:\n      pop\n        /* \"#utility.yul\":7222:7226   */\n      0x60\n        /* \"#utility.yul\":7218:7220   */\n      dup2\n        /* \"#utility.yul\":7214:7227   */\n      add\n        /* \"#utility.yul\":7208:7228   */\n      mload\n        /* \"#utility.yul\":7201:7205   */\n      0x60\n        /* \"#utility.yul\":7193:7199   */\n      dup9\n        /* \"#utility.yul\":7189:7206   */\n      add\n        /* \"#utility.yul\":7182:7229   */\n      mstore\n        /* \"#utility.yul\":7282:7286   */\n      0x80\n        /* \"#utility.yul\":7278:7280   */\n      dup2\n        /* \"#utility.yul\":7274:7287   */\n      add\n        /* \"#utility.yul\":7268:7288   */\n      mload\n        /* \"#utility.yul\":7261:7265   */\n      0x80\n        /* \"#utility.yul\":7253:7259   */\n      dup9\n        /* \"#utility.yul\":7249:7266   */\n      add\n        /* \"#utility.yul\":7242:7289   */\n      mstore\n        /* \"#utility.yul\":7338:7342   */\n      0xa0\n        /* \"#utility.yul\":7334:7336   */\n      dup2\n        /* \"#utility.yul\":7330:7343   */\n      add\n        /* \"#utility.yul\":7324:7344   */\n      mload\n        /* \"#utility.yul\":7357:7407   */\n      tag_331\n        /* \"#utility.yul\":7401:7405   */\n      0xa0\n        /* \"#utility.yul\":7393:7399   */\n      dup10\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7373:7387   */\n      dup3\n        /* \"#utility.yul\":453:466   */\n      iszero\n        /* \"#utility.yul\":446:467   */\n      iszero\n        /* \"#utility.yul\":434:468   */\n      swap1\n      mstore\n        /* \"#utility.yul\":383:474   */\n      jump\n        /* \"#utility.yul\":7357:7407   */\n    tag_331:\n      pop\n        /* \"#utility.yul\":7456:7460   */\n      0xc0\n        /* \"#utility.yul\":7452:7454   */\n      dup2\n        /* \"#utility.yul\":7448:7461   */\n      add\n        /* \"#utility.yul\":7442:7462   */\n      mload\n        /* \"#utility.yul\":7475:7528   */\n      tag_332\n        /* \"#utility.yul\":7522:7526   */\n      0xc0\n        /* \"#utility.yul\":7514:7520   */\n      dup10\n        /* \"#utility.yul\":7510:7527   */\n      add\n        /* \"#utility.yul\":7494:7508   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4172:4203   */\n      and\n        /* \"#utility.yul\":4160:4204   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4106:4210   */\n      jump\n        /* \"#utility.yul\":7475:7528   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":7581:7585   */\n      0xe0\n        /* \"#utility.yul\":7577:7579   */\n      dup2\n        /* \"#utility.yul\":7573:7586   */\n      add\n        /* \"#utility.yul\":7567:7587   */\n      mload\n        /* \"#utility.yul\":7560:7564   */\n      0xe0\n        /* \"#utility.yul\":7552:7558   */\n      dup9\n        /* \"#utility.yul\":7548:7565   */\n      add\n        /* \"#utility.yul\":7541:7588   */\n      mstore\n        /* \"#utility.yul\":7643:7649   */\n      0x0100\n        /* \"#utility.yul\":7639:7641   */\n      dup2\n        /* \"#utility.yul\":7635:7650   */\n      add\n        /* \"#utility.yul\":7629:7651   */\n      mload\n        /* \"#utility.yul\":7620:7626   */\n      0x0100\n        /* \"#utility.yul\":7612:7618   */\n      dup9\n        /* \"#utility.yul\":7608:7627   */\n      add\n        /* \"#utility.yul\":7601:7652   */\n      mstore\n        /* \"#utility.yul\":7707:7713   */\n      0x0120\n        /* \"#utility.yul\":7703:7705   */\n      dup2\n        /* \"#utility.yul\":7699:7714   */\n      add\n        /* \"#utility.yul\":7693:7715   */\n      mload\n        /* \"#utility.yul\":7684:7690   */\n      0x0120\n        /* \"#utility.yul\":7676:7682   */\n      dup9\n        /* \"#utility.yul\":7672:7691   */\n      add\n        /* \"#utility.yul\":7665:7716   */\n      mstore\n      pop\n        /* \"#utility.yul\":7771:7773   */\n      0x20\n        /* \"#utility.yul\":7767:7769   */\n      dup2\n        /* \"#utility.yul\":7763:7774   */\n      add\n        /* \"#utility.yul\":7757:7775   */\n      mload\n        /* \"#utility.yul\":7748:7754   */\n      0x0140\n        /* \"#utility.yul\":7740:7746   */\n      dup8\n        /* \"#utility.yul\":7736:7755   */\n      add\n        /* \"#utility.yul\":7729:7776   */\n      mstore\n        /* \"#utility.yul\":7825:7827   */\n      0x40\n        /* \"#utility.yul\":7821:7823   */\n      dup2\n        /* \"#utility.yul\":7817:7828   */\n      add\n        /* \"#utility.yul\":7811:7829   */\n      mload\n        /* \"#utility.yul\":7789:7829   */\n      swap1\n      pop\n        /* \"#utility.yul\":7870:7876   */\n      0x0180\n        /* \"#utility.yul\":7861:7867   */\n      0x0160\n        /* \"#utility.yul\":7853:7859   */\n      dup8\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7842:7877   */\n      mstore\n        /* \"#utility.yul\":7900:7954   */\n      tag_333\n        /* \"#utility.yul\":7946:7952   */\n      0x0180\n        /* \"#utility.yul\":7938:7944   */\n      dup8\n        /* \"#utility.yul\":7934:7953   */\n      add\n        /* \"#utility.yul\":7918:7932   */\n      dup3\n        /* \"#utility.yul\":7900:7954   */\n      tag_276\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7890:7954   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":7989:7991   */\n      0x20\n        /* \"#utility.yul\":8012:8024   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":7977:7992   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6757:6758   */\n      0x01\n        /* \"#utility.yul\":6750:6759   */\n      add\n        /* \"#utility.yul\":6721:8034   */\n      jump(tag_326)\n    tag_328:\n      pop\n        /* \"#utility.yul\":8051:8057   */\n      swap3\n      swap7\n        /* \"#utility.yul\":6175:8063   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8068:8277   */\n    tag_86:\n        /* \"#utility.yul\":8142:8148   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x20\n        /* \"#utility.yul\":8183:8192   */\n      dup3\n        /* \"#utility.yul\":8174:8181   */\n      dup5\n        /* \"#utility.yul\":8170:8193   */\n      sub\n        /* \"#utility.yul\":8166:8198   */\n      slt\n        /* \"#utility.yul\":8163:8215   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":8211:8212   */\n      0x00\n        /* \"#utility.yul\":8208:8209   */\n      dup1\n        /* \"#utility.yul\":8201:8213   */\n      revert\n        /* \"#utility.yul\":8163:8215   */\n    tag_335:\n        /* \"#utility.yul\":8234:8271   */\n      tag_283\n        /* \"#utility.yul\":8261:8270   */\n      dup3\n        /* \"#utility.yul\":8234:8271   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":8561:8745   */\n    tag_104:\n        /* \"#utility.yul\":8631:8637   */\n      0x00\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"#utility.yul\":8672:8681   */\n      dup3\n        /* \"#utility.yul\":8663:8670   */\n      dup5\n        /* \"#utility.yul\":8659:8682   */\n      sub\n        /* \"#utility.yul\":8655:8687   */\n      slt\n        /* \"#utility.yul\":8652:8704   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8700:8701   */\n      0x00\n        /* \"#utility.yul\":8697:8698   */\n      dup1\n        /* \"#utility.yul\":8690:8702   */\n      revert\n        /* \"#utility.yul\":8652:8704   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":8723:8739   */\n      mload\n      swap2\n        /* \"#utility.yul\":8561:8745   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9446:9573   */\n    tag_140:\n        /* \"#utility.yul\":9507:9517   */\n      0x4e487b71\n        /* \"#utility.yul\":9502:9505   */\n      0xe0\n        /* \"#utility.yul\":9498:9518   */\n      shl\n        /* \"#utility.yul\":9495:9496   */\n      0x00\n        /* \"#utility.yul\":9488:9519   */\n      mstore\n        /* \"#utility.yul\":9538:9542   */\n      0x21\n        /* \"#utility.yul\":9535:9536   */\n      0x04\n        /* \"#utility.yul\":9528:9543   */\n      mstore\n        /* \"#utility.yul\":9562:9566   */\n      0x24\n        /* \"#utility.yul\":9559:9560   */\n      0x00\n        /* \"#utility.yul\":9552:9567   */\n      revert\n        /* \"#utility.yul\":9578:9705   */\n    tag_277:\n        /* \"#utility.yul\":9639:9649   */\n      0x4e487b71\n        /* \"#utility.yul\":9634:9637   */\n      0xe0\n        /* \"#utility.yul\":9630:9650   */\n      shl\n        /* \"#utility.yul\":9627:9628   */\n      0x00\n        /* \"#utility.yul\":9620:9651   */\n      mstore\n        /* \"#utility.yul\":9670:9674   */\n      0x11\n        /* \"#utility.yul\":9667:9668   */\n      0x04\n        /* \"#utility.yul\":9660:9675   */\n      mstore\n        /* \"#utility.yul\":9694:9698   */\n      0x24\n        /* \"#utility.yul\":9691:9692   */\n      0x00\n        /* \"#utility.yul\":9684:9699   */\n      revert\n        /* \"#utility.yul\":9710:9878   */\n    tag_144:\n        /* \"#utility.yul\":9783:9792   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9814:9823   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9831:9846   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9825:9847   */\n      dup5\n      eq\n        /* \"#utility.yul\":9811:9848   */\n      or\n        /* \"#utility.yul\":9801:9872   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":9852:9870   */\n      tag_346\n      tag_277\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9710:9878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9883:10100   */\n    tag_146:\n        /* \"#utility.yul\":9923:9924   */\n      0x00\n        /* \"#utility.yul\":9949:9950   */\n      dup3\n        /* \"#utility.yul\":9939:10071   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":9993:10003   */\n      0x4e487b71\n        /* \"#utility.yul\":9988:9991   */\n      0xe0\n        /* \"#utility.yul\":9984:10004   */\n      shl\n        /* \"#utility.yul\":9981:9982   */\n      0x00\n        /* \"#utility.yul\":9974:10005   */\n      mstore\n        /* \"#utility.yul\":10028:10032   */\n      0x12\n        /* \"#utility.yul\":10025:10026   */\n      0x04\n        /* \"#utility.yul\":10018:10033   */\n      mstore\n        /* \"#utility.yul\":10056:10060   */\n      0x24\n        /* \"#utility.yul\":10053:10054   */\n      0x00\n        /* \"#utility.yul\":10046:10061   */\n      revert\n        /* \"#utility.yul\":9939:10071   */\n    tag_348:\n      pop\n        /* \"#utility.yul\":10085:10094   */\n      div\n      swap1\n        /* \"#utility.yul\":9883:10100   */\n      jump\t// out\n        /* \"#utility.yul\":10448:10573   */\n    tag_151:\n        /* \"#utility.yul\":10513:10522   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10534:10544   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10531:10567   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":10547:10565   */\n      tag_346\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":11299:11427   */\n    tag_171:\n        /* \"#utility.yul\":11366:11375   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11387:11398   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11384:11421   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":11401:11419   */\n      tag_346\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":11432:11567   */\n    tag_183:\n        /* \"#utility.yul\":11471:11474   */\n      0x00\n        /* \"#utility.yul\":11492:11509   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11489:11532   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":11512:11530   */\n      tag_360\n      tag_277\n      jump\t// in\n    tag_360:\n      pop\n        /* \"#utility.yul\":11559:11560   */\n      0x01\n        /* \"#utility.yul\":11548:11561   */\n      add\n      swap1\n        /* \"#utility.yul\":11432:11567   */\n      jump\t// out\n        /* \"#utility.yul\":12092:12383   */\n    tag_209:\n        /* \"#utility.yul\":12269:12271   */\n      0x40\n        /* \"#utility.yul\":12258:12267   */\n      dup2\n        /* \"#utility.yul\":12251:12272   */\n      mstore\n        /* \"#utility.yul\":12232:12236   */\n      0x00\n        /* \"#utility.yul\":12289:12334   */\n      tag_363\n        /* \"#utility.yul\":12330:12332   */\n      0x40\n        /* \"#utility.yul\":12319:12328   */\n      dup4\n        /* \"#utility.yul\":12315:12333   */\n      add\n        /* \"#utility.yul\":12307:12313   */\n      dup6\n        /* \"#utility.yul\":12289:12334   */\n      tag_276\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12281:12334   */\n      swap1\n      pop\n        /* \"#utility.yul\":12370:12376   */\n      dup3\n        /* \"#utility.yul\":12365:12367   */\n      0x20\n        /* \"#utility.yul\":12354:12363   */\n      dup4\n        /* \"#utility.yul\":12350:12368   */\n      add\n        /* \"#utility.yul\":12343:12377   */\n      mstore\n        /* \"#utility.yul\":12092:12383   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12388:13057   */\n    tag_229:\n        /* \"#utility.yul\":12468:12474   */\n      0x00\n        /* \"#utility.yul\":12521:12523   */\n      0x20\n        /* \"#utility.yul\":12509:12518   */\n      dup3\n        /* \"#utility.yul\":12500:12507   */\n      dup5\n        /* \"#utility.yul\":12496:12519   */\n      sub\n        /* \"#utility.yul\":12492:12524   */\n      slt\n        /* \"#utility.yul\":12489:12541   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":12537:12538   */\n      0x00\n        /* \"#utility.yul\":12534:12535   */\n      dup1\n        /* \"#utility.yul\":12527:12539   */\n      revert\n        /* \"#utility.yul\":12489:12541   */\n    tag_365:\n        /* \"#utility.yul\":12570:12579   */\n      dup2\n        /* \"#utility.yul\":12564:12580   */\n      mload\n        /* \"#utility.yul\":12603:12621   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12595:12601   */\n      dup2\n        /* \"#utility.yul\":12592:12622   */\n      gt\n        /* \"#utility.yul\":12589:12639   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":12635:12636   */\n      0x00\n        /* \"#utility.yul\":12632:12633   */\n      dup1\n        /* \"#utility.yul\":12625:12637   */\n      revert\n        /* \"#utility.yul\":12589:12639   */\n    tag_366:\n        /* \"#utility.yul\":12658:12680   */\n      dup3\n      add\n        /* \"#utility.yul\":12711:12715   */\n      0x1f\n        /* \"#utility.yul\":12703:12716   */\n      dup2\n      add\n        /* \"#utility.yul\":12699:12726   */\n      dup5\n      sgt\n        /* \"#utility.yul\":12689:12744   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":12740:12741   */\n      0x00\n        /* \"#utility.yul\":12737:12738   */\n      dup1\n        /* \"#utility.yul\":12730:12742   */\n      revert\n        /* \"#utility.yul\":12689:12744   */\n    tag_367:\n        /* \"#utility.yul\":12773:12775   */\n      dup1\n        /* \"#utility.yul\":12767:12776   */\n      mload\n        /* \"#utility.yul\":12798:12851   */\n      tag_368\n        /* \"#utility.yul\":12814:12850   */\n      tag_310\n        /* \"#utility.yul\":12843:12849   */\n      dup3\n        /* \"#utility.yul\":12814:12850   */\n      tag_273\n      jump\t// in\n        /* \"#utility.yul\":12798:12851   */\n    tag_368:\n        /* \"#utility.yul\":12874:12880   */\n      dup2\n        /* \"#utility.yul\":12867:12872   */\n      dup2\n        /* \"#utility.yul\":12860:12881   */\n      mstore\n        /* \"#utility.yul\":12922:12929   */\n      dup6\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12908:12914   */\n      dup4\n        /* \"#utility.yul\":12904:12906   */\n      dup6\n        /* \"#utility.yul\":12900:12915   */\n      add\n        /* \"#utility.yul\":12896:12920   */\n      add\n        /* \"#utility.yul\":12893:12930   */\n      gt\n        /* \"#utility.yul\":12890:12947   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":12943:12944   */\n      0x00\n        /* \"#utility.yul\":12940:12941   */\n      dup1\n        /* \"#utility.yul\":12933:12945   */\n      revert\n        /* \"#utility.yul\":12890:12947   */\n    tag_370:\n        /* \"#utility.yul\":12956:13027   */\n      tag_371\n        /* \"#utility.yul\":13020:13026   */\n      dup3\n        /* \"#utility.yul\":13015:13017   */\n      0x20\n        /* \"#utility.yul\":13008:13013   */\n      dup4\n        /* \"#utility.yul\":13004:13018   */\n      add\n        /* \"#utility.yul\":12999:13001   */\n      0x20\n        /* \"#utility.yul\":12995:12997   */\n      dup7\n        /* \"#utility.yul\":12991:13002   */\n      add\n        /* \"#utility.yul\":12956:13027   */\n      tag_275\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":13046:13051   */\n      swap6\n        /* \"#utility.yul\":12388:13057   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13062:13189   */\n    tag_232:\n        /* \"#utility.yul\":13123:13133   */\n      0x4e487b71\n        /* \"#utility.yul\":13118:13121   */\n      0xe0\n        /* \"#utility.yul\":13114:13134   */\n      shl\n        /* \"#utility.yul\":13111:13112   */\n      0x00\n        /* \"#utility.yul\":13104:13135   */\n      mstore\n        /* \"#utility.yul\":13154:13158   */\n      0x32\n        /* \"#utility.yul\":13151:13152   */\n      0x04\n        /* \"#utility.yul\":13144:13159   */\n      mstore\n        /* \"#utility.yul\":13178:13182   */\n      0x24\n        /* \"#utility.yul\":13175:13176   */\n      0x00\n        /* \"#utility.yul\":13168:13183   */\n      revert\n\n    auxdata: 0xa2646970667358221220b7cf876d243431b87f2a79a95367c296828e10477aca05fa16d71c50943a67c764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3300": {
									"entryPoint": null,
									"id": 3300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 388,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:646:18",
										"nodeType": "YulBlock",
										"src": "0:646:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:18",
													"nodeType": "YulBlock",
													"src": "95:209:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:18",
																"nodeType": "YulBlock",
																"src": "141:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:18",
																					"nodeType": "YulLiteral",
																					"src": "150:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "153:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:18"
																			},
																			"nativeSrc": "143:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:18"
																		},
																		"nativeSrc": "143:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:18"
																		},
																		"nativeSrc": "112:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:18",
																		"nodeType": "YulLiteral",
																		"src": "137:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:18"
																},
																"nativeSrc": "108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "108:32:18"
															},
															"nativeSrc": "105:52:18",
															"nodeType": "YulIf",
															"src": "105:52:18"
														},
														{
															"nativeSrc": "166:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:18"
																},
																"nativeSrc": "179:16:18",
																"nodeType": "YulFunctionCall",
																"src": "179:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:18",
																	"nodeType": "YulTypedName",
																	"src": "170:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:18",
																"nodeType": "YulBlock",
																"src": "258:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:18",
																					"nodeType": "YulLiteral",
																					"src": "267:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:18",
																					"nodeType": "YulLiteral",
																					"src": "270:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:18"
																			},
																			"nativeSrc": "260:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:18"
																		},
																		"nativeSrc": "260:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:18",
																										"nodeType": "YulLiteral",
																										"src": "243:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:18",
																										"nodeType": "YulLiteral",
																										"src": "248:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:18"
																								},
																								"nativeSrc": "239:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:18",
																								"nodeType": "YulLiteral",
																								"src": "252:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:18"
																						},
																						"nativeSrc": "235:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:18"
																				},
																				"nativeSrc": "224:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:18"
																		},
																		"nativeSrc": "214:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:18"
																},
																"nativeSrc": "207:50:18",
																"nodeType": "YulFunctionCall",
																"src": "207:50:18"
															},
															"nativeSrc": "204:70:18",
															"nodeType": "YulIf",
															"src": "204:70:18"
														},
														{
															"nativeSrc": "283:15:18",
															"nodeType": "YulAssignment",
															"src": "283:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:18",
																"nodeType": "YulIdentifier",
																"src": "293:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:18",
														"nodeType": "YulTypedName",
														"src": "61:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:18",
														"nodeType": "YulTypedName",
														"src": "72:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:18",
														"nodeType": "YulTypedName",
														"src": "84:6:18",
														"type": ""
													}
												],
												"src": "14:290:18"
											},
											{
												"body": {
													"nativeSrc": "410:102:18",
													"nodeType": "YulBlock",
													"src": "410:102:18",
													"statements": [
														{
															"nativeSrc": "420:26:18",
															"nodeType": "YulAssignment",
															"src": "420:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:18",
																		"nodeType": "YulLiteral",
																		"src": "443:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:18"
																},
																"nativeSrc": "428:18:18",
																"nodeType": "YulFunctionCall",
																"src": "428:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:18",
																								"nodeType": "YulLiteral",
																								"src": "493:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:18",
																								"nodeType": "YulLiteral",
																								"src": "498:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:18"
																						},
																						"nativeSrc": "489:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:18",
																						"nodeType": "YulLiteral",
																						"src": "502:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:18"
																				},
																				"nativeSrc": "485:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:18"
																		},
																		"nativeSrc": "473:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:18"
																},
																"nativeSrc": "455:51:18",
																"nodeType": "YulFunctionCall",
																"src": "455:51:18"
															},
															"nativeSrc": "455:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:18",
														"nodeType": "YulTypedName",
														"src": "379:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:18",
														"nodeType": "YulTypedName",
														"src": "390:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:18",
														"nodeType": "YulTypedName",
														"src": "401:4:18",
														"type": ""
													}
												],
												"src": "309:203:18"
											},
											{
												"body": {
													"nativeSrc": "549:95:18",
													"nodeType": "YulBlock",
													"src": "549:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:18",
																		"nodeType": "YulLiteral",
																		"src": "566:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "573:3:18",
																				"nodeType": "YulLiteral",
																				"src": "573:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "578:10:18",
																				"nodeType": "YulLiteral",
																				"src": "578:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "569:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:18"
																		},
																		"nativeSrc": "569:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "569:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "559:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "559:6:18"
																},
																"nativeSrc": "559:31:18",
																"nodeType": "YulFunctionCall",
																"src": "559:31:18"
															},
															"nativeSrc": "559:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "559:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "606:1:18",
																		"nodeType": "YulLiteral",
																		"src": "606:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:4:18",
																		"nodeType": "YulLiteral",
																		"src": "609:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "599:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:18"
																},
																"nativeSrc": "599:15:18",
																"nodeType": "YulFunctionCall",
																"src": "599:15:18"
															},
															"nativeSrc": "599:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "599:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "630:1:18",
																		"nodeType": "YulLiteral",
																		"src": "630:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "633:4:18",
																		"nodeType": "YulLiteral",
																		"src": "633:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "623:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:18"
																},
																"nativeSrc": "623:15:18",
																"nodeType": "YulFunctionCall",
																"src": "623:15:18"
															},
															"nativeSrc": "623:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "623:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "517:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "517:127:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600880546001600160a01b0319908116735f31f088c0d692ff133bd3b11b923f4e1be99e9b1790915560098054821673e2cbadc3250dc901596e1cdffa778fc313162247179055600a8054821673572dd734f1068c1eda13e0b655bc227b31ad8f72179055600b805490911673e533f399513f8ed44d7e12e458d532fe7005cf4e17905534801561009457600080fd5b50604051611fc3380380611fc38339810160408190526100b3916101d4565b33806100d957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100e281610184565b5050600c60205260007f13649b2456f1b42fef0f0040b3aaeabcd21a76a0f3f5defd4f583839455116e881905560037fd421a5181c571bba3f01190c922c3b2a896fc1d84e86c9f17ac10e67ebef8b5c81905560047f5d6016397a73f5e079297ac5a36fef17b4d9c3831618e63ab105738020ddd72055905260057fc0da782485e77ae272268ae0a3ff44c1552ecb60b3743924de17a815e0a3cfd755610204565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101e657600080fd5b81516001600160a01b03811681146101fd57600080fd5b9392505050565b611db0806102136000396000f3fe6080604052600436106100e85760003560e01c80637c7ce62d1161008a5780639f5e6fd9116100595780639f5e6fd91461038e578063b50c0d20146103ae578063bc4bc9c8146103db578063f2fde38b1461043a57600080fd5b80637c7ce62d1461023e5780638da5cb5b1461025e57806393f311091461028657806395ce4a3b1461036c57600080fd5b80636081a0dd116100c65780636081a0dd146101c057806362590604146101e2578063715018a6146101f5578063752cd6541461020a57600080fd5b806303147f39146100ed5780631065cf731461013c5780633529280b14610185575b600080fd5b3480156100f957600080fd5b5061010d61010836600461188f565b61045a565b604080519415158552921515602085015290151591830191909152151560608201526080015b60405180910390f35b34801561014857600080fd5b506101706101573660046118b1565b6010602052600090815260409020805460019091015482565b60408051928352602083019190915201610133565b34801561019157600080fd5b506101b26101a03660046118b1565b60116020526000908152604090205481565b604051908152602001610133565b3480156101cc57600080fd5b506101e06101db3660046118ca565b610703565b005b6101e06101f03660046118fb565b610839565b34801561020157600080fd5b506101e0610f3e565b34801561021657600080fd5b506101706102253660046118b1565b600f602052600090815260409020805460019091015482565b34801561024a57600080fd5b506101e0610259366004611996565b610f52565b34801561026a57600080fd5b506000546040516001600160a01b039091168152602001610133565b34801561029257600080fd5b5061030b6102a1366004611a4b565b600d60209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0396871697958716969495939460ff84169461010090940416928a565b604080519a8b526001600160a01b03998a1660208c0152978916978a01979097526060890195909552608088019390935290151560a087015290931660c085015260e084019290925261010083019190915261012082015261014001610133565b34801561037857600080fd5b50610381611273565b6040516101339190611ac5565b34801561039a57600080fd5b506101e06103a93660046118b1565b6114f2565b3480156103ba57600080fd5b506101b26103c9366004611bed565b600c6020526000908152604090205481565b3480156103e757600080fd5b5061041b6103f63660046118b1565b600e60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610133565b34801561044657600080fd5b506101e061045536600461188f565b611761565b6008546040516370a0823160e01b81526001600160a01b03838116600483015260009283928392839283929116906370a0823190602401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190611c08565b6009546040516370a0823160e01b81526001600160a01b038981166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190611c08565b600a546040516370a0823160e01b81526001600160a01b038a81166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611c08565b600b546040516370a0823160e01b81526001600160a01b038b81166004830152929350600092909116906370a0823190602401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190611c08565b90506000841180156106405750600083115b801561064c5750600082115b80156106585750600081115b15610674576001806001809750975097509750505050506106fc565b6000831180156106845750600082115b80156106905750600081115b156106ad57600060018060019750975097509750505050506106fc565b6000821180156106bd5750600081115b156106d9576000806001809750975097509750505050506106fc565b80156106f757600080600060019750975097509750505050506106fc565b505050505b9193509193565b6000828152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff166107855760405162461bcd60e51b815260206004820152601560248201527402a3434b99024ba32b6903737ba103634b9ba32b21605d1b60448201526064015b60405180910390fd5b6000828152600e6020908152604080832080546001600160a01b039081168552600d845282852060019283015486529093529220909101541633146108005760405162461bcd60e51b81526020600482015260116024820152702cb7ba9030b932903737ba1027bbb732b960791b604482015260640161077c565b6000918252600e6020908152604080842080546001600160a01b03168552600d8352818520600190910154855290915290912060030155565b6000828152600e6020526040812080546001909101546001600160a01b03909116916064600c8286600381111561087257610872611c21565b600381111561088357610883611c21565b815260208082019290925260409081016000908120546001600160a01b0388168252600d845282822087835290935220600301546108c19190611c4d565b6108cb9190611c6a565b6001600160a01b038481166000908152600d60209081526040808320878452909152902060010154919250339116036109375760405162461bcd60e51b815260206004820152600e60248201526d2737ba103a34329029b2b63632b960911b604482015260640161077c565b6001600160a01b0383166000908152600d60209081526040808320858452909152902060030154610969908290611c8c565b3410156109ab5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820707269636560801b604482015260640161077c565b6040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156109f957600080fd5b505af1158015610a0d573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600d602090815260408083208584529091528120600401549003610a96576001600160a01b038381166000908152600d60209081526040808320868452909152902060018101546005820180549190931661010002610100600160a81b03199091161790915560556006820155600f6008909101555b6001600160a01b0383166000908152600d6020908152604080832085845290915290206004015415610afc576001600160a01b0383166000908152600d602090815260408083208584529091529020600560068201819055605f60078301556008909101555b6006546000868152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915281206003015490916103e891610b459190611c4d565b610b4f9190611c6a565b6005546000888152600e6020908152604080832080546001600160a01b03168452600d83528184206001909101548452909152812060030154929350916103e891610b9991611c4d565b610ba39190611c6a565b6000888152600e6020908152604080832080546001600160a01b039081168552600d808552838620600190930154865291845282852060060154908b16855290835281842089855290925282206003015492935091606490610c06908490611c4d565b610c109190611c6a565b9050600083610c1f8684611c8c565b610c299190611c8c565b6001600160a01b0389166000908152600d602090815260408083208b8452909152902060030154610c5a9190611c9f565b60008b8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600192830154865290935281842001549051939450169183156108fc0291849190818181858888f19350505050158015610cbf573d6000803e3d6000fd5b5060008a8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600190920154855292528083206005015490516101009091049091169184156108fc02918591818181858888f19350505050158015610d2a573d6000803e3d6000fd5b50600080546040516001600160a01b039091169187156108fc02918891818181858888f19350505050158015610d64573d6000803e3d6000fd5b50600080546040516001600160a01b039091169188156108fc02918991818181858888f19350505050158015610d9e573d6000803e3d6000fd5b506001600160a01b0388166000908152600d602090815260408083208a8452909152812060058101805460ff19169055600401805491610ddd83611cb2565b9190505550600e6000610def60015490565b8152602080820192909252604090810160009081208d8252600e90935220815481546001600160a01b0319166001600160a01b0390911617815560019182015490820155610e3c9061179f565b60008a8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600190920154855290835292819020600581015460069091015482516101009092049094168152918201929092527f7bd3aa7d673767f759ebf216e7f6c12844986c661ae6e0f1d988cf7eb7394d1d910160405180910390a16001600160a01b038881166000908152600d602090815260408083208b84528252918290208054600190910154835191825290931690830152338282015260608201839052426080830152517f5fafad85dec201c2e73b6a2bef6351129304a624ea8720ecd04cd7f04d83bc399181900360a00190a150505050505050505050565b610f466117f6565b610f506000611823565b565b610f60600180546001019055565b604051806101400160405280858152602001336001600160a01b03168152602001306001600160a01b03168152602001838152602001600d6000886001600160a01b03166001600160a01b031681526020019081526020016000206000878152602001908152602001600020600401548152602001600115158152602001826001600160a01b0316815260200160045481526020016005548152602001600654815250600d6000876001600160a01b03166001600160a01b0316815260200190815260200160002060008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160060155610100820151816007015561012082015181600801559050506040518060400160405280866001600160a01b0316815260200185815250600e600061114c60015490565b81526020808201929092526040908101600020835181546001600160a01b0319166001600160a01b039182161782559390920151600190920191909155516323b872dd60e01b815233600482015230602482015260448101869052908616906323b872dd90606401600060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b5050604080518082018252858152426020808301918252600380546000908152600f9092529381209251835590516001909201919091558154935090915061122983611cb2565b909155505060015433907f1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a88585604051611264929190611ccb565b60405180910390a35050505050565b606060008061128160015490565b67ffffffffffffffff81111561129957611299611927565b60405190808252806020026020018201604052801561133457816020015b604080516101a081018252600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840183905261014084018390526101608401839052610180840183905283526020830191909152918101919091528152602001906001900390816112b75790505b50905060015b60015481116114eb576000818152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff16156114d957604080516000838152600e602081815284832080546001600160a01b03908116808652600d84528786206001938401548088529085528887206101a089018a52805460608a0190815294810154841660808a01526002810154841660a08a0152600381015460c08a015260048082015460e08b0152600582015460ff81161515610100808d019190915290049094166101208a015260068101546101408a015260078101546101608a01526008015461018089015292875283870189905294889052929091528451638ad9134560e01b8152918201529192830191638ad9134590602401600060405180830381865afa158015611482573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114aa9190810190611ced565b8152508284815181106114bf576114bf611d64565b602002602001018190525082806114d590611cb2565b9350505b806114e381611cb2565b91505061133a565b5092915050565b6000818152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff1661156f5760405162461bcd60e51b815260206004820152601560248201527402a3434b99024ba32b6903737ba103634b9ba32b21605d1b604482015260640161077c565b6000818152600e6020818152604080842080546001600160a01b039081168652600d808552838720600180850180548a5291875285892080820154600290910180546001600160a01b03191691861691909117905593548316808952918652848820905480895290865284882090930154968890529490935290516323b872dd60e01b81523060048201529390911660248401526044830152906323b872dd90606401600060405180830381600087803b15801561162c57600080fd5b505af1158015611640573d6000803e3d6000fd5b5050506000828152600e6020818152604080842080546001600160a01b039081168652600d808552838720600180850180548a52918752858920600501805460ff191690558454841689529186528488208154895286528488206004018a9055815488529590945291852094879052845481546001600160a01b03191692169190911790559182015490556116d5915061179f565b6000818152600e6020908152604080832080546001600160a01b039081168552600d845282852060019283015486528452938290208054918101546003909101548351928352941692810192909252339082015260608101919091527ffb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e024436039060800160405180910390a150565b6117696117f6565b6001600160a01b03811661179357604051631e4fbdf760e01b81526000600482015260240161077c565b61179c81611823565b50565b8054806117ee5760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161077c565b600019019055565b6000546001600160a01b03163314610f505760405163118cdaa760e01b815233600482015260240161077c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461188a57600080fd5b919050565b6000602082840312156118a157600080fd5b6118aa82611873565b9392505050565b6000602082840312156118c357600080fd5b5035919050565b600080604083850312156118dd57600080fd5b50508035926020909101359150565b80356004811061188a57600080fd5b6000806040838503121561190e57600080fd5b8235915061191e602084016118ec565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561196657611966611927565b604052919050565b600067ffffffffffffffff82111561198857611988611927565b50601f01601f191660200190565b600080600080600060a086880312156119ae57600080fd5b6119b786611873565b945060208601359350604086013567ffffffffffffffff8111156119da57600080fd5b8601601f810188136119eb57600080fd5b80356119fe6119f98261196e565b61193d565b818152896020838501011115611a1357600080fd5b8160208401602083013760009181016020019190915293505060608601359150611a3f60808701611873565b90509295509295909350565b60008060408385031215611a5e57600080fd5b611a6783611873565b946020939093013593505050565b60005b83811015611a90578181015183820152602001611a78565b50506000910152565b60008151808452611ab1816020860160208601611a75565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611be157603f1987860301845281518051805187526020810151611b2060208901826001600160a01b03169052565b506040810151611b3b60408901826001600160a01b03169052565b50606081015160608801526080810151608088015260a0810151611b6360a089018215159052565b5060c0810151611b7e60c08901826001600160a01b03169052565b5060e081015160e088015261010081015161010088015261012081015161012088015250602081015161014087015260408101519050610180610160870152611bcb610180870182611a99565b9550506020938401939190910190600101611aed565b50929695505050505050565b600060208284031215611bff57600080fd5b6118aa826118ec565b600060208284031215611c1a57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417611c6457611c64611c37565b92915050565b600082611c8757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115611c6457611c64611c37565b81810381811115611c6457611c64611c37565b600060018201611cc457611cc4611c37565b5060010190565b604081526000611cde6040830185611a99565b90508260208301529392505050565b600060208284031215611cff57600080fd5b815167ffffffffffffffff811115611d1657600080fd5b8201601f81018413611d2757600080fd5b8051611d356119f98261196e565b818152856020838501011115611d4a57600080fd5b611d5b826020830160208601611a75565b95945050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b7cf876d243431b87f2a79a95367c296828e10477aca05fa16d71c50943a67c764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x5F31F088C0D692FF133BD3B11B923F4E1BE99E9B OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0xE2CBADC3250DC901596E1CDFFA778FC313162247 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH20 0x572DD734F1068C1EDA13E0B655BC227B31AD8F72 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xE533F399513F8ED44D7E12E458D532FE7005CF4E OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1FC3 CODESIZE SUB DUP1 PUSH2 0x1FC3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0xB3 SWAP2 PUSH2 0x1D4 JUMP JUMPDEST CALLER DUP1 PUSH2 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2 DUP2 PUSH2 0x184 JUMP JUMPDEST POP POP PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 PUSH32 0x13649B2456F1B42FEF0F0040B3AAEABCD21A76A0F3F5DEFD4F583839455116E8 DUP2 SWAP1 SSTORE PUSH1 0x3 PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5C DUP2 SWAP1 SSTORE PUSH1 0x4 PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD720 SSTORE SWAP1 MSTORE PUSH1 0x5 PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD7 SSTORE PUSH2 0x204 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1DB0 DUP1 PUSH2 0x213 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C7CE62D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x9F5E6FD9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F5E6FD9 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xB50C0D20 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xBC4BC9C8 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C7CE62D EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x93F31109 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95CE4A3B EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6081A0DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x6081A0DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x62590604 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x752CD654 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3147F39 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1065CF73 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x3529280B EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0xF3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 SWAP6 DUP8 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0xFF DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 DUP11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x20 DUP13 ADD MSTORE SWAP8 DUP10 AND SWAP8 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x14F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x596 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x640 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x658 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x674 JUMPI PUSH1 0x1 DUP1 PUSH1 0x1 DUP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x684 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x690 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x6BD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2A3434B99024BA32B6903737BA103634B9BA32B21 PUSH1 0x5D SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD AND CALLER EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BA9030B932903737BA1027BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0x64 PUSH1 0xC DUP3 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x883 PUSH2 0x1C21 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP8 DUP4 MSTORE SWAP1 SWAP4 MSTORE KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP3 POP CALLER SWAP2 AND SUB PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103A34329029B2B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x969 SWAP1 DUP3 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F756768207072696365 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SUB PUSH2 0xA96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x55 PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xF PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD ISZERO PUSH2 0xAFC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x5F PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xB99 SWAP2 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 DUP12 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x64 SWAP1 PUSH2 0xC06 SWAP1 DUP5 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xC10 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xC1F DUP7 DUP5 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP4 SWAP5 POP AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP8 ISZERO PUSH2 0x8FC MUL SWAP2 DUP9 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 ISZERO PUSH2 0x8FC MUL SWAP2 DUP10 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 ADD DUP1 SLOAD SWAP2 PUSH2 0xDDD DUP4 PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xE PUSH1 0x0 PUSH2 0xDEF PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP14 DUP3 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH2 0xE3C SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD DUP3 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP5 AND DUP2 MSTORE SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x7BD3AA7D673767F759EBF216E7F6C12844986C661AE6E0F1D988CF7EB7394D1D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP4 AND SWAP1 DUP4 ADD MSTORE CALLER DUP3 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP4 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH32 0x5FAFAD85DEC201C2E73B6A2BEF6351129304A624EA8720ECD04CD7F04D83BC39 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF46 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xF50 PUSH1 0x0 PUSH2 0x1823 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF60 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH2 0x114C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP4 DUP2 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP4 POP SWAP1 SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD CALLER SWAP1 PUSH32 0x1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1281 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1334 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x120 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x140 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x160 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x180 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12B7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x14EB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0xD DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x1A0 DUP10 ADD DUP11 MSTORE DUP1 SLOAD PUSH1 0x60 DUP11 ADD SWAP1 DUP2 MSTORE SWAP5 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0x4 DUP1 DUP3 ADD SLOAD PUSH1 0xE0 DUP12 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP1 DUP14 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DIV SWAP1 SWAP5 AND PUSH2 0x120 DUP11 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x140 DUP11 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x160 DUP11 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x180 DUP10 ADD MSTORE SWAP3 DUP8 MSTORE DUP4 DUP8 ADD DUP10 SWAP1 MSTORE SWAP5 DUP9 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP5 MLOAD PUSH4 0x8AD91345 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 PUSH4 0x8AD91345 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14AA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CED JUMP JUMPDEST DUP2 MSTORE POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14BF JUMPI PUSH2 0x14BF PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x14D5 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x14E3 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x133A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2A3434B99024BA32B6903737BA103634B9BA32B21 PUSH1 0x5D SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD DUP11 MSTORE SWAP2 DUP8 MSTORE DUP6 DUP10 KECCAK256 DUP1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 AND DUP1 DUP10 MSTORE SWAP2 DUP7 MSTORE DUP5 DUP9 KECCAK256 SWAP1 SLOAD DUP1 DUP10 MSTORE SWAP1 DUP7 MSTORE DUP5 DUP9 KECCAK256 SWAP1 SWAP4 ADD SLOAD SWAP7 DUP9 SWAP1 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD DUP11 MSTORE SWAP2 DUP8 MSTORE DUP6 DUP10 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP5 SLOAD DUP5 AND DUP10 MSTORE SWAP2 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP2 SLOAD DUP10 MSTORE DUP7 MSTORE DUP5 DUP9 KECCAK256 PUSH1 0x4 ADD DUP11 SWAP1 SSTORE DUP2 SLOAD DUP9 MSTORE SWAP6 SWAP1 SWAP5 MSTORE SWAP2 DUP6 KECCAK256 SWAP5 DUP8 SWAP1 MSTORE DUP5 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 DUP3 ADD SLOAD SWAP1 SSTORE PUSH2 0x16D5 SWAP2 POP PUSH2 0x179F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP3 DUP4 MSTORE SWAP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1769 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1793 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x1823 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x17EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18AA DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x191E PUSH1 0x20 DUP5 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1966 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1988 PUSH2 0x1927 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B7 DUP7 PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19FE PUSH2 0x19F9 DUP3 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x193D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP10 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A3F PUSH1 0x80 DUP8 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A67 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A78 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AB1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD DUP8 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1B20 PUSH1 0x20 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1B3B PUSH1 0x40 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x1B63 PUSH1 0xA0 DUP10 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1B7E PUSH1 0xC0 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP9 ADD MSTORE POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 POP PUSH2 0x180 PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x1BCB PUSH2 0x180 DUP8 ADD DUP3 PUSH2 0x1A99 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AED JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18AA DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CC4 JUMPI PUSH2 0x1CC4 PUSH2 0x1C37 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CDE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1D27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1D35 PUSH2 0x19F9 DUP3 PUSH2 0x196E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5B DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A75 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xCF DUP8 PUSH14 0x243431B87F2A79A95367C296828E LT SELFBALANCE PUSH27 0xCA05FA16D71C50943A67C764736F6C634300081A00330000000000 ",
							"sourceMap": "1155:9332:17:-:0;;;1440:59;;;-1:-1:-1;;;;;;1440:59:17;;;1457:42;1440:59;;;;1505:63;;;;;1526:42;1505:63;;;1574:61;;;;;1593:42;1574:61;;;1641:62;;;;;;1661:42;1641:62;;;1714:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:18;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;1766:13:17::1;:30;::::0;1799:1:::1;1766:30:::0;:34;;;1841:1:::1;1806:32:::0;:36;;;1883:1:::1;1848:32:::0;:36;1890:34;;1927:1:::1;1890:34:::0;:38;1155:9332;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;517:127::-;1155:9332:17;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Buy_3915": {
									"entryPoint": 2105,
									"id": 3915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@CancleListForSale_4254": {
									"entryPoint": 5362,
									"id": 4254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Index_3366": {
									"entryPoint": null,
									"id": 3366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Sales_3380": {
									"entryPoint": null,
									"id": 3380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Volume_3371": {
									"entryPoint": null,
									"id": 3371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6134,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_items_3361": {
									"entryPoint": null,
									"id": 3361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 6179,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkBalanceOf_4033": {
									"entryPoint": 1114,
									"id": 4033,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@commission_3376": {
									"entryPoint": null,
									"id": 3376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1662": {
									"entryPoint": null,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_1704": {
									"entryPoint": 6047,
									"id": 1704,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@editList_4091": {
									"entryPoint": 1795,
									"id": 4091,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAllListedNfts_4344": {
									"entryPoint": 4723,
									"id": 4344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1676": {
									"entryPoint": null,
									"id": 1676,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listItem_3535": {
									"entryPoint": 3922,
									"id": 3535,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@memberShipPer_3346": {
									"entryPoint": null,
									"id": 3346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3902,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5985,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_memberShip": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_uint256t_address": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_enum$_memberShip_$3305": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_memberShip_$3305": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4bc50a72ea0d4ce02c3dc44dccae2f0a8d893bf130dff93bc3a242cb2f0b1fa0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a92904ff54443fb52d8ac13713ea139ff614ee79b65883763b05d732a0ae5363__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbb4ae68fd82aad3273b6e6f859ee08040821d0ef6a6b11ab6713d6ae053aeb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 11,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13995:18",
										"nodeType": "YulBlock",
										"src": "0:13995:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:18",
													"nodeType": "YulBlock",
													"src": "63:124:18",
													"statements": [
														{
															"nativeSrc": "73:29:18",
															"nodeType": "YulAssignment",
															"src": "73:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:18"
																},
																"nativeSrc": "82:20:18",
																"nodeType": "YulFunctionCall",
																"src": "82:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:18",
																"nodeType": "YulBlock",
																"src": "165:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:18",
																					"nodeType": "YulLiteral",
																					"src": "174:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:18",
																					"nodeType": "YulLiteral",
																					"src": "177:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:18"
																			},
																			"nativeSrc": "167:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:18"
																		},
																		"nativeSrc": "167:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:18",
																										"nodeType": "YulLiteral",
																										"src": "150:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:18",
																										"nodeType": "YulLiteral",
																										"src": "155:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:18"
																								},
																								"nativeSrc": "146:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:18",
																								"nodeType": "YulLiteral",
																								"src": "159:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:18"
																						},
																						"nativeSrc": "142:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:18"
																				},
																				"nativeSrc": "131:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:18"
																		},
																		"nativeSrc": "121:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:18"
																},
																"nativeSrc": "114:50:18",
																"nodeType": "YulFunctionCall",
																"src": "114:50:18"
															},
															"nativeSrc": "111:70:18",
															"nodeType": "YulIf",
															"src": "111:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:18",
														"nodeType": "YulTypedName",
														"src": "42:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:18",
														"nodeType": "YulTypedName",
														"src": "53:5:18",
														"type": ""
													}
												],
												"src": "14:173:18"
											},
											{
												"body": {
													"nativeSrc": "262:116:18",
													"nodeType": "YulBlock",
													"src": "262:116:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:18",
																"nodeType": "YulBlock",
																"src": "308:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:18",
																					"nodeType": "YulLiteral",
																					"src": "317:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:18",
																					"nodeType": "YulLiteral",
																					"src": "320:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:18"
																			},
																			"nativeSrc": "310:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:18"
																		},
																		"nativeSrc": "310:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:18"
																		},
																		"nativeSrc": "279:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:18",
																		"nodeType": "YulLiteral",
																		"src": "304:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:18"
																},
																"nativeSrc": "275:32:18",
																"nodeType": "YulFunctionCall",
																"src": "275:32:18"
															},
															"nativeSrc": "272:52:18",
															"nodeType": "YulIf",
															"src": "272:52:18"
														},
														{
															"nativeSrc": "333:39:18",
															"nodeType": "YulAssignment",
															"src": "333:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:18"
																},
																"nativeSrc": "343:29:18",
																"nodeType": "YulFunctionCall",
																"src": "343:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:18",
														"nodeType": "YulTypedName",
														"src": "228:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:18",
														"nodeType": "YulTypedName",
														"src": "239:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:18",
														"nodeType": "YulTypedName",
														"src": "251:6:18",
														"type": ""
													}
												],
												"src": "192:186:18"
											},
											{
												"body": {
													"nativeSrc": "424:50:18",
													"nodeType": "YulBlock",
													"src": "424:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "441:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "441:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "460:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "460:5:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "453:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "453:6:18"
																				},
																				"nativeSrc": "453:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "453:13:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "446:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "446:6:18"
																		},
																		"nativeSrc": "446:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "446:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "434:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:18"
																},
																"nativeSrc": "434:34:18",
																"nodeType": "YulFunctionCall",
																"src": "434:34:18"
															},
															"nativeSrc": "434:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "434:34:18"
														}
													]
												},
												"name": "abi_encode_bool",
												"nativeSrc": "383:91:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "408:5:18",
														"nodeType": "YulTypedName",
														"src": "408:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "415:3:18",
														"nodeType": "YulTypedName",
														"src": "415:3:18",
														"type": ""
													}
												],
												"src": "383:91:18"
											},
											{
												"body": {
													"nativeSrc": "640:270:18",
													"nodeType": "YulBlock",
													"src": "640:270:18",
													"statements": [
														{
															"nativeSrc": "650:27:18",
															"nodeType": "YulAssignment",
															"src": "650:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "662:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "662:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "673:3:18",
																		"nodeType": "YulLiteral",
																		"src": "673:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "658:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "658:3:18"
																},
																"nativeSrc": "658:19:18",
																"nodeType": "YulFunctionCall",
																"src": "658:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "650:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "650:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "693:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "693:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "718:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "718:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "711:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "711:6:18"
																				},
																				"nativeSrc": "711:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "711:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "704:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "704:6:18"
																		},
																		"nativeSrc": "704:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "704:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "686:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "686:6:18"
																},
																"nativeSrc": "686:41:18",
																"nodeType": "YulFunctionCall",
																"src": "686:41:18"
															},
															"nativeSrc": "686:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "686:41:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "747:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "747:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "758:2:18",
																				"nodeType": "YulLiteral",
																				"src": "758:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "743:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:18"
																		},
																		"nativeSrc": "743:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "743:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "777:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "777:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "770:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "770:6:18"
																				},
																				"nativeSrc": "770:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "770:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "763:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "763:6:18"
																		},
																		"nativeSrc": "763:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "763:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "736:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:18"
																},
																"nativeSrc": "736:50:18",
																"nodeType": "YulFunctionCall",
																"src": "736:50:18"
															},
															"nativeSrc": "736:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "736:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "806:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "806:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "817:2:18",
																				"nodeType": "YulLiteral",
																				"src": "817:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:18"
																		},
																		"nativeSrc": "802:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "802:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "836:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "836:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "829:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "829:6:18"
																				},
																				"nativeSrc": "829:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "829:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "822:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "822:6:18"
																		},
																		"nativeSrc": "822:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "822:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:18"
																},
																"nativeSrc": "795:50:18",
																"nodeType": "YulFunctionCall",
																"src": "795:50:18"
															},
															"nativeSrc": "795:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "795:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "865:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "865:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "876:2:18",
																				"nodeType": "YulLiteral",
																				"src": "876:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "861:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:18"
																		},
																		"nativeSrc": "861:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "861:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "895:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "895:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "888:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "888:6:18"
																				},
																				"nativeSrc": "888:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "888:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "881:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:18"
																		},
																		"nativeSrc": "881:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "881:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "854:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:18"
																},
																"nativeSrc": "854:50:18",
																"nodeType": "YulFunctionCall",
																"src": "854:50:18"
															},
															"nativeSrc": "854:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "854:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool_t_bool__fromStack_reversed",
												"nativeSrc": "479:431:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "585:9:18",
														"nodeType": "YulTypedName",
														"src": "585:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "596:6:18",
														"nodeType": "YulTypedName",
														"src": "596:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "604:6:18",
														"nodeType": "YulTypedName",
														"src": "604:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "612:6:18",
														"nodeType": "YulTypedName",
														"src": "612:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "620:6:18",
														"nodeType": "YulTypedName",
														"src": "620:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "631:4:18",
														"nodeType": "YulTypedName",
														"src": "631:4:18",
														"type": ""
													}
												],
												"src": "479:431:18"
											},
											{
												"body": {
													"nativeSrc": "985:156:18",
													"nodeType": "YulBlock",
													"src": "985:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:18",
																"nodeType": "YulBlock",
																"src": "1031:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:18"
																			},
																			"nativeSrc": "1033:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:18"
																		},
																		"nativeSrc": "1033:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:18"
																		},
																		"nativeSrc": "1002:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:18"
																},
																"nativeSrc": "998:32:18",
																"nodeType": "YulFunctionCall",
																"src": "998:32:18"
															},
															"nativeSrc": "995:52:18",
															"nodeType": "YulIf",
															"src": "995:52:18"
														},
														{
															"nativeSrc": "1056:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1069:1:18",
																"nodeType": "YulLiteral",
																"src": "1069:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1060:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1060:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1079:32:18",
															"nodeType": "YulAssignment",
															"src": "1079:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1101:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1101:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1088:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1088:12:18"
																},
																"nativeSrc": "1088:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1088:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1079:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1079:5:18"
																}
															]
														},
														{
															"nativeSrc": "1120:15:18",
															"nodeType": "YulAssignment",
															"src": "1120:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1130:5:18",
																"nodeType": "YulIdentifier",
																"src": "1130:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1120:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "915:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "951:9:18",
														"nodeType": "YulTypedName",
														"src": "951:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "962:7:18",
														"nodeType": "YulTypedName",
														"src": "962:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "974:6:18",
														"nodeType": "YulTypedName",
														"src": "974:6:18",
														"type": ""
													}
												],
												"src": "915:226:18"
											},
											{
												"body": {
													"nativeSrc": "1275:119:18",
													"nodeType": "YulBlock",
													"src": "1275:119:18",
													"statements": [
														{
															"nativeSrc": "1285:26:18",
															"nodeType": "YulAssignment",
															"src": "1285:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1293:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:18"
																},
																"nativeSrc": "1293:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1293:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1285:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1285:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1327:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1327:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1338:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1338:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1320:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:18"
																},
																"nativeSrc": "1320:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1320:25:18"
															},
															"nativeSrc": "1320:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1320:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1365:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1376:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1376:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1361:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1361:3:18"
																		},
																		"nativeSrc": "1361:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1361:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1381:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1381:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:18"
																},
																"nativeSrc": "1354:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1354:34:18"
															},
															"nativeSrc": "1354:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1354:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1146:248:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1236:9:18",
														"nodeType": "YulTypedName",
														"src": "1236:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1247:6:18",
														"nodeType": "YulTypedName",
														"src": "1247:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1255:6:18",
														"nodeType": "YulTypedName",
														"src": "1255:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1266:4:18",
														"nodeType": "YulTypedName",
														"src": "1266:4:18",
														"type": ""
													}
												],
												"src": "1146:248:18"
											},
											{
												"body": {
													"nativeSrc": "1500:76:18",
													"nodeType": "YulBlock",
													"src": "1500:76:18",
													"statements": [
														{
															"nativeSrc": "1510:26:18",
															"nodeType": "YulAssignment",
															"src": "1510:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1522:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1522:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1533:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1533:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1518:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:18"
																},
																"nativeSrc": "1518:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1518:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1510:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1510:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1552:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1552:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:18"
																},
																"nativeSrc": "1545:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1545:25:18"
															},
															"nativeSrc": "1545:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1545:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1399:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1469:9:18",
														"nodeType": "YulTypedName",
														"src": "1469:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1480:6:18",
														"nodeType": "YulTypedName",
														"src": "1480:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1491:4:18",
														"nodeType": "YulTypedName",
														"src": "1491:4:18",
														"type": ""
													}
												],
												"src": "1399:177:18"
											},
											{
												"body": {
													"nativeSrc": "1668:259:18",
													"nodeType": "YulBlock",
													"src": "1668:259:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1714:16:18",
																"nodeType": "YulBlock",
																"src": "1714:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1726:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1726:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1716:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1716:6:18"
																			},
																			"nativeSrc": "1716:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1716:12:18"
																		},
																		"nativeSrc": "1716:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1716:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1689:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1689:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1698:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1698:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1685:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1685:3:18"
																		},
																		"nativeSrc": "1685:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1685:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1710:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1681:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:18"
																},
																"nativeSrc": "1681:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1681:32:18"
															},
															"nativeSrc": "1678:52:18",
															"nodeType": "YulIf",
															"src": "1678:52:18"
														},
														{
															"nativeSrc": "1739:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1739:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1752:1:18",
																"nodeType": "YulLiteral",
																"src": "1752:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1743:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1743:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1762:32:18",
															"nodeType": "YulAssignment",
															"src": "1762:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1784:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1784:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1771:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1771:12:18"
																},
																"nativeSrc": "1771:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1771:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1762:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1762:5:18"
																}
															]
														},
														{
															"nativeSrc": "1803:15:18",
															"nodeType": "YulAssignment",
															"src": "1803:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1813:5:18",
																"nodeType": "YulIdentifier",
																"src": "1813:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1803:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:18"
																}
															]
														},
														{
															"nativeSrc": "1827:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1827:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1842:1:18",
																"nodeType": "YulLiteral",
																"src": "1842:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1831:7:18",
																	"nodeType": "YulTypedName",
																	"src": "1831:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1852:43:18",
															"nodeType": "YulAssignment",
															"src": "1852:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1880:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1880:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1891:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1891:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1876:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:18"
																		},
																		"nativeSrc": "1876:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1876:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1863:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1863:12:18"
																},
																"nativeSrc": "1863:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1863:32:18"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1852:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1852:7:18"
																}
															]
														},
														{
															"nativeSrc": "1904:17:18",
															"nodeType": "YulAssignment",
															"src": "1904:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "1914:7:18",
																"nodeType": "YulIdentifier",
																"src": "1914:7:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1904:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1581:346:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1626:9:18",
														"nodeType": "YulTypedName",
														"src": "1626:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1637:7:18",
														"nodeType": "YulTypedName",
														"src": "1637:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1649:6:18",
														"nodeType": "YulTypedName",
														"src": "1649:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1657:6:18",
														"nodeType": "YulTypedName",
														"src": "1657:6:18",
														"type": ""
													}
												],
												"src": "1581:346:18"
											},
											{
												"body": {
													"nativeSrc": "1989:94:18",
													"nodeType": "YulBlock",
													"src": "1989:94:18",
													"statements": [
														{
															"nativeSrc": "1999:29:18",
															"nodeType": "YulAssignment",
															"src": "1999:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2021:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2021:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2008:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2008:12:18"
																},
																"nativeSrc": "2008:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2008:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1999:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1999:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2061:16:18",
																"nodeType": "YulBlock",
																"src": "2061:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2070:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2073:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2063:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:18"
																			},
																			"nativeSrc": "2063:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2063:12:18"
																		},
																		"nativeSrc": "2063:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2050:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2050:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2057:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2057:1:18",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2047:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2047:2:18"
																		},
																		"nativeSrc": "2047:12:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2047:12:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2040:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:18"
																},
																"nativeSrc": "2040:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2040:20:18"
															},
															"nativeSrc": "2037:40:18",
															"nodeType": "YulIf",
															"src": "2037:40:18"
														}
													]
												},
												"name": "abi_decode_enum_memberShip",
												"nativeSrc": "1932:151:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1968:6:18",
														"nodeType": "YulTypedName",
														"src": "1968:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1979:5:18",
														"nodeType": "YulTypedName",
														"src": "1979:5:18",
														"type": ""
													}
												],
												"src": "1932:151:18"
											},
											{
												"body": {
													"nativeSrc": "2190:221:18",
													"nodeType": "YulBlock",
													"src": "2190:221:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2236:16:18",
																"nodeType": "YulBlock",
																"src": "2236:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2245:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2245:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2248:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2248:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2238:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:18"
																			},
																			"nativeSrc": "2238:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2238:12:18"
																		},
																		"nativeSrc": "2238:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2238:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2211:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2211:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2220:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2220:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:18"
																		},
																		"nativeSrc": "2207:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2232:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2232:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2203:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:18"
																},
																"nativeSrc": "2203:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2203:32:18"
															},
															"nativeSrc": "2200:52:18",
															"nodeType": "YulIf",
															"src": "2200:52:18"
														},
														{
															"nativeSrc": "2261:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2261:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2274:1:18",
																"nodeType": "YulLiteral",
																"src": "2274:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2265:5:18",
																	"nodeType": "YulTypedName",
																	"src": "2265:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2284:32:18",
															"nodeType": "YulAssignment",
															"src": "2284:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2306:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2306:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2293:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2293:12:18"
																},
																"nativeSrc": "2293:23:18",
																"nodeType": "YulFunctionCall",
																"src": "2293:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2284:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2284:5:18"
																}
															]
														},
														{
															"nativeSrc": "2325:15:18",
															"nodeType": "YulAssignment",
															"src": "2325:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2335:5:18",
																"nodeType": "YulIdentifier",
																"src": "2335:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2325:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:18"
																}
															]
														},
														{
															"nativeSrc": "2349:56:18",
															"nodeType": "YulAssignment",
															"src": "2349:56:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2390:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2401:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2401:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2386:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2386:3:18"
																		},
																		"nativeSrc": "2386:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_memberShip",
																	"nativeSrc": "2359:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2359:26:18"
																},
																"nativeSrc": "2359:46:18",
																"nodeType": "YulFunctionCall",
																"src": "2359:46:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2349:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_memberShip_$3305",
												"nativeSrc": "2088:323:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2148:9:18",
														"nodeType": "YulTypedName",
														"src": "2148:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2159:7:18",
														"nodeType": "YulTypedName",
														"src": "2159:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2171:6:18",
														"nodeType": "YulTypedName",
														"src": "2171:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2179:6:18",
														"nodeType": "YulTypedName",
														"src": "2179:6:18",
														"type": ""
													}
												],
												"src": "2088:323:18"
											},
											{
												"body": {
													"nativeSrc": "2448:95:18",
													"nodeType": "YulBlock",
													"src": "2448:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2465:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2472:3:18",
																				"nodeType": "YulLiteral",
																				"src": "2472:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2477:10:18",
																				"nodeType": "YulLiteral",
																				"src": "2477:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:18"
																		},
																		"nativeSrc": "2468:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2458:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:18"
																},
																"nativeSrc": "2458:31:18",
																"nodeType": "YulFunctionCall",
																"src": "2458:31:18"
															},
															"nativeSrc": "2458:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "2458:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2505:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2505:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2508:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2498:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:18"
																},
																"nativeSrc": "2498:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2498:15:18"
															},
															"nativeSrc": "2498:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2498:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2529:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2529:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2532:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2532:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2522:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:18"
																},
																"nativeSrc": "2522:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2522:15:18"
															},
															"nativeSrc": "2522:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2522:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2416:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "2416:127:18"
											},
											{
												"body": {
													"nativeSrc": "2593:230:18",
													"nodeType": "YulBlock",
													"src": "2593:230:18",
													"statements": [
														{
															"nativeSrc": "2603:19:18",
															"nodeType": "YulAssignment",
															"src": "2603:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2619:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2613:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2613:5:18"
																},
																"nativeSrc": "2613:9:18",
																"nodeType": "YulFunctionCall",
																"src": "2613:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2603:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:18"
																}
															]
														},
														{
															"nativeSrc": "2631:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2631:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2653:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2669:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "2669:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2675:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2675:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2665:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2665:3:18"
																				},
																				"nativeSrc": "2665:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2665:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2684:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2684:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2680:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2680:3:18"
																				},
																				"nativeSrc": "2680:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2680:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2661:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2661:3:18"
																		},
																		"nativeSrc": "2661:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2661:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2649:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2649:3:18"
																},
																"nativeSrc": "2649:40:18",
																"nodeType": "YulFunctionCall",
																"src": "2649:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2635:10:18",
																	"nodeType": "YulTypedName",
																	"src": "2635:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2764:22:18",
																"nodeType": "YulBlock",
																"src": "2764:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2766:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2766:16:18"
																			},
																			"nativeSrc": "2766:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2766:18:18"
																		},
																		"nativeSrc": "2766:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2707:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2707:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2719:18:18",
																				"nodeType": "YulLiteral",
																				"src": "2719:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2704:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2704:2:18"
																		},
																		"nativeSrc": "2704:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2704:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2743:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2743:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2755:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2740:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2740:2:18"
																		},
																		"nativeSrc": "2740:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2740:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2701:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2701:2:18"
																},
																"nativeSrc": "2701:62:18",
																"nodeType": "YulFunctionCall",
																"src": "2701:62:18"
															},
															"nativeSrc": "2698:88:18",
															"nodeType": "YulIf",
															"src": "2698:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2802:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2802:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2806:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "2806:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:18"
																},
																"nativeSrc": "2795:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2795:22:18"
															},
															"nativeSrc": "2795:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2795:22:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2548:275:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2573:4:18",
														"nodeType": "YulTypedName",
														"src": "2573:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2582:6:18",
														"nodeType": "YulTypedName",
														"src": "2582:6:18",
														"type": ""
													}
												],
												"src": "2548:275:18"
											},
											{
												"body": {
													"nativeSrc": "2886:129:18",
													"nodeType": "YulBlock",
													"src": "2886:129:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2930:22:18",
																"nodeType": "YulBlock",
																"src": "2930:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2932:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2932:16:18"
																			},
																			"nativeSrc": "2932:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:18:18"
																		},
																		"nativeSrc": "2932:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2902:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2902:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2910:18:18",
																		"nodeType": "YulLiteral",
																		"src": "2910:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2899:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2899:2:18"
																},
																"nativeSrc": "2899:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2899:30:18"
															},
															"nativeSrc": "2896:56:18",
															"nodeType": "YulIf",
															"src": "2896:56:18"
														},
														{
															"nativeSrc": "2961:48:18",
															"nodeType": "YulAssignment",
															"src": "2961:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2981:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2989:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2989:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2977:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2977:3:18"
																				},
																				"nativeSrc": "2977:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2977:15:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2998:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2998:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2994:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2994:3:18"
																				},
																				"nativeSrc": "2994:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2994:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2973:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:18"
																		},
																		"nativeSrc": "2973:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2973:29:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3004:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3004:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2969:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2969:3:18"
																},
																"nativeSrc": "2969:40:18",
																"nodeType": "YulFunctionCall",
																"src": "2969:40:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2961:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2961:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_string",
												"nativeSrc": "2828:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2866:6:18",
														"nodeType": "YulTypedName",
														"src": "2866:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2877:4:18",
														"nodeType": "YulTypedName",
														"src": "2877:4:18",
														"type": ""
													}
												],
												"src": "2828:187:18"
											},
											{
												"body": {
													"nativeSrc": "3168:933:18",
													"nodeType": "YulBlock",
													"src": "3168:933:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3215:16:18",
																"nodeType": "YulBlock",
																"src": "3215:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3224:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3224:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3227:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3227:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3217:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3217:6:18"
																			},
																			"nativeSrc": "3217:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3217:12:18"
																		},
																		"nativeSrc": "3217:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3217:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3189:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3185:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:18"
																		},
																		"nativeSrc": "3185:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3210:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3181:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:18"
																},
																"nativeSrc": "3181:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3181:33:18"
															},
															"nativeSrc": "3178:53:18",
															"nodeType": "YulIf",
															"src": "3178:53:18"
														},
														{
															"nativeSrc": "3240:39:18",
															"nodeType": "YulAssignment",
															"src": "3240:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3269:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3269:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3250:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3250:18:18"
																},
																"nativeSrc": "3250:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3250:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3240:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:18"
																}
															]
														},
														{
															"nativeSrc": "3288:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3288:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3301:1:18",
																"nodeType": "YulLiteral",
																"src": "3301:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3292:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3292:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3311:41:18",
															"nodeType": "YulAssignment",
															"src": "3311:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3337:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3337:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3348:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3348:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3333:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3333:3:18"
																		},
																		"nativeSrc": "3333:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3333:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3320:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3320:12:18"
																},
																"nativeSrc": "3320:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3320:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3311:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:18"
																}
															]
														},
														{
															"nativeSrc": "3361:15:18",
															"nodeType": "YulAssignment",
															"src": "3361:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "3371:5:18",
																"nodeType": "YulIdentifier",
																"src": "3371:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3361:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:18"
																}
															]
														},
														{
															"nativeSrc": "3385:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3385:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3416:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3416:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3427:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3427:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3412:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3412:3:18"
																		},
																		"nativeSrc": "3412:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3412:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3399:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3399:12:18"
																},
																"nativeSrc": "3399:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3399:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3389:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3389:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:16:18",
																"nodeType": "YulBlock",
																"src": "3474:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3486:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3476:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:18"
																			},
																			"nativeSrc": "3476:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:12:18"
																		},
																		"nativeSrc": "3476:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3446:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3454:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3454:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3443:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:18"
																},
																"nativeSrc": "3443:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3443:30:18"
															},
															"nativeSrc": "3440:50:18",
															"nodeType": "YulIf",
															"src": "3440:50:18"
														},
														{
															"nativeSrc": "3499:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3499:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3513:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3513:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3524:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3524:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3509:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:18"
																},
																"nativeSrc": "3509:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3509:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3503:2:18",
																	"nodeType": "YulTypedName",
																	"src": "3503:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3579:16:18",
																"nodeType": "YulBlock",
																"src": "3579:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3588:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3588:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3591:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3591:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3581:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:18"
																			},
																			"nativeSrc": "3581:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3581:12:18"
																		},
																		"nativeSrc": "3581:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3581:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3558:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "3558:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3562:4:18",
																						"nodeType": "YulLiteral",
																						"src": "3562:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3554:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:18"
																				},
																				"nativeSrc": "3554:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3554:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3569:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3569:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3550:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:18"
																		},
																		"nativeSrc": "3550:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3543:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:18"
																},
																"nativeSrc": "3543:35:18",
																"nodeType": "YulFunctionCall",
																"src": "3543:35:18"
															},
															"nativeSrc": "3540:55:18",
															"nodeType": "YulIf",
															"src": "3540:55:18"
														},
														{
															"nativeSrc": "3604:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3604:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3631:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "3631:2:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3618:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3618:12:18"
																},
																"nativeSrc": "3618:16:18",
																"nodeType": "YulFunctionCall",
																"src": "3618:16:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3608:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3608:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3643:66:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3643:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3701:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3701:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_string",
																			"nativeSrc": "3672:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "3672:28:18"
																		},
																		"nativeSrc": "3672:36:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3672:36:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3656:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "3656:15:18"
																},
																"nativeSrc": "3656:53:18",
																"nodeType": "YulFunctionCall",
																"src": "3656:53:18"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "3647:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3647:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3725:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3725:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3732:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3732:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3718:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:18"
																},
																"nativeSrc": "3718:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3718:21:18"
															},
															"nativeSrc": "3718:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "3718:21:18"
														},
														{
															"body": {
																"nativeSrc": "3789:16:18",
																"nodeType": "YulBlock",
																"src": "3789:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3801:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3801:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3791:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:18"
																			},
																			"nativeSrc": "3791:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:12:18"
																		},
																		"nativeSrc": "3791:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3762:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "3762:2:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3766:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3758:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3758:3:18"
																				},
																				"nativeSrc": "3758:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3758:15:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3775:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3754:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3754:3:18"
																		},
																		"nativeSrc": "3754:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3754:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3780:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "3780:7:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3751:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3751:2:18"
																},
																"nativeSrc": "3751:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3751:37:18"
															},
															"nativeSrc": "3748:57:18",
															"nodeType": "YulIf",
															"src": "3748:57:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "3831:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3831:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3838:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3838:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3827:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:18"
																		},
																		"nativeSrc": "3827:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3827:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3847:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3847:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3851:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3851:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3843:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3843:3:18"
																		},
																		"nativeSrc": "3843:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3843:11:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3856:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3856:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3814:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3814:12:18"
																},
																"nativeSrc": "3814:49:18",
																"nodeType": "YulFunctionCall",
																"src": "3814:49:18"
															},
															"nativeSrc": "3814:49:18",
															"nodeType": "YulExpressionStatement",
															"src": "3814:49:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "3887:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3887:5:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3894:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3894:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3883:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3883:3:18"
																				},
																				"nativeSrc": "3883:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3883:18:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3903:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3903:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3879:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3879:3:18"
																		},
																		"nativeSrc": "3879:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3879:27:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3872:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:18"
																},
																"nativeSrc": "3872:38:18",
																"nodeType": "YulFunctionCall",
																"src": "3872:38:18"
															},
															"nativeSrc": "3872:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "3872:38:18"
														},
														{
															"nativeSrc": "3919:15:18",
															"nodeType": "YulAssignment",
															"src": "3919:15:18",
															"value": {
																"name": "array",
																"nativeSrc": "3929:5:18",
																"nodeType": "YulIdentifier",
																"src": "3929:5:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3919:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:18"
																}
															]
														},
														{
															"nativeSrc": "3943:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3943:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3958:1:18",
																"nodeType": "YulLiteral",
																"src": "3958:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3947:7:18",
																	"nodeType": "YulTypedName",
																	"src": "3947:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3968:43:18",
															"nodeType": "YulAssignment",
															"src": "3968:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4007:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3992:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:18"
																		},
																		"nativeSrc": "3992:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3979:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3979:12:18"
																},
																"nativeSrc": "3979:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3979:32:18"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3968:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3968:7:18"
																}
															]
														},
														{
															"nativeSrc": "4020:17:18",
															"nodeType": "YulAssignment",
															"src": "4020:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "4030:7:18",
																"nodeType": "YulIdentifier",
																"src": "4030:7:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4020:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:18"
																}
															]
														},
														{
															"nativeSrc": "4046:49:18",
															"nodeType": "YulAssignment",
															"src": "4046:49:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4079:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4090:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4090:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:18"
																		},
																		"nativeSrc": "4075:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4056:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4056:18:18"
																},
																"nativeSrc": "4056:39:18",
																"nodeType": "YulFunctionCall",
																"src": "4056:39:18"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4046:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_uint256t_address",
												"nativeSrc": "3020:1081:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3102:9:18",
														"nodeType": "YulTypedName",
														"src": "3102:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3113:7:18",
														"nodeType": "YulTypedName",
														"src": "3113:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3125:6:18",
														"nodeType": "YulTypedName",
														"src": "3125:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3133:6:18",
														"nodeType": "YulTypedName",
														"src": "3133:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3141:6:18",
														"nodeType": "YulTypedName",
														"src": "3141:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3149:6:18",
														"nodeType": "YulTypedName",
														"src": "3149:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3157:6:18",
														"nodeType": "YulTypedName",
														"src": "3157:6:18",
														"type": ""
													}
												],
												"src": "3020:1081:18"
											},
											{
												"body": {
													"nativeSrc": "4150:60:18",
													"nodeType": "YulBlock",
													"src": "4150:60:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4167:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4167:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4176:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4176:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4191:3:18",
																								"nodeType": "YulLiteral",
																								"src": "4191:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4196:1:18",
																								"nodeType": "YulLiteral",
																								"src": "4196:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4187:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4187:3:18"
																						},
																						"nativeSrc": "4187:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4187:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4200:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4200:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4183:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4183:3:18"
																				},
																				"nativeSrc": "4183:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4183:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4172:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:18"
																		},
																		"nativeSrc": "4172:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4160:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4160:6:18"
																},
																"nativeSrc": "4160:44:18",
																"nodeType": "YulFunctionCall",
																"src": "4160:44:18"
															},
															"nativeSrc": "4160:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "4160:44:18"
														}
													]
												},
												"name": "abi_encode_address",
												"nativeSrc": "4106:104:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4134:5:18",
														"nodeType": "YulTypedName",
														"src": "4134:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4141:3:18",
														"nodeType": "YulTypedName",
														"src": "4141:3:18",
														"type": ""
													}
												],
												"src": "4106:104:18"
											},
											{
												"body": {
													"nativeSrc": "4316:102:18",
													"nodeType": "YulBlock",
													"src": "4316:102:18",
													"statements": [
														{
															"nativeSrc": "4326:26:18",
															"nodeType": "YulAssignment",
															"src": "4326:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4338:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4338:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4349:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4349:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4334:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:18"
																},
																"nativeSrc": "4334:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4334:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4326:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4326:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4368:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4368:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4383:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4383:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4399:3:18",
																								"nodeType": "YulLiteral",
																								"src": "4399:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4404:1:18",
																								"nodeType": "YulLiteral",
																								"src": "4404:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4395:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4395:3:18"
																						},
																						"nativeSrc": "4395:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4395:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4408:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4408:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4391:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4391:3:18"
																				},
																				"nativeSrc": "4391:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4391:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4379:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:18"
																		},
																		"nativeSrc": "4379:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4379:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:18"
																},
																"nativeSrc": "4361:51:18",
																"nodeType": "YulFunctionCall",
																"src": "4361:51:18"
															},
															"nativeSrc": "4361:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "4361:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4215:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4285:9:18",
														"nodeType": "YulTypedName",
														"src": "4285:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4296:6:18",
														"nodeType": "YulTypedName",
														"src": "4296:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4307:4:18",
														"nodeType": "YulTypedName",
														"src": "4307:4:18",
														"type": ""
													}
												],
												"src": "4215:203:18"
											},
											{
												"body": {
													"nativeSrc": "4510:213:18",
													"nodeType": "YulBlock",
													"src": "4510:213:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4556:16:18",
																"nodeType": "YulBlock",
																"src": "4556:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4565:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4565:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4568:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4568:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4558:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:18"
																			},
																			"nativeSrc": "4558:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4558:12:18"
																		},
																		"nativeSrc": "4558:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4531:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4531:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4540:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4540:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4527:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:18"
																		},
																		"nativeSrc": "4527:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4523:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:18"
																},
																"nativeSrc": "4523:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4523:32:18"
															},
															"nativeSrc": "4520:52:18",
															"nodeType": "YulIf",
															"src": "4520:52:18"
														},
														{
															"nativeSrc": "4581:39:18",
															"nodeType": "YulAssignment",
															"src": "4581:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4610:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4610:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4591:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4591:18:18"
																},
																"nativeSrc": "4591:29:18",
																"nodeType": "YulFunctionCall",
																"src": "4591:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4581:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:18"
																}
															]
														},
														{
															"nativeSrc": "4629:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4629:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4642:1:18",
																"nodeType": "YulLiteral",
																"src": "4642:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4633:5:18",
																	"nodeType": "YulTypedName",
																	"src": "4633:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4652:41:18",
															"nodeType": "YulAssignment",
															"src": "4652:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4678:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4689:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4689:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4674:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:18"
																		},
																		"nativeSrc": "4674:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4674:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4661:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4661:12:18"
																},
																"nativeSrc": "4661:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4661:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4652:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4652:5:18"
																}
															]
														},
														{
															"nativeSrc": "4702:15:18",
															"nodeType": "YulAssignment",
															"src": "4702:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "4712:5:18",
																"nodeType": "YulIdentifier",
																"src": "4712:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4702:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4423:300:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4468:9:18",
														"nodeType": "YulTypedName",
														"src": "4468:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4479:7:18",
														"nodeType": "YulTypedName",
														"src": "4479:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4491:6:18",
														"nodeType": "YulTypedName",
														"src": "4491:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4499:6:18",
														"nodeType": "YulTypedName",
														"src": "4499:6:18",
														"type": ""
													}
												],
												"src": "4423:300:18"
											},
											{
												"body": {
													"nativeSrc": "5075:564:18",
													"nodeType": "YulBlock",
													"src": "5075:564:18",
													"statements": [
														{
															"nativeSrc": "5085:27:18",
															"nodeType": "YulAssignment",
															"src": "5085:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5097:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5097:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5108:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5108:3:18",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5093:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:18"
																},
																"nativeSrc": "5093:19:18",
																"nodeType": "YulFunctionCall",
																"src": "5093:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5085:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5085:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5128:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5128:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5139:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5139:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5121:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:18"
																},
																"nativeSrc": "5121:25:18",
																"nodeType": "YulFunctionCall",
																"src": "5121:25:18"
															},
															"nativeSrc": "5121:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "5121:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5166:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5166:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5177:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5177:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:18"
																		},
																		"nativeSrc": "5162:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5186:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5186:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5202:3:18",
																								"nodeType": "YulLiteral",
																								"src": "5202:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5207:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5207:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5198:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5198:3:18"
																						},
																						"nativeSrc": "5198:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5198:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5211:1:18",
																						"nodeType": "YulLiteral",
																						"src": "5211:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5194:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5194:3:18"
																				},
																				"nativeSrc": "5194:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5194:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5182:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5182:3:18"
																		},
																		"nativeSrc": "5182:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5182:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5155:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:18"
																},
																"nativeSrc": "5155:60:18",
																"nodeType": "YulFunctionCall",
																"src": "5155:60:18"
															},
															"nativeSrc": "5155:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "5155:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5235:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5235:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5246:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5246:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5231:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:18"
																		},
																		"nativeSrc": "5231:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5231:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5255:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5255:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5271:3:18",
																								"nodeType": "YulLiteral",
																								"src": "5271:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5276:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5276:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5267:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5267:3:18"
																						},
																						"nativeSrc": "5267:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5267:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5280:1:18",
																						"nodeType": "YulLiteral",
																						"src": "5280:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5263:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5263:3:18"
																				},
																				"nativeSrc": "5263:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5263:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5251:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:18"
																		},
																		"nativeSrc": "5251:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5251:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5224:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5224:6:18"
																},
																"nativeSrc": "5224:60:18",
																"nodeType": "YulFunctionCall",
																"src": "5224:60:18"
															},
															"nativeSrc": "5224:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "5224:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5304:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5304:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5315:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5315:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5300:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:18"
																		},
																		"nativeSrc": "5300:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5300:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5320:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5320:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5293:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:18"
																},
																"nativeSrc": "5293:34:18",
																"nodeType": "YulFunctionCall",
																"src": "5293:34:18"
															},
															"nativeSrc": "5293:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "5293:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5347:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5347:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5358:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5358:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5343:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:18"
																		},
																		"nativeSrc": "5343:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5343:19:18"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5364:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5364:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5336:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5336:6:18"
																},
																"nativeSrc": "5336:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5336:35:18"
															},
															"nativeSrc": "5336:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5336:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5391:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5402:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5402:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5387:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:18"
																		},
																		"nativeSrc": "5387:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5387:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "5422:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5422:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5415:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5415:6:18"
																				},
																				"nativeSrc": "5415:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5415:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5408:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5408:6:18"
																		},
																		"nativeSrc": "5408:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5408:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5380:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:18"
																},
																"nativeSrc": "5380:51:18",
																"nodeType": "YulFunctionCall",
																"src": "5380:51:18"
															},
															"nativeSrc": "5380:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "5380:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5451:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5451:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5462:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5462:3:18",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5447:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:18"
																		},
																		"nativeSrc": "5447:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value6",
																				"nativeSrc": "5472:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5472:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5488:3:18",
																								"nodeType": "YulLiteral",
																								"src": "5488:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5493:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5493:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5484:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5484:3:18"
																						},
																						"nativeSrc": "5484:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5484:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5497:1:18",
																						"nodeType": "YulLiteral",
																						"src": "5497:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5480:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5480:3:18"
																				},
																				"nativeSrc": "5480:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5480:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:18"
																		},
																		"nativeSrc": "5468:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5440:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5440:6:18"
																},
																"nativeSrc": "5440:61:18",
																"nodeType": "YulFunctionCall",
																"src": "5440:61:18"
															},
															"nativeSrc": "5440:61:18",
															"nodeType": "YulExpressionStatement",
															"src": "5440:61:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5521:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5521:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5532:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5532:3:18",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5517:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:18"
																		},
																		"nativeSrc": "5517:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5517:19:18"
																	},
																	{
																		"name": "value7",
																		"nativeSrc": "5538:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5538:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5510:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:18"
																},
																"nativeSrc": "5510:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5510:35:18"
															},
															"nativeSrc": "5510:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5510:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5565:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5576:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5576:3:18",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5561:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:18"
																		},
																		"nativeSrc": "5561:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5561:19:18"
																	},
																	{
																		"name": "value8",
																		"nativeSrc": "5582:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5554:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:18"
																},
																"nativeSrc": "5554:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5554:35:18"
															},
															"nativeSrc": "5554:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5554:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5620:3:18",
																				"nodeType": "YulLiteral",
																				"src": "5620:3:18",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:18"
																		},
																		"nativeSrc": "5605:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:19:18"
																	},
																	{
																		"name": "value9",
																		"nativeSrc": "5626:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5626:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:18"
																},
																"nativeSrc": "5598:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5598:35:18"
															},
															"nativeSrc": "5598:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5598:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4728:911:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4972:9:18",
														"nodeType": "YulTypedName",
														"src": "4972:9:18",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "4983:6:18",
														"nodeType": "YulTypedName",
														"src": "4983:6:18",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "4991:6:18",
														"nodeType": "YulTypedName",
														"src": "4991:6:18",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "4999:6:18",
														"nodeType": "YulTypedName",
														"src": "4999:6:18",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5007:6:18",
														"nodeType": "YulTypedName",
														"src": "5007:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5015:6:18",
														"nodeType": "YulTypedName",
														"src": "5015:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5023:6:18",
														"nodeType": "YulTypedName",
														"src": "5023:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5031:6:18",
														"nodeType": "YulTypedName",
														"src": "5031:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5039:6:18",
														"nodeType": "YulTypedName",
														"src": "5039:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5047:6:18",
														"nodeType": "YulTypedName",
														"src": "5047:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5055:6:18",
														"nodeType": "YulTypedName",
														"src": "5055:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5066:4:18",
														"nodeType": "YulTypedName",
														"src": "5066:4:18",
														"type": ""
													}
												],
												"src": "4728:911:18"
											},
											{
												"body": {
													"nativeSrc": "5710:184:18",
													"nodeType": "YulBlock",
													"src": "5710:184:18",
													"statements": [
														{
															"nativeSrc": "5720:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5720:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "5729:1:18",
																"nodeType": "YulLiteral",
																"src": "5729:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5724:1:18",
																	"nodeType": "YulTypedName",
																	"src": "5724:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5789:63:18",
																"nodeType": "YulBlock",
																"src": "5789:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "5814:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5814:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "5819:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "5819:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5810:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5810:3:18"
																					},
																					"nativeSrc": "5810:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5810:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "5833:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "5833:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5838:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "5838:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5829:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "5829:3:18"
																							},
																							"nativeSrc": "5829:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5829:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5823:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5823:5:18"
																					},
																					"nativeSrc": "5823:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5823:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5803:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5803:6:18"
																			},
																			"nativeSrc": "5803:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5803:39:18"
																		},
																		"nativeSrc": "5803:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5803:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5750:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "5750:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5753:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5753:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5747:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5747:2:18"
																},
																"nativeSrc": "5747:13:18",
																"nodeType": "YulFunctionCall",
																"src": "5747:13:18"
															},
															"nativeSrc": "5739:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5761:19:18",
																"nodeType": "YulBlock",
																"src": "5761:19:18",
																"statements": [
																	{
																		"nativeSrc": "5763:15:18",
																		"nodeType": "YulAssignment",
																		"src": "5763:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5772:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "5772:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5775:2:18",
																					"nodeType": "YulLiteral",
																					"src": "5775:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5768:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5768:3:18"
																			},
																			"nativeSrc": "5768:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5768:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5763:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5763:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5743:3:18",
																"nodeType": "YulBlock",
																"src": "5743:3:18",
																"statements": []
															},
															"src": "5739:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5872:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5872:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5877:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5877:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5868:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:18"
																		},
																		"nativeSrc": "5868:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5886:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5886:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5861:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5861:6:18"
																},
																"nativeSrc": "5861:27:18",
																"nodeType": "YulFunctionCall",
																"src": "5861:27:18"
															},
															"nativeSrc": "5861:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "5861:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5644:250:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5688:3:18",
														"nodeType": "YulTypedName",
														"src": "5688:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5693:3:18",
														"nodeType": "YulTypedName",
														"src": "5693:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5698:6:18",
														"nodeType": "YulTypedName",
														"src": "5698:6:18",
														"type": ""
													}
												],
												"src": "5644:250:18"
											},
											{
												"body": {
													"nativeSrc": "5949:221:18",
													"nodeType": "YulBlock",
													"src": "5949:221:18",
													"statements": [
														{
															"nativeSrc": "5959:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5959:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5979:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5979:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5973:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5973:5:18"
																},
																"nativeSrc": "5973:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5973:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5963:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5963:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6001:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6001:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6006:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6006:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5994:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:18"
																},
																"nativeSrc": "5994:19:18",
																"nodeType": "YulFunctionCall",
																"src": "5994:19:18"
															},
															"nativeSrc": "5994:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "5994:19:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6061:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6061:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6068:4:18",
																				"nodeType": "YulLiteral",
																				"src": "6068:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6057:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:18"
																		},
																		"nativeSrc": "6057:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6057:16:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6079:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6079:3:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6084:4:18",
																				"nodeType": "YulLiteral",
																				"src": "6084:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:18"
																		},
																		"nativeSrc": "6075:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6075:14:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6091:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6091:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6022:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "6022:34:18"
																},
																"nativeSrc": "6022:76:18",
																"nodeType": "YulFunctionCall",
																"src": "6022:76:18"
															},
															"nativeSrc": "6022:76:18",
															"nodeType": "YulExpressionStatement",
															"src": "6022:76:18"
														},
														{
															"nativeSrc": "6107:57:18",
															"nodeType": "YulAssignment",
															"src": "6107:57:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6122:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6122:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6135:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "6135:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6143:2:18",
																								"nodeType": "YulLiteral",
																								"src": "6143:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6131:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6131:3:18"
																						},
																						"nativeSrc": "6131:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6131:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6152:2:18",
																								"nodeType": "YulLiteral",
																								"src": "6152:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6148:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6148:3:18"
																						},
																						"nativeSrc": "6148:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6148:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6127:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6127:3:18"
																				},
																				"nativeSrc": "6127:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6127:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6118:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:18"
																		},
																		"nativeSrc": "6118:39:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6118:39:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6159:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6159:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6114:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:18"
																},
																"nativeSrc": "6114:50:18",
																"nodeType": "YulFunctionCall",
																"src": "6114:50:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6107:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6107:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5899:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5926:5:18",
														"nodeType": "YulTypedName",
														"src": "5926:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5933:3:18",
														"nodeType": "YulTypedName",
														"src": "5933:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5941:3:18",
														"nodeType": "YulTypedName",
														"src": "5941:3:18",
														"type": ""
													}
												],
												"src": "5899:271:18"
											},
											{
												"body": {
													"nativeSrc": "6394:1669:18",
													"nodeType": "YulBlock",
													"src": "6394:1669:18",
													"statements": [
														{
															"nativeSrc": "6404:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6404:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6422:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6422:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6433:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6418:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6418:3:18"
																},
																"nativeSrc": "6418:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6418:18:18"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6408:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6408:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6452:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6452:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6463:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6445:6:18"
																},
																"nativeSrc": "6445:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6445:21:18"
															},
															"nativeSrc": "6445:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6445:21:18"
														},
														{
															"nativeSrc": "6475:17:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6475:17:18",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6486:6:18",
																"nodeType": "YulIdentifier",
																"src": "6486:6:18"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6479:3:18",
																	"nodeType": "YulTypedName",
																	"src": "6479:3:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6501:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6501:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6521:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6521:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6515:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6515:5:18"
																},
																"nativeSrc": "6515:13:18",
																"nodeType": "YulFunctionCall",
																"src": "6515:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6505:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6505:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "6544:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6544:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6552:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6552:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6537:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6537:6:18"
																},
																"nativeSrc": "6537:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6537:22:18"
															},
															"nativeSrc": "6537:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6537:22:18"
														},
														{
															"nativeSrc": "6568:25:18",
															"nodeType": "YulAssignment",
															"src": "6568:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6579:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6579:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6590:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6590:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6575:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6575:3:18"
																},
																"nativeSrc": "6575:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6575:18:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6568:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6568:3:18"
																}
															]
														},
														{
															"nativeSrc": "6602:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6602:53:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6639:1:18",
																						"nodeType": "YulLiteral",
																						"src": "6639:1:18",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6642:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6642:6:18"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6635:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6635:3:18"
																				},
																				"nativeSrc": "6635:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6635:14:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:18"
																		},
																		"nativeSrc": "6620:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:30:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6652:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6616:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6616:3:18"
																},
																"nativeSrc": "6616:39:18",
																"nodeType": "YulFunctionCall",
																"src": "6616:39:18"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "6606:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6606:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6664:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6664:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6682:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6682:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6690:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6690:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6678:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:18"
																},
																"nativeSrc": "6678:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6678:15:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6668:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6668:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6702:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6702:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6711:1:18",
																"nodeType": "YulLiteral",
																"src": "6711:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6706:1:18",
																	"nodeType": "YulTypedName",
																	"src": "6706:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6770:1264:18",
																"nodeType": "YulBlock",
																"src": "6770:1264:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "6791:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6791:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "6804:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "6804:6:18"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "6812:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "6812:9:18"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "6800:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "6800:3:18"
																							},
																							"nativeSrc": "6800:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "6800:22:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6828:2:18",
																									"nodeType": "YulLiteral",
																									"src": "6828:2:18",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6824:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "6824:3:18"
																							},
																							"nativeSrc": "6824:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "6824:7:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6796:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "6796:3:18"
																					},
																					"nativeSrc": "6796:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6796:36:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6784:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6784:6:18"
																			},
																			"nativeSrc": "6784:49:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6784:49:18"
																		},
																		"nativeSrc": "6784:49:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6784:49:18"
																	},
																	{
																		"nativeSrc": "6846:23:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6846:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6862:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "6862:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6856:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6856:5:18"
																			},
																			"nativeSrc": "6856:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6856:13:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6850:2:18",
																				"nodeType": "YulTypedName",
																				"src": "6850:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6882:19:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6882:19:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "6898:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "6898:2:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6892:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6892:5:18"
																			},
																			"nativeSrc": "6892:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6892:9:18"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "6886:2:18",
																				"nodeType": "YulTypedName",
																				"src": "6886:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nativeSrc": "6921:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "6921:6:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "6935:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "6935:2:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6929:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "6929:5:18"
																					},
																					"nativeSrc": "6929:9:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6929:9:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6914:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6914:6:18"
																			},
																			"nativeSrc": "6914:25:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:25:18"
																		},
																		"nativeSrc": "6914:25:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6914:25:18"
																	},
																	{
																		"nativeSrc": "6952:38:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6952:38:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "6982:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "6982:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6986:2:18",
																							"nodeType": "YulLiteral",
																							"src": "6986:2:18",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6978:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "6978:3:18"
																					},
																					"nativeSrc": "6978:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6978:11:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6972:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6972:5:18"
																			},
																			"nativeSrc": "6972:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6972:18:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6956:12:18",
																				"nodeType": "YulTypedName",
																				"src": "6956:12:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nativeSrc": "7022:12:18",
																					"nodeType": "YulIdentifier",
																					"src": "7022:12:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7040:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7040:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7048:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7048:2:18",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7036:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7036:3:18"
																					},
																					"nativeSrc": "7036:15:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7036:15:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_address",
																				"nativeSrc": "7003:18:18",
																				"nodeType": "YulIdentifier",
																				"src": "7003:18:18"
																			},
																			"nativeSrc": "7003:49:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7003:49:18"
																		},
																		"nativeSrc": "7003:49:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7003:49:18"
																	},
																	{
																		"nativeSrc": "7065:40:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7065:40:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "7097:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7097:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7101:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7101:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7093:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7093:3:18"
																					},
																					"nativeSrc": "7093:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7093:11:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7087:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7087:5:18"
																			},
																			"nativeSrc": "7087:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7087:18:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_1",
																				"nativeSrc": "7069:14:18",
																				"nodeType": "YulTypedName",
																				"src": "7069:14:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0_1",
																					"nativeSrc": "7137:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "7137:14:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7157:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7157:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7165:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7165:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7153:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7153:3:18"
																					},
																					"nativeSrc": "7153:15:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7153:15:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_address",
																				"nativeSrc": "7118:18:18",
																				"nodeType": "YulIdentifier",
																				"src": "7118:18:18"
																			},
																			"nativeSrc": "7118:51:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7118:51:18"
																		},
																		"nativeSrc": "7118:51:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7118:51:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7193:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7193:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7201:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7201:4:18",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7189:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7189:3:18"
																					},
																					"nativeSrc": "7189:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7189:17:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "7218:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7218:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7222:4:18",
																									"nodeType": "YulLiteral",
																									"src": "7222:4:18",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7214:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7214:3:18"
																							},
																							"nativeSrc": "7214:13:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7214:13:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7208:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7208:5:18"
																					},
																					"nativeSrc": "7208:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7208:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7182:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7182:6:18"
																			},
																			"nativeSrc": "7182:47:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7182:47:18"
																		},
																		"nativeSrc": "7182:47:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7182:47:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7253:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7253:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7261:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7261:4:18",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7249:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7249:3:18"
																					},
																					"nativeSrc": "7249:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7249:17:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "7278:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7278:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7282:4:18",
																									"nodeType": "YulLiteral",
																									"src": "7282:4:18",
																									"type": "",
																									"value": "0x80"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7274:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7274:3:18"
																							},
																							"nativeSrc": "7274:13:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7274:13:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7268:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7268:5:18"
																					},
																					"nativeSrc": "7268:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7268:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7242:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7242:6:18"
																			},
																			"nativeSrc": "7242:47:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7242:47:18"
																		},
																		"nativeSrc": "7242:47:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7242:47:18"
																	},
																	{
																		"nativeSrc": "7302:42:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7302:42:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "7334:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7334:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7338:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7338:4:18",
																							"type": "",
																							"value": "0xa0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7330:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7330:3:18"
																					},
																					"nativeSrc": "7330:13:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7330:13:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7324:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7324:5:18"
																			},
																			"nativeSrc": "7324:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7324:20:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_2",
																				"nativeSrc": "7306:14:18",
																				"nodeType": "YulTypedName",
																				"src": "7306:14:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0_2",
																					"nativeSrc": "7373:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "7373:14:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7393:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7393:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7401:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7401:4:18",
																							"type": "",
																							"value": "0xa0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7389:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7389:3:18"
																					},
																					"nativeSrc": "7389:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7389:17:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_bool",
																				"nativeSrc": "7357:15:18",
																				"nodeType": "YulIdentifier",
																				"src": "7357:15:18"
																			},
																			"nativeSrc": "7357:50:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7357:50:18"
																		},
																		"nativeSrc": "7357:50:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7357:50:18"
																	},
																	{
																		"nativeSrc": "7420:42:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7420:42:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nativeSrc": "7452:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7452:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7456:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7456:4:18",
																							"type": "",
																							"value": "0xc0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7448:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7448:3:18"
																					},
																					"nativeSrc": "7448:13:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7448:13:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7442:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7442:5:18"
																			},
																			"nativeSrc": "7442:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7442:20:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_3",
																				"nativeSrc": "7424:14:18",
																				"nodeType": "YulTypedName",
																				"src": "7424:14:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0_3",
																					"nativeSrc": "7494:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "7494:14:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7514:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7514:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7522:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7522:4:18",
																							"type": "",
																							"value": "0xc0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7510:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7510:3:18"
																					},
																					"nativeSrc": "7510:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7510:17:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_address",
																				"nativeSrc": "7475:18:18",
																				"nodeType": "YulIdentifier",
																				"src": "7475:18:18"
																			},
																			"nativeSrc": "7475:53:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7475:53:18"
																		},
																		"nativeSrc": "7475:53:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:53:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7552:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7552:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7560:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7560:4:18",
																							"type": "",
																							"value": "0xe0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7548:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7548:3:18"
																					},
																					"nativeSrc": "7548:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7548:17:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "7577:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7577:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7581:4:18",
																									"nodeType": "YulLiteral",
																									"src": "7581:4:18",
																									"type": "",
																									"value": "0xe0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7573:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7573:3:18"
																							},
																							"nativeSrc": "7573:13:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7573:13:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7567:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7567:5:18"
																					},
																					"nativeSrc": "7567:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7567:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7541:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7541:6:18"
																			},
																			"nativeSrc": "7541:47:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7541:47:18"
																		},
																		"nativeSrc": "7541:47:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7541:47:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7612:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7612:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7620:6:18",
																							"nodeType": "YulLiteral",
																							"src": "7620:6:18",
																							"type": "",
																							"value": "0x0100"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7608:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7608:3:18"
																					},
																					"nativeSrc": "7608:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7608:19:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "7639:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7639:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7643:6:18",
																									"nodeType": "YulLiteral",
																									"src": "7643:6:18",
																									"type": "",
																									"value": "0x0100"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7635:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7635:3:18"
																							},
																							"nativeSrc": "7635:15:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7635:15:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7629:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7629:5:18"
																					},
																					"nativeSrc": "7629:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7629:22:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7601:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7601:6:18"
																			},
																			"nativeSrc": "7601:51:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7601:51:18"
																		},
																		"nativeSrc": "7601:51:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7601:51:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7676:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7676:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7684:6:18",
																							"nodeType": "YulLiteral",
																							"src": "7684:6:18",
																							"type": "",
																							"value": "0x0120"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7672:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7672:3:18"
																					},
																					"nativeSrc": "7672:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7672:19:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nativeSrc": "7703:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7703:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7707:6:18",
																									"nodeType": "YulLiteral",
																									"src": "7707:6:18",
																									"type": "",
																									"value": "0x0120"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7699:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7699:3:18"
																							},
																							"nativeSrc": "7699:15:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7699:15:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7693:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7693:5:18"
																					},
																					"nativeSrc": "7693:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7693:22:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7665:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7665:6:18"
																			},
																			"nativeSrc": "7665:51:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7665:51:18"
																		},
																		"nativeSrc": "7665:51:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7665:51:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7740:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7740:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7748:6:18",
																							"nodeType": "YulLiteral",
																							"src": "7748:6:18",
																							"type": "",
																							"value": "0x0140"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7736:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7736:3:18"
																					},
																					"nativeSrc": "7736:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7736:19:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "7767:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7767:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7771:2:18",
																									"nodeType": "YulLiteral",
																									"src": "7771:2:18",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7763:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7763:3:18"
																							},
																							"nativeSrc": "7763:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7763:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7757:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7757:5:18"
																					},
																					"nativeSrc": "7757:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7757:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7729:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7729:6:18"
																			},
																			"nativeSrc": "7729:47:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7729:47:18"
																		},
																		"nativeSrc": "7729:47:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7729:47:18"
																	},
																	{
																		"nativeSrc": "7789:40:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7789:40:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_1",
																							"nativeSrc": "7821:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7821:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7825:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7825:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7817:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7817:3:18"
																					},
																					"nativeSrc": "7817:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7817:11:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7811:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7811:5:18"
																			},
																			"nativeSrc": "7811:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7811:18:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_4",
																				"nativeSrc": "7793:14:18",
																				"nodeType": "YulTypedName",
																				"src": "7793:14:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7853:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7853:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7861:6:18",
																							"nodeType": "YulLiteral",
																							"src": "7861:6:18",
																							"type": "",
																							"value": "0x0160"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7849:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7849:3:18"
																					},
																					"nativeSrc": "7849:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7849:19:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7870:6:18",
																					"nodeType": "YulLiteral",
																					"src": "7870:6:18",
																					"type": "",
																					"value": "0x0180"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7842:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7842:6:18"
																			},
																			"nativeSrc": "7842:35:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7842:35:18"
																		},
																		"nativeSrc": "7842:35:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7842:35:18"
																	},
																	{
																		"nativeSrc": "7890:64:18",
																		"nodeType": "YulAssignment",
																		"src": "7890:64:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0_4",
																					"nativeSrc": "7918:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "7918:14:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7938:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7938:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7946:6:18",
																							"nodeType": "YulLiteral",
																							"src": "7946:6:18",
																							"type": "",
																							"value": "0x0180"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7934:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7934:3:18"
																					},
																					"nativeSrc": "7934:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7934:19:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string",
																				"nativeSrc": "7900:17:18",
																				"nodeType": "YulIdentifier",
																				"src": "7900:17:18"
																			},
																			"nativeSrc": "7900:54:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:54:18"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "7890:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7890:6:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7967:25:18",
																		"nodeType": "YulAssignment",
																		"src": "7967:25:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7981:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7981:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7989:2:18",
																					"nodeType": "YulLiteral",
																					"src": "7989:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7977:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7977:3:18"
																			},
																			"nativeSrc": "7977:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7967:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7967:6:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8005:19:18",
																		"nodeType": "YulAssignment",
																		"src": "8005:19:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8016:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8016:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8021:2:18",
																					"nodeType": "YulLiteral",
																					"src": "8021:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8012:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8012:3:18"
																			},
																			"nativeSrc": "8012:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8012:12:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8005:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8005:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6732:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "6732:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6735:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6735:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6729:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6729:2:18"
																},
																"nativeSrc": "6729:13:18",
																"nodeType": "YulFunctionCall",
																"src": "6729:13:18"
															},
															"nativeSrc": "6721:1313:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6743:18:18",
																"nodeType": "YulBlock",
																"src": "6743:18:18",
																"statements": [
																	{
																		"nativeSrc": "6745:14:18",
																		"nodeType": "YulAssignment",
																		"src": "6745:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6754:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "6754:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6757:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6757:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6750:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6750:3:18"
																			},
																			"nativeSrc": "6750:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6750:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6745:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "6745:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6725:3:18",
																"nodeType": "YulBlock",
																"src": "6725:3:18",
																"statements": []
															},
															"src": "6721:1313:18"
														},
														{
															"nativeSrc": "8043:14:18",
															"nodeType": "YulAssignment",
															"src": "8043:14:18",
															"value": {
																"name": "tail_2",
																"nativeSrc": "8051:6:18",
																"nodeType": "YulIdentifier",
																"src": "8051:6:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8043:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8043:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6175:1888:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6363:9:18",
														"nodeType": "YulTypedName",
														"src": "6363:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6374:6:18",
														"nodeType": "YulTypedName",
														"src": "6374:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6385:4:18",
														"nodeType": "YulTypedName",
														"src": "6385:4:18",
														"type": ""
													}
												],
												"src": "6175:1888:18"
											},
											{
												"body": {
													"nativeSrc": "8153:124:18",
													"nodeType": "YulBlock",
													"src": "8153:124:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8199:16:18",
																"nodeType": "YulBlock",
																"src": "8199:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8208:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8208:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8211:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8211:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8201:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8201:6:18"
																			},
																			"nativeSrc": "8201:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8201:12:18"
																		},
																		"nativeSrc": "8201:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8201:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8174:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8174:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8183:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8183:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8170:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:18"
																		},
																		"nativeSrc": "8170:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8170:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8166:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:18"
																},
																"nativeSrc": "8166:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8166:32:18"
															},
															"nativeSrc": "8163:52:18",
															"nodeType": "YulIf",
															"src": "8163:52:18"
														},
														{
															"nativeSrc": "8224:47:18",
															"nodeType": "YulAssignment",
															"src": "8224:47:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8261:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8261:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_memberShip",
																	"nativeSrc": "8234:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "8234:26:18"
																},
																"nativeSrc": "8234:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8234:37:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8224:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_memberShip_$3305",
												"nativeSrc": "8068:209:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8119:9:18",
														"nodeType": "YulTypedName",
														"src": "8119:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8130:7:18",
														"nodeType": "YulTypedName",
														"src": "8130:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8142:6:18",
														"nodeType": "YulTypedName",
														"src": "8142:6:18",
														"type": ""
													}
												],
												"src": "8068:209:18"
											},
											{
												"body": {
													"nativeSrc": "8411:145:18",
													"nodeType": "YulBlock",
													"src": "8411:145:18",
													"statements": [
														{
															"nativeSrc": "8421:26:18",
															"nodeType": "YulAssignment",
															"src": "8421:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8433:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8433:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8444:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8429:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8429:3:18"
																},
																"nativeSrc": "8429:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8429:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8421:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8421:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8463:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8463:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8478:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8478:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8494:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8494:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8499:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8499:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8490:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8490:3:18"
																						},
																						"nativeSrc": "8490:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8490:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8503:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8503:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8486:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8486:3:18"
																				},
																				"nativeSrc": "8486:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8486:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8474:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:18"
																		},
																		"nativeSrc": "8474:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8456:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8456:6:18"
																},
																"nativeSrc": "8456:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8456:51:18"
															},
															"nativeSrc": "8456:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8456:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8527:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8538:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8538:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8523:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:18"
																		},
																		"nativeSrc": "8523:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8523:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8543:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8543:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:18"
																},
																"nativeSrc": "8516:34:18",
																"nodeType": "YulFunctionCall",
																"src": "8516:34:18"
															},
															"nativeSrc": "8516:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "8516:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8282:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8372:9:18",
														"nodeType": "YulTypedName",
														"src": "8372:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8383:6:18",
														"nodeType": "YulTypedName",
														"src": "8383:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8391:6:18",
														"nodeType": "YulTypedName",
														"src": "8391:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8402:4:18",
														"nodeType": "YulTypedName",
														"src": "8402:4:18",
														"type": ""
													}
												],
												"src": "8282:274:18"
											},
											{
												"body": {
													"nativeSrc": "8642:103:18",
													"nodeType": "YulBlock",
													"src": "8642:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8688:16:18",
																"nodeType": "YulBlock",
																"src": "8688:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8697:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8697:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8700:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8700:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8690:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8690:6:18"
																			},
																			"nativeSrc": "8690:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8690:12:18"
																		},
																		"nativeSrc": "8690:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8690:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8663:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8663:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8672:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8672:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8659:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8659:3:18"
																		},
																		"nativeSrc": "8659:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8659:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8655:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:18"
																},
																"nativeSrc": "8655:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8655:32:18"
															},
															"nativeSrc": "8652:52:18",
															"nodeType": "YulIf",
															"src": "8652:52:18"
														},
														{
															"nativeSrc": "8713:26:18",
															"nodeType": "YulAssignment",
															"src": "8713:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8729:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8729:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8723:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8723:5:18"
																},
																"nativeSrc": "8723:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8723:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8713:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8713:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8561:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8608:9:18",
														"nodeType": "YulTypedName",
														"src": "8608:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8619:7:18",
														"nodeType": "YulTypedName",
														"src": "8619:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8631:6:18",
														"nodeType": "YulTypedName",
														"src": "8631:6:18",
														"type": ""
													}
												],
												"src": "8561:184:18"
											},
											{
												"body": {
													"nativeSrc": "8924:171:18",
													"nodeType": "YulBlock",
													"src": "8924:171:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8941:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8941:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8952:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8952:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8934:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8934:6:18"
																},
																"nativeSrc": "8934:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8934:21:18"
															},
															"nativeSrc": "8934:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8934:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8975:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8975:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8986:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8986:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8971:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8971:3:18"
																		},
																		"nativeSrc": "8971:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8971:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8991:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8991:2:18",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8964:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8964:6:18"
																},
																"nativeSrc": "8964:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8964:30:18"
															},
															"nativeSrc": "8964:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8964:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9014:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9014:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9025:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9025:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9010:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:18"
																		},
																		"nativeSrc": "9010:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9010:18:18"
																	},
																	{
																		"hexValue": "54686973204974656d206e6f74206c697374656420",
																		"kind": "string",
																		"nativeSrc": "9030:23:18",
																		"nodeType": "YulLiteral",
																		"src": "9030:23:18",
																		"type": "",
																		"value": "This Item not listed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9003:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9003:6:18"
																},
																"nativeSrc": "9003:51:18",
																"nodeType": "YulFunctionCall",
																"src": "9003:51:18"
															},
															"nativeSrc": "9003:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "9003:51:18"
														},
														{
															"nativeSrc": "9063:26:18",
															"nodeType": "YulAssignment",
															"src": "9063:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9075:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9075:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9086:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9086:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9071:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9071:3:18"
																},
																"nativeSrc": "9071:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9071:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9063:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9063:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8750:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8901:9:18",
														"nodeType": "YulTypedName",
														"src": "8901:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8915:4:18",
														"nodeType": "YulTypedName",
														"src": "8915:4:18",
														"type": ""
													}
												],
												"src": "8750:345:18"
											},
											{
												"body": {
													"nativeSrc": "9274:167:18",
													"nodeType": "YulBlock",
													"src": "9274:167:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9291:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9291:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9302:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9302:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9284:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9284:6:18"
																},
																"nativeSrc": "9284:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9284:21:18"
															},
															"nativeSrc": "9284:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9284:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9325:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9325:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9336:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9336:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9321:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9321:3:18"
																		},
																		"nativeSrc": "9321:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9321:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9341:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9341:2:18",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9314:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:18"
																},
																"nativeSrc": "9314:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9314:30:18"
															},
															"nativeSrc": "9314:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9314:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9364:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9364:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9375:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9375:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9360:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:18"
																		},
																		"nativeSrc": "9360:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9360:18:18"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74204f776e6572",
																		"kind": "string",
																		"nativeSrc": "9380:19:18",
																		"nodeType": "YulLiteral",
																		"src": "9380:19:18",
																		"type": "",
																		"value": "You are not Owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9353:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:18"
																},
																"nativeSrc": "9353:47:18",
																"nodeType": "YulFunctionCall",
																"src": "9353:47:18"
															},
															"nativeSrc": "9353:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "9353:47:18"
														},
														{
															"nativeSrc": "9409:26:18",
															"nodeType": "YulAssignment",
															"src": "9409:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9421:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9421:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9432:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9432:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9417:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:18"
																},
																"nativeSrc": "9417:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9417:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9409:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9409:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a92904ff54443fb52d8ac13713ea139ff614ee79b65883763b05d732a0ae5363__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9100:341:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9251:9:18",
														"nodeType": "YulTypedName",
														"src": "9251:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9265:4:18",
														"nodeType": "YulTypedName",
														"src": "9265:4:18",
														"type": ""
													}
												],
												"src": "9100:341:18"
											},
											{
												"body": {
													"nativeSrc": "9478:95:18",
													"nodeType": "YulBlock",
													"src": "9478:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9495:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9495:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9502:3:18",
																				"nodeType": "YulLiteral",
																				"src": "9502:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9507:10:18",
																				"nodeType": "YulLiteral",
																				"src": "9507:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9498:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:18"
																		},
																		"nativeSrc": "9498:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9488:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:18"
																},
																"nativeSrc": "9488:31:18",
																"nodeType": "YulFunctionCall",
																"src": "9488:31:18"
															},
															"nativeSrc": "9488:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "9488:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9535:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9535:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9538:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9538:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9528:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:18"
																},
																"nativeSrc": "9528:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9528:15:18"
															},
															"nativeSrc": "9528:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9528:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9559:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9559:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9562:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9552:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:18"
																},
																"nativeSrc": "9552:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9552:15:18"
															},
															"nativeSrc": "9552:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9552:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "9446:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9446:127:18"
											},
											{
												"body": {
													"nativeSrc": "9610:95:18",
													"nodeType": "YulBlock",
													"src": "9610:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9627:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9634:3:18",
																				"nodeType": "YulLiteral",
																				"src": "9634:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9639:10:18",
																				"nodeType": "YulLiteral",
																				"src": "9639:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9630:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:18"
																		},
																		"nativeSrc": "9630:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9630:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9620:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:18"
																},
																"nativeSrc": "9620:31:18",
																"nodeType": "YulFunctionCall",
																"src": "9620:31:18"
															},
															"nativeSrc": "9620:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "9620:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9667:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9667:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9670:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9670:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9660:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:18"
																},
																"nativeSrc": "9660:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9660:15:18"
															},
															"nativeSrc": "9660:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9660:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9691:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9691:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9694:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9694:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9684:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:18"
																},
																"nativeSrc": "9684:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9684:15:18"
															},
															"nativeSrc": "9684:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9684:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9578:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9578:127:18"
											},
											{
												"body": {
													"nativeSrc": "9762:116:18",
													"nodeType": "YulBlock",
													"src": "9762:116:18",
													"statements": [
														{
															"nativeSrc": "9772:20:18",
															"nodeType": "YulAssignment",
															"src": "9772:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9787:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9787:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9790:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9790:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9783:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9783:3:18"
																},
																"nativeSrc": "9783:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9783:9:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9772:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "9772:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9850:22:18",
																"nodeType": "YulBlock",
																"src": "9850:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9852:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9852:16:18"
																			},
																			"nativeSrc": "9852:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9852:18:18"
																		},
																		"nativeSrc": "9852:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9852:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9821:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "9821:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9814:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "9814:6:18"
																				},
																				"nativeSrc": "9814:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9814:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9828:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "9828:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9835:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "9835:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9844:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "9844:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9831:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9831:3:18"
																						},
																						"nativeSrc": "9831:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9831:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9825:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "9825:2:18"
																				},
																				"nativeSrc": "9825:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9825:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9811:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:18"
																		},
																		"nativeSrc": "9811:37:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9811:37:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9804:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9804:6:18"
																},
																"nativeSrc": "9804:45:18",
																"nodeType": "YulFunctionCall",
																"src": "9804:45:18"
															},
															"nativeSrc": "9801:71:18",
															"nodeType": "YulIf",
															"src": "9801:71:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9710:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9741:1:18",
														"nodeType": "YulTypedName",
														"src": "9741:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9744:1:18",
														"nodeType": "YulTypedName",
														"src": "9744:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9750:7:18",
														"nodeType": "YulTypedName",
														"src": "9750:7:18",
														"type": ""
													}
												],
												"src": "9710:168:18"
											},
											{
												"body": {
													"nativeSrc": "9929:171:18",
													"nodeType": "YulBlock",
													"src": "9929:171:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9960:111:18",
																"nodeType": "YulBlock",
																"src": "9960:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9981:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9981:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9988:3:18",
																							"nodeType": "YulLiteral",
																							"src": "9988:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9993:10:18",
																							"nodeType": "YulLiteral",
																							"src": "9993:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9984:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9984:3:18"
																					},
																					"nativeSrc": "9984:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9984:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9974:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9974:6:18"
																			},
																			"nativeSrc": "9974:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9974:31:18"
																		},
																		"nativeSrc": "9974:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9974:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10025:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10025:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10028:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10028:4:18",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10018:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10018:6:18"
																			},
																			"nativeSrc": "10018:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10018:15:18"
																		},
																		"nativeSrc": "10018:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10018:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10053:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10053:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10056:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10056:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10046:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10046:6:18"
																			},
																			"nativeSrc": "10046:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10046:15:18"
																		},
																		"nativeSrc": "10046:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10046:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9949:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9949:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9942:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9942:6:18"
																},
																"nativeSrc": "9942:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9942:9:18"
															},
															"nativeSrc": "9939:132:18",
															"nodeType": "YulIf",
															"src": "9939:132:18"
														},
														{
															"nativeSrc": "10080:14:18",
															"nodeType": "YulAssignment",
															"src": "10080:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10089:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10089:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10092:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10092:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10085:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:18"
																},
																"nativeSrc": "10085:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10085:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10080:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "10080:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9883:217:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9914:1:18",
														"nodeType": "YulTypedName",
														"src": "9914:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9917:1:18",
														"nodeType": "YulTypedName",
														"src": "9917:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9923:1:18",
														"nodeType": "YulTypedName",
														"src": "9923:1:18",
														"type": ""
													}
												],
												"src": "9883:217:18"
											},
											{
												"body": {
													"nativeSrc": "10279:164:18",
													"nodeType": "YulBlock",
													"src": "10279:164:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10296:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10296:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10307:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10307:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10289:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10289:6:18"
																},
																"nativeSrc": "10289:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10289:21:18"
															},
															"nativeSrc": "10289:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10289:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10330:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10330:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10341:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10341:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10326:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10326:3:18"
																		},
																		"nativeSrc": "10326:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10326:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10346:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10346:2:18",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10319:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10319:6:18"
																},
																"nativeSrc": "10319:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10319:30:18"
															},
															"nativeSrc": "10319:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10319:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10369:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10380:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10380:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10365:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:18"
																		},
																		"nativeSrc": "10365:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:18:18"
																	},
																	{
																		"hexValue": "4e6f74207468652053656c6c6572",
																		"kind": "string",
																		"nativeSrc": "10385:16:18",
																		"nodeType": "YulLiteral",
																		"src": "10385:16:18",
																		"type": "",
																		"value": "Not the Seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10358:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10358:6:18"
																},
																"nativeSrc": "10358:44:18",
																"nodeType": "YulFunctionCall",
																"src": "10358:44:18"
															},
															"nativeSrc": "10358:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "10358:44:18"
														},
														{
															"nativeSrc": "10411:26:18",
															"nodeType": "YulAssignment",
															"src": "10411:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10423:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10423:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10434:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10434:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10419:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10419:3:18"
																},
																"nativeSrc": "10419:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10419:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10411:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10411:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbb4ae68fd82aad3273b6e6f859ee08040821d0ef6a6b11ab6713d6ae053aeb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10105:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10256:9:18",
														"nodeType": "YulTypedName",
														"src": "10256:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10270:4:18",
														"nodeType": "YulTypedName",
														"src": "10270:4:18",
														"type": ""
													}
												],
												"src": "10105:338:18"
											},
											{
												"body": {
													"nativeSrc": "10496:77:18",
													"nodeType": "YulBlock",
													"src": "10496:77:18",
													"statements": [
														{
															"nativeSrc": "10506:16:18",
															"nodeType": "YulAssignment",
															"src": "10506:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10517:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10517:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10520:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10520:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10513:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10513:3:18"
																},
																"nativeSrc": "10513:9:18",
																"nodeType": "YulFunctionCall",
																"src": "10513:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10545:22:18",
																"nodeType": "YulBlock",
																"src": "10545:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10547:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "10547:16:18"
																			},
																			"nativeSrc": "10547:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10547:18:18"
																		},
																		"nativeSrc": "10547:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10547:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10537:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10537:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10540:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10540:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10534:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10534:2:18"
																},
																"nativeSrc": "10534:10:18",
																"nodeType": "YulFunctionCall",
																"src": "10534:10:18"
															},
															"nativeSrc": "10531:36:18",
															"nodeType": "YulIf",
															"src": "10531:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10448:125:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10479:1:18",
														"nodeType": "YulTypedName",
														"src": "10479:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10482:1:18",
														"nodeType": "YulTypedName",
														"src": "10482:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10488:3:18",
														"nodeType": "YulTypedName",
														"src": "10488:3:18",
														"type": ""
													}
												],
												"src": "10448:125:18"
											},
											{
												"body": {
													"nativeSrc": "10752:166:18",
													"nodeType": "YulBlock",
													"src": "10752:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10769:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10769:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10780:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10780:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10762:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10762:6:18"
																},
																"nativeSrc": "10762:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10762:21:18"
															},
															"nativeSrc": "10762:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10762:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10803:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10803:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10814:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10814:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10799:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10799:3:18"
																		},
																		"nativeSrc": "10799:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10799:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10819:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10819:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10792:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:18"
																},
																"nativeSrc": "10792:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10792:30:18"
															},
															"nativeSrc": "10792:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10792:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10842:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10853:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10853:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10838:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:18"
																		},
																		"nativeSrc": "10838:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10838:18:18"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207072696365",
																		"kind": "string",
																		"nativeSrc": "10858:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10858:18:18",
																		"type": "",
																		"value": "Not enough price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10831:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:18"
																},
																"nativeSrc": "10831:46:18",
																"nodeType": "YulFunctionCall",
																"src": "10831:46:18"
															},
															"nativeSrc": "10831:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "10831:46:18"
														},
														{
															"nativeSrc": "10886:26:18",
															"nodeType": "YulAssignment",
															"src": "10886:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10898:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10898:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10909:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10909:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10894:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10894:3:18"
																},
																"nativeSrc": "10894:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10894:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10886:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10886:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4bc50a72ea0d4ce02c3dc44dccae2f0a8d893bf130dff93bc3a242cb2f0b1fa0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10578:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10729:9:18",
														"nodeType": "YulTypedName",
														"src": "10729:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10743:4:18",
														"nodeType": "YulTypedName",
														"src": "10743:4:18",
														"type": ""
													}
												],
												"src": "10578:340:18"
											},
											{
												"body": {
													"nativeSrc": "11080:214:18",
													"nodeType": "YulBlock",
													"src": "11080:214:18",
													"statements": [
														{
															"nativeSrc": "11090:26:18",
															"nodeType": "YulAssignment",
															"src": "11090:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11102:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11102:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11113:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11113:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11098:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11098:3:18"
																},
																"nativeSrc": "11098:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11098:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11090:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11090:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11132:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11132:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11147:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11147:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11163:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11163:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11168:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11168:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11159:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11159:3:18"
																						},
																						"nativeSrc": "11159:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11159:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11172:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11172:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11155:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11155:3:18"
																				},
																				"nativeSrc": "11155:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11155:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11143:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11143:3:18"
																		},
																		"nativeSrc": "11143:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11143:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11125:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11125:6:18"
																},
																"nativeSrc": "11125:51:18",
																"nodeType": "YulFunctionCall",
																"src": "11125:51:18"
															},
															"nativeSrc": "11125:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "11125:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11196:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11192:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:18"
																		},
																		"nativeSrc": "11192:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11216:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11216:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11232:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11232:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11237:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11237:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11228:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11228:3:18"
																						},
																						"nativeSrc": "11228:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11228:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11241:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11241:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11224:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11224:3:18"
																				},
																				"nativeSrc": "11224:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11224:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11212:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:18"
																		},
																		"nativeSrc": "11212:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11212:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11185:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11185:6:18"
																},
																"nativeSrc": "11185:60:18",
																"nodeType": "YulFunctionCall",
																"src": "11185:60:18"
															},
															"nativeSrc": "11185:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "11185:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11265:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11265:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11276:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11276:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11261:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11261:3:18"
																		},
																		"nativeSrc": "11261:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11261:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11281:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11281:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11254:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11254:6:18"
																},
																"nativeSrc": "11254:34:18",
																"nodeType": "YulFunctionCall",
																"src": "11254:34:18"
															},
															"nativeSrc": "11254:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "11254:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10923:371:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11033:9:18",
														"nodeType": "YulTypedName",
														"src": "11033:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11044:6:18",
														"nodeType": "YulTypedName",
														"src": "11044:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11052:6:18",
														"nodeType": "YulTypedName",
														"src": "11052:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11060:6:18",
														"nodeType": "YulTypedName",
														"src": "11060:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11071:4:18",
														"nodeType": "YulTypedName",
														"src": "11071:4:18",
														"type": ""
													}
												],
												"src": "10923:371:18"
											},
											{
												"body": {
													"nativeSrc": "11348:79:18",
													"nodeType": "YulBlock",
													"src": "11348:79:18",
													"statements": [
														{
															"nativeSrc": "11358:17:18",
															"nodeType": "YulAssignment",
															"src": "11358:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11370:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "11370:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11373:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "11373:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11366:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11366:3:18"
																},
																"nativeSrc": "11366:9:18",
																"nodeType": "YulFunctionCall",
																"src": "11366:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11358:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11358:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11399:22:18",
																"nodeType": "YulBlock",
																"src": "11399:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11401:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11401:16:18"
																			},
																			"nativeSrc": "11401:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11401:18:18"
																		},
																		"nativeSrc": "11401:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11401:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11390:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11390:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11396:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "11396:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11387:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11387:2:18"
																},
																"nativeSrc": "11387:11:18",
																"nodeType": "YulFunctionCall",
																"src": "11387:11:18"
															},
															"nativeSrc": "11384:37:18",
															"nodeType": "YulIf",
															"src": "11384:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11299:128:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11330:1:18",
														"nodeType": "YulTypedName",
														"src": "11330:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11333:1:18",
														"nodeType": "YulTypedName",
														"src": "11333:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11339:4:18",
														"nodeType": "YulTypedName",
														"src": "11339:4:18",
														"type": ""
													}
												],
												"src": "11299:128:18"
											},
											{
												"body": {
													"nativeSrc": "11479:88:18",
													"nodeType": "YulBlock",
													"src": "11479:88:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11510:22:18",
																"nodeType": "YulBlock",
																"src": "11510:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11512:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11512:16:18"
																			},
																			"nativeSrc": "11512:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11512:18:18"
																		},
																		"nativeSrc": "11512:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11512:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11495:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11495:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11506:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11506:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11502:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11502:3:18"
																		},
																		"nativeSrc": "11502:6:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11502:6:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11492:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11492:2:18"
																},
																"nativeSrc": "11492:17:18",
																"nodeType": "YulFunctionCall",
																"src": "11492:17:18"
															},
															"nativeSrc": "11489:43:18",
															"nodeType": "YulIf",
															"src": "11489:43:18"
														},
														{
															"nativeSrc": "11541:20:18",
															"nodeType": "YulAssignment",
															"src": "11541:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11552:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11552:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11559:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11559:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11548:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11548:3:18"
																},
																"nativeSrc": "11548:13:18",
																"nodeType": "YulFunctionCall",
																"src": "11548:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11541:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11541:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11432:135:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11461:5:18",
														"nodeType": "YulTypedName",
														"src": "11461:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11471:3:18",
														"nodeType": "YulTypedName",
														"src": "11471:3:18",
														"type": ""
													}
												],
												"src": "11432:135:18"
											},
											{
												"body": {
													"nativeSrc": "11785:302:18",
													"nodeType": "YulBlock",
													"src": "11785:302:18",
													"statements": [
														{
															"nativeSrc": "11795:27:18",
															"nodeType": "YulAssignment",
															"src": "11795:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11807:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11807:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11818:3:18",
																		"nodeType": "YulLiteral",
																		"src": "11818:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11803:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11803:3:18"
																},
																"nativeSrc": "11803:19:18",
																"nodeType": "YulFunctionCall",
																"src": "11803:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11795:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11795:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11838:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11838:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11849:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11849:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11831:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11831:6:18"
																},
																"nativeSrc": "11831:25:18",
																"nodeType": "YulFunctionCall",
																"src": "11831:25:18"
															},
															"nativeSrc": "11831:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "11831:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11876:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11876:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11887:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11887:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11872:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11872:3:18"
																		},
																		"nativeSrc": "11872:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11872:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11896:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11896:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11912:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11912:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11917:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11917:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11908:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11908:3:18"
																						},
																						"nativeSrc": "11908:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11908:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11921:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11921:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11904:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11904:3:18"
																				},
																				"nativeSrc": "11904:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11904:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11892:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11892:3:18"
																		},
																		"nativeSrc": "11892:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11892:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11865:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11865:6:18"
																},
																"nativeSrc": "11865:60:18",
																"nodeType": "YulFunctionCall",
																"src": "11865:60:18"
															},
															"nativeSrc": "11865:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "11865:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11945:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11945:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11956:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11956:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11941:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:18"
																		},
																		"nativeSrc": "11941:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11941:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11965:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11965:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11981:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11981:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11986:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11986:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11977:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11977:3:18"
																						},
																						"nativeSrc": "11977:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11977:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11990:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11990:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11973:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11973:3:18"
																				},
																				"nativeSrc": "11973:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11973:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11961:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:18"
																		},
																		"nativeSrc": "11961:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11961:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11934:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:18"
																},
																"nativeSrc": "11934:60:18",
																"nodeType": "YulFunctionCall",
																"src": "11934:60:18"
															},
															"nativeSrc": "11934:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "11934:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12014:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12014:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12025:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12025:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12010:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12010:3:18"
																		},
																		"nativeSrc": "12010:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12010:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "12030:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12030:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12003:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12003:6:18"
																},
																"nativeSrc": "12003:34:18",
																"nodeType": "YulFunctionCall",
																"src": "12003:34:18"
															},
															"nativeSrc": "12003:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "12003:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12057:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12057:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12068:3:18",
																				"nodeType": "YulLiteral",
																				"src": "12068:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12053:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12053:3:18"
																		},
																		"nativeSrc": "12053:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12053:19:18"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "12074:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12074:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12046:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12046:6:18"
																},
																"nativeSrc": "12046:35:18",
																"nodeType": "YulFunctionCall",
																"src": "12046:35:18"
															},
															"nativeSrc": "12046:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "12046:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11572:515:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11722:9:18",
														"nodeType": "YulTypedName",
														"src": "11722:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11733:6:18",
														"nodeType": "YulTypedName",
														"src": "11733:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11741:6:18",
														"nodeType": "YulTypedName",
														"src": "11741:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11749:6:18",
														"nodeType": "YulTypedName",
														"src": "11749:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11757:6:18",
														"nodeType": "YulTypedName",
														"src": "11757:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11765:6:18",
														"nodeType": "YulTypedName",
														"src": "11765:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11776:4:18",
														"nodeType": "YulTypedName",
														"src": "11776:4:18",
														"type": ""
													}
												],
												"src": "11572:515:18"
											},
											{
												"body": {
													"nativeSrc": "12241:142:18",
													"nodeType": "YulBlock",
													"src": "12241:142:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12258:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12258:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12269:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12269:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12251:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12251:6:18"
																},
																"nativeSrc": "12251:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12251:21:18"
															},
															"nativeSrc": "12251:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12251:21:18"
														},
														{
															"nativeSrc": "12281:53:18",
															"nodeType": "YulAssignment",
															"src": "12281:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12307:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12319:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12319:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12330:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12330:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12315:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12315:3:18"
																		},
																		"nativeSrc": "12315:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12315:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12289:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "12289:17:18"
																},
																"nativeSrc": "12289:45:18",
																"nodeType": "YulFunctionCall",
																"src": "12289:45:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12281:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12281:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12354:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12354:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12365:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12365:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12350:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12350:3:18"
																		},
																		"nativeSrc": "12350:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12350:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12370:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12370:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12343:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12343:6:18"
																},
																"nativeSrc": "12343:34:18",
																"nodeType": "YulFunctionCall",
																"src": "12343:34:18"
															},
															"nativeSrc": "12343:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "12343:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "12092:291:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12202:9:18",
														"nodeType": "YulTypedName",
														"src": "12202:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12213:6:18",
														"nodeType": "YulTypedName",
														"src": "12213:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12221:6:18",
														"nodeType": "YulTypedName",
														"src": "12221:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12232:4:18",
														"nodeType": "YulTypedName",
														"src": "12232:4:18",
														"type": ""
													}
												],
												"src": "12092:291:18"
											},
											{
												"body": {
													"nativeSrc": "12479:578:18",
													"nodeType": "YulBlock",
													"src": "12479:578:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12525:16:18",
																"nodeType": "YulBlock",
																"src": "12525:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12534:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12534:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12537:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12537:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12527:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12527:6:18"
																			},
																			"nativeSrc": "12527:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12527:12:18"
																		},
																		"nativeSrc": "12527:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12527:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12500:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12500:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12509:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12509:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12496:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:18"
																		},
																		"nativeSrc": "12496:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12496:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12492:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12492:3:18"
																},
																"nativeSrc": "12492:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12492:32:18"
															},
															"nativeSrc": "12489:52:18",
															"nodeType": "YulIf",
															"src": "12489:52:18"
														},
														{
															"nativeSrc": "12550:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12550:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12570:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12570:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12564:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12564:5:18"
																},
																"nativeSrc": "12564:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12564:16:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "12554:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12554:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12623:16:18",
																"nodeType": "YulBlock",
																"src": "12623:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12632:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12632:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12635:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12635:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12625:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12625:6:18"
																			},
																			"nativeSrc": "12625:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12625:12:18"
																		},
																		"nativeSrc": "12625:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12625:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12595:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12595:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12603:18:18",
																		"nodeType": "YulLiteral",
																		"src": "12603:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12592:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12592:2:18"
																},
																"nativeSrc": "12592:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12592:30:18"
															},
															"nativeSrc": "12589:50:18",
															"nodeType": "YulIf",
															"src": "12589:50:18"
														},
														{
															"nativeSrc": "12648:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12648:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12662:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12662:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "12673:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12673:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12658:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:18"
																},
																"nativeSrc": "12658:22:18",
																"nodeType": "YulFunctionCall",
																"src": "12658:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12652:2:18",
																	"nodeType": "YulTypedName",
																	"src": "12652:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12728:16:18",
																"nodeType": "YulBlock",
																"src": "12728:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12737:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12737:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12740:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12740:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12730:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12730:6:18"
																			},
																			"nativeSrc": "12730:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12730:12:18"
																		},
																		"nativeSrc": "12730:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12730:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "12707:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "12707:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12711:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12711:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12703:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12703:3:18"
																				},
																				"nativeSrc": "12703:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12703:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12718:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12718:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12699:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12699:3:18"
																		},
																		"nativeSrc": "12699:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12699:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12692:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12692:6:18"
																},
																"nativeSrc": "12692:35:18",
																"nodeType": "YulFunctionCall",
																"src": "12692:35:18"
															},
															"nativeSrc": "12689:55:18",
															"nodeType": "YulIf",
															"src": "12689:55:18"
														},
														{
															"nativeSrc": "12753:23:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12753:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12773:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "12773:2:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12767:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12767:5:18"
																},
																"nativeSrc": "12767:9:18",
																"nodeType": "YulFunctionCall",
																"src": "12767:9:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12757:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12757:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12785:66:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12785:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12843:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12843:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_string",
																			"nativeSrc": "12814:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "12814:28:18"
																		},
																		"nativeSrc": "12814:36:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12814:36:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12798:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "12798:15:18"
																},
																"nativeSrc": "12798:53:18",
																"nodeType": "YulFunctionCall",
																"src": "12798:53:18"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "12789:5:18",
																	"nodeType": "YulTypedName",
																	"src": "12789:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12867:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12867:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12874:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12874:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12860:6:18"
																},
																"nativeSrc": "12860:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12860:21:18"
															},
															"nativeSrc": "12860:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12860:21:18"
														},
														{
															"body": {
																"nativeSrc": "12931:16:18",
																"nodeType": "YulBlock",
																"src": "12931:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12940:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12940:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12943:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12943:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12933:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12933:6:18"
																			},
																			"nativeSrc": "12933:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12933:12:18"
																		},
																		"nativeSrc": "12933:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12933:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "12904:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "12904:2:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "12908:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12908:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12900:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12900:3:18"
																				},
																				"nativeSrc": "12900:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12900:15:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12917:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12917:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12896:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12896:3:18"
																		},
																		"nativeSrc": "12896:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12896:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "12922:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "12922:7:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12893:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12893:2:18"
																},
																"nativeSrc": "12893:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12893:37:18"
															},
															"nativeSrc": "12890:57:18",
															"nodeType": "YulIf",
															"src": "12890:57:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "12995:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "12995:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12999:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12999:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12991:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12991:3:18"
																		},
																		"nativeSrc": "12991:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12991:11:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "13008:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "13008:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13015:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13015:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13004:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13004:3:18"
																		},
																		"nativeSrc": "13004:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13004:14:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13020:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13020:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12956:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "12956:34:18"
																},
																"nativeSrc": "12956:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12956:71:18"
															},
															"nativeSrc": "12956:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12956:71:18"
														},
														{
															"nativeSrc": "13036:15:18",
															"nodeType": "YulAssignment",
															"src": "13036:15:18",
															"value": {
																"name": "array",
																"nativeSrc": "13046:5:18",
																"nodeType": "YulIdentifier",
																"src": "13046:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13036:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "12388:669:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12445:9:18",
														"nodeType": "YulTypedName",
														"src": "12445:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12456:7:18",
														"nodeType": "YulTypedName",
														"src": "12456:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12468:6:18",
														"nodeType": "YulTypedName",
														"src": "12468:6:18",
														"type": ""
													}
												],
												"src": "12388:669:18"
											},
											{
												"body": {
													"nativeSrc": "13094:95:18",
													"nodeType": "YulBlock",
													"src": "13094:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13111:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13111:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13118:3:18",
																				"nodeType": "YulLiteral",
																				"src": "13118:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13123:10:18",
																				"nodeType": "YulLiteral",
																				"src": "13123:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13114:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:18"
																		},
																		"nativeSrc": "13114:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13114:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13104:6:18"
																},
																"nativeSrc": "13104:31:18",
																"nodeType": "YulFunctionCall",
																"src": "13104:31:18"
															},
															"nativeSrc": "13104:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "13104:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13151:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13151:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13154:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13154:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13144:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13144:6:18"
																},
																"nativeSrc": "13144:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13144:15:18"
															},
															"nativeSrc": "13144:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13144:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13175:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13175:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13178:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13178:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13168:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13168:6:18"
																},
																"nativeSrc": "13168:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13168:15:18"
															},
															"nativeSrc": "13168:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13168:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13062:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "13062:127:18"
											},
											{
												"body": {
													"nativeSrc": "13379:258:18",
													"nodeType": "YulBlock",
													"src": "13379:258:18",
													"statements": [
														{
															"nativeSrc": "13389:27:18",
															"nodeType": "YulAssignment",
															"src": "13389:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13401:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13401:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13412:3:18",
																		"nodeType": "YulLiteral",
																		"src": "13412:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13397:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13397:3:18"
																},
																"nativeSrc": "13397:19:18",
																"nodeType": "YulFunctionCall",
																"src": "13397:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13389:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13389:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13432:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13432:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13443:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13443:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13425:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13425:6:18"
																},
																"nativeSrc": "13425:25:18",
																"nodeType": "YulFunctionCall",
																"src": "13425:25:18"
															},
															"nativeSrc": "13425:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "13425:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13470:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13470:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13481:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13481:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13466:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13466:3:18"
																		},
																		"nativeSrc": "13466:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13466:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13490:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13490:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13506:3:18",
																								"nodeType": "YulLiteral",
																								"src": "13506:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13511:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13511:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13502:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13502:3:18"
																						},
																						"nativeSrc": "13502:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13502:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13515:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13515:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13498:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13498:3:18"
																				},
																				"nativeSrc": "13498:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13498:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13486:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13486:3:18"
																		},
																		"nativeSrc": "13486:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13486:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13459:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13459:6:18"
																},
																"nativeSrc": "13459:60:18",
																"nodeType": "YulFunctionCall",
																"src": "13459:60:18"
															},
															"nativeSrc": "13459:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "13459:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13539:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13539:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13550:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13550:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13535:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13535:3:18"
																		},
																		"nativeSrc": "13535:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13535:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "13559:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13559:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13575:3:18",
																								"nodeType": "YulLiteral",
																								"src": "13575:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13580:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13580:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13571:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13571:3:18"
																						},
																						"nativeSrc": "13571:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13571:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13584:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13584:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13567:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13567:3:18"
																				},
																				"nativeSrc": "13567:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13567:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13555:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:18"
																		},
																		"nativeSrc": "13555:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13555:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13528:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13528:6:18"
																},
																"nativeSrc": "13528:60:18",
																"nodeType": "YulFunctionCall",
																"src": "13528:60:18"
															},
															"nativeSrc": "13528:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "13528:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13608:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13608:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13619:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13619:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13604:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13604:3:18"
																		},
																		"nativeSrc": "13604:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13604:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13624:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13624:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13597:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:18"
																},
																"nativeSrc": "13597:34:18",
																"nodeType": "YulFunctionCall",
																"src": "13597:34:18"
															},
															"nativeSrc": "13597:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "13597:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13194:443:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13324:9:18",
														"nodeType": "YulTypedName",
														"src": "13324:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13335:6:18",
														"nodeType": "YulTypedName",
														"src": "13335:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13343:6:18",
														"nodeType": "YulTypedName",
														"src": "13343:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13351:6:18",
														"nodeType": "YulTypedName",
														"src": "13351:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13359:6:18",
														"nodeType": "YulTypedName",
														"src": "13359:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13370:4:18",
														"nodeType": "YulTypedName",
														"src": "13370:4:18",
														"type": ""
													}
												],
												"src": "13194:443:18"
											},
											{
												"body": {
													"nativeSrc": "13816:177:18",
													"nodeType": "YulBlock",
													"src": "13816:177:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13833:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13833:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13844:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13844:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13826:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13826:6:18"
																},
																"nativeSrc": "13826:21:18",
																"nodeType": "YulFunctionCall",
																"src": "13826:21:18"
															},
															"nativeSrc": "13826:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "13826:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13867:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13867:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13878:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13878:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13863:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13863:3:18"
																		},
																		"nativeSrc": "13863:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13863:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13883:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13883:2:18",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13856:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13856:6:18"
																},
																"nativeSrc": "13856:30:18",
																"nodeType": "YulFunctionCall",
																"src": "13856:30:18"
															},
															"nativeSrc": "13856:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "13856:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13906:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13906:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13917:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13917:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13902:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13902:3:18"
																		},
																		"nativeSrc": "13902:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13902:18:18"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "13922:29:18",
																		"nodeType": "YulLiteral",
																		"src": "13922:29:18",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13895:6:18"
																},
																"nativeSrc": "13895:57:18",
																"nodeType": "YulFunctionCall",
																"src": "13895:57:18"
															},
															"nativeSrc": "13895:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "13895:57:18"
														},
														{
															"nativeSrc": "13961:26:18",
															"nodeType": "YulAssignment",
															"src": "13961:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13973:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13973:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13984:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13969:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13969:3:18"
																},
																"nativeSrc": "13969:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13969:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13961:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13961:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13642:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13793:9:18",
														"nodeType": "YulTypedName",
														"src": "13793:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13807:4:18",
														"nodeType": "YulTypedName",
														"src": "13807:4:18",
														"type": ""
													}
												],
												"src": "13642:351:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool_t_bool_t_bool_t_bool__to_t_bool_t_bool_t_bool_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_enum_memberShip(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_enum$_memberShip_$3305(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_enum_memberShip(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_string(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_string(length))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), length)\n        mstore(add(add(array, length), 32), 0)\n        value2 := array\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), and(value6, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _1 := mload(srcPtr)\n            let _2 := mload(_1)\n            mstore(tail_2, mload(_2))\n            let memberValue0 := mload(add(_2, 32))\n            abi_encode_address(memberValue0, add(tail_2, 32))\n            let memberValue0_1 := mload(add(_2, 64))\n            abi_encode_address(memberValue0_1, add(tail_2, 64))\n            mstore(add(tail_2, 0x60), mload(add(_2, 0x60)))\n            mstore(add(tail_2, 0x80), mload(add(_2, 0x80)))\n            let memberValue0_2 := mload(add(_2, 0xa0))\n            abi_encode_bool(memberValue0_2, add(tail_2, 0xa0))\n            let memberValue0_3 := mload(add(_2, 0xc0))\n            abi_encode_address(memberValue0_3, add(tail_2, 0xc0))\n            mstore(add(tail_2, 0xe0), mload(add(_2, 0xe0)))\n            mstore(add(tail_2, 0x0100), mload(add(_2, 0x0100)))\n            mstore(add(tail_2, 0x0120), mload(add(_2, 0x0120)))\n            mstore(add(tail_2, 0x0140), mload(add(_1, 32)))\n            let memberValue0_4 := mload(add(_1, 64))\n            mstore(add(tail_2, 0x0160), 0x0180)\n            tail_2 := abi_encode_string(memberValue0_4, add(tail_2, 0x0180))\n            srcPtr := add(srcPtr, 32)\n            pos := add(pos, 32)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_enum$_memberShip_$3305(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_memberShip(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"This Item not listed \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a92904ff54443fb52d8ac13713ea139ff614ee79b65883763b05d732a0ae5363__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"You are not Owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_cbb4ae68fd82aad3273b6e6f859ee08040821d0ef6a6b11ab6713d6ae053aeb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not the Seller\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_4bc50a72ea0d4ce02c3dc44dccae2f0a8d893bf130dff93bc3a242cb2f0b1fa0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        let array := allocate_memory(array_allocation_size_string(length))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(array, 32), length)\n        value0 := array\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80637c7ce62d1161008a5780639f5e6fd9116100595780639f5e6fd91461038e578063b50c0d20146103ae578063bc4bc9c8146103db578063f2fde38b1461043a57600080fd5b80637c7ce62d1461023e5780638da5cb5b1461025e57806393f311091461028657806395ce4a3b1461036c57600080fd5b80636081a0dd116100c65780636081a0dd146101c057806362590604146101e2578063715018a6146101f5578063752cd6541461020a57600080fd5b806303147f39146100ed5780631065cf731461013c5780633529280b14610185575b600080fd5b3480156100f957600080fd5b5061010d61010836600461188f565b61045a565b604080519415158552921515602085015290151591830191909152151560608201526080015b60405180910390f35b34801561014857600080fd5b506101706101573660046118b1565b6010602052600090815260409020805460019091015482565b60408051928352602083019190915201610133565b34801561019157600080fd5b506101b26101a03660046118b1565b60116020526000908152604090205481565b604051908152602001610133565b3480156101cc57600080fd5b506101e06101db3660046118ca565b610703565b005b6101e06101f03660046118fb565b610839565b34801561020157600080fd5b506101e0610f3e565b34801561021657600080fd5b506101706102253660046118b1565b600f602052600090815260409020805460019091015482565b34801561024a57600080fd5b506101e0610259366004611996565b610f52565b34801561026a57600080fd5b506000546040516001600160a01b039091168152602001610133565b34801561029257600080fd5b5061030b6102a1366004611a4b565b600d60209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0396871697958716969495939460ff84169461010090940416928a565b604080519a8b526001600160a01b03998a1660208c0152978916978a01979097526060890195909552608088019390935290151560a087015290931660c085015260e084019290925261010083019190915261012082015261014001610133565b34801561037857600080fd5b50610381611273565b6040516101339190611ac5565b34801561039a57600080fd5b506101e06103a93660046118b1565b6114f2565b3480156103ba57600080fd5b506101b26103c9366004611bed565b600c6020526000908152604090205481565b3480156103e757600080fd5b5061041b6103f63660046118b1565b600e60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610133565b34801561044657600080fd5b506101e061045536600461188f565b611761565b6008546040516370a0823160e01b81526001600160a01b03838116600483015260009283928392839283929116906370a0823190602401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190611c08565b6009546040516370a0823160e01b81526001600160a01b038981166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190611c08565b600a546040516370a0823160e01b81526001600160a01b038a81166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba9190611c08565b600b546040516370a0823160e01b81526001600160a01b038b81166004830152929350600092909116906370a0823190602401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190611c08565b90506000841180156106405750600083115b801561064c5750600082115b80156106585750600081115b15610674576001806001809750975097509750505050506106fc565b6000831180156106845750600082115b80156106905750600081115b156106ad57600060018060019750975097509750505050506106fc565b6000821180156106bd5750600081115b156106d9576000806001809750975097509750505050506106fc565b80156106f757600080600060019750975097509750505050506106fc565b505050505b9193509193565b6000828152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff166107855760405162461bcd60e51b815260206004820152601560248201527402a3434b99024ba32b6903737ba103634b9ba32b21605d1b60448201526064015b60405180910390fd5b6000828152600e6020908152604080832080546001600160a01b039081168552600d845282852060019283015486529093529220909101541633146108005760405162461bcd60e51b81526020600482015260116024820152702cb7ba9030b932903737ba1027bbb732b960791b604482015260640161077c565b6000918252600e6020908152604080842080546001600160a01b03168552600d8352818520600190910154855290915290912060030155565b6000828152600e6020526040812080546001909101546001600160a01b03909116916064600c8286600381111561087257610872611c21565b600381111561088357610883611c21565b815260208082019290925260409081016000908120546001600160a01b0388168252600d845282822087835290935220600301546108c19190611c4d565b6108cb9190611c6a565b6001600160a01b038481166000908152600d60209081526040808320878452909152902060010154919250339116036109375760405162461bcd60e51b815260206004820152600e60248201526d2737ba103a34329029b2b63632b960911b604482015260640161077c565b6001600160a01b0383166000908152600d60209081526040808320858452909152902060030154610969908290611c8c565b3410156109ab5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820707269636560801b604482015260640161077c565b6040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156109f957600080fd5b505af1158015610a0d573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600d602090815260408083208584529091528120600401549003610a96576001600160a01b038381166000908152600d60209081526040808320868452909152902060018101546005820180549190931661010002610100600160a81b03199091161790915560556006820155600f6008909101555b6001600160a01b0383166000908152600d6020908152604080832085845290915290206004015415610afc576001600160a01b0383166000908152600d602090815260408083208584529091529020600560068201819055605f60078301556008909101555b6006546000868152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915281206003015490916103e891610b459190611c4d565b610b4f9190611c6a565b6005546000888152600e6020908152604080832080546001600160a01b03168452600d83528184206001909101548452909152812060030154929350916103e891610b9991611c4d565b610ba39190611c6a565b6000888152600e6020908152604080832080546001600160a01b039081168552600d808552838620600190930154865291845282852060060154908b16855290835281842089855290925282206003015492935091606490610c06908490611c4d565b610c109190611c6a565b9050600083610c1f8684611c8c565b610c299190611c8c565b6001600160a01b0389166000908152600d602090815260408083208b8452909152902060030154610c5a9190611c9f565b60008b8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600192830154865290935281842001549051939450169183156108fc0291849190818181858888f19350505050158015610cbf573d6000803e3d6000fd5b5060008a8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600190920154855292528083206005015490516101009091049091169184156108fc02918591818181858888f19350505050158015610d2a573d6000803e3d6000fd5b50600080546040516001600160a01b039091169187156108fc02918891818181858888f19350505050158015610d64573d6000803e3d6000fd5b50600080546040516001600160a01b039091169188156108fc02918991818181858888f19350505050158015610d9e573d6000803e3d6000fd5b506001600160a01b0388166000908152600d602090815260408083208a8452909152812060058101805460ff19169055600401805491610ddd83611cb2565b9190505550600e6000610def60015490565b8152602080820192909252604090810160009081208d8252600e90935220815481546001600160a01b0319166001600160a01b0390911617815560019182015490820155610e3c9061179f565b60008a8152600e6020908152604080832080546001600160a01b039081168552600d8452828520600190920154855290835292819020600581015460069091015482516101009092049094168152918201929092527f7bd3aa7d673767f759ebf216e7f6c12844986c661ae6e0f1d988cf7eb7394d1d910160405180910390a16001600160a01b038881166000908152600d602090815260408083208b84528252918290208054600190910154835191825290931690830152338282015260608201839052426080830152517f5fafad85dec201c2e73b6a2bef6351129304a624ea8720ecd04cd7f04d83bc399181900360a00190a150505050505050505050565b610f466117f6565b610f506000611823565b565b610f60600180546001019055565b604051806101400160405280858152602001336001600160a01b03168152602001306001600160a01b03168152602001838152602001600d6000886001600160a01b03166001600160a01b031681526020019081526020016000206000878152602001908152602001600020600401548152602001600115158152602001826001600160a01b0316815260200160045481526020016005548152602001600654815250600d6000876001600160a01b03166001600160a01b0316815260200190815260200160002060008681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160060155610100820151816007015561012082015181600801559050506040518060400160405280866001600160a01b0316815260200185815250600e600061114c60015490565b81526020808201929092526040908101600020835181546001600160a01b0319166001600160a01b039182161782559390920151600190920191909155516323b872dd60e01b815233600482015230602482015260448101869052908616906323b872dd90606401600060405180830381600087803b1580156111ce57600080fd5b505af11580156111e2573d6000803e3d6000fd5b5050604080518082018252858152426020808301918252600380546000908152600f9092529381209251835590516001909201919091558154935090915061122983611cb2565b909155505060015433907f1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a88585604051611264929190611ccb565b60405180910390a35050505050565b606060008061128160015490565b67ffffffffffffffff81111561129957611299611927565b60405190808252806020026020018201604052801561133457816020015b604080516101a081018252600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401839052610120840183905261014084018390526101608401839052610180840183905283526020830191909152918101919091528152602001906001900390816112b75790505b50905060015b60015481116114eb576000818152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff16156114d957604080516000838152600e602081815284832080546001600160a01b03908116808652600d84528786206001938401548088529085528887206101a089018a52805460608a0190815294810154841660808a01526002810154841660a08a0152600381015460c08a015260048082015460e08b0152600582015460ff81161515610100808d019190915290049094166101208a015260068101546101408a015260078101546101608a01526008015461018089015292875283870189905294889052929091528451638ad9134560e01b8152918201529192830191638ad9134590602401600060405180830381865afa158015611482573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114aa9190810190611ced565b8152508284815181106114bf576114bf611d64565b602002602001018190525082806114d590611cb2565b9350505b806114e381611cb2565b91505061133a565b5092915050565b6000818152600e6020908152604080832080546001600160a01b03168452600d8352818420600190910154845290915290206005015460ff1661156f5760405162461bcd60e51b815260206004820152601560248201527402a3434b99024ba32b6903737ba103634b9ba32b21605d1b604482015260640161077c565b6000818152600e6020818152604080842080546001600160a01b039081168652600d808552838720600180850180548a5291875285892080820154600290910180546001600160a01b03191691861691909117905593548316808952918652848820905480895290865284882090930154968890529490935290516323b872dd60e01b81523060048201529390911660248401526044830152906323b872dd90606401600060405180830381600087803b15801561162c57600080fd5b505af1158015611640573d6000803e3d6000fd5b5050506000828152600e6020818152604080842080546001600160a01b039081168652600d808552838720600180850180548a52918752858920600501805460ff191690558454841689529186528488208154895286528488206004018a9055815488529590945291852094879052845481546001600160a01b03191692169190911790559182015490556116d5915061179f565b6000818152600e6020908152604080832080546001600160a01b039081168552600d845282852060019283015486528452938290208054918101546003909101548351928352941692810192909252339082015260608101919091527ffb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e024436039060800160405180910390a150565b6117696117f6565b6001600160a01b03811661179357604051631e4fbdf760e01b81526000600482015260240161077c565b61179c81611823565b50565b8054806117ee5760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161077c565b600019019055565b6000546001600160a01b03163314610f505760405163118cdaa760e01b815233600482015260240161077c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461188a57600080fd5b919050565b6000602082840312156118a157600080fd5b6118aa82611873565b9392505050565b6000602082840312156118c357600080fd5b5035919050565b600080604083850312156118dd57600080fd5b50508035926020909101359150565b80356004811061188a57600080fd5b6000806040838503121561190e57600080fd5b8235915061191e602084016118ec565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561196657611966611927565b604052919050565b600067ffffffffffffffff82111561198857611988611927565b50601f01601f191660200190565b600080600080600060a086880312156119ae57600080fd5b6119b786611873565b945060208601359350604086013567ffffffffffffffff8111156119da57600080fd5b8601601f810188136119eb57600080fd5b80356119fe6119f98261196e565b61193d565b818152896020838501011115611a1357600080fd5b8160208401602083013760009181016020019190915293505060608601359150611a3f60808701611873565b90509295509295909350565b60008060408385031215611a5e57600080fd5b611a6783611873565b946020939093013593505050565b60005b83811015611a90578181015183820152602001611a78565b50506000910152565b60008151808452611ab1816020860160208601611a75565b601f01601f19169290920160200192915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611be157603f1987860301845281518051805187526020810151611b2060208901826001600160a01b03169052565b506040810151611b3b60408901826001600160a01b03169052565b50606081015160608801526080810151608088015260a0810151611b6360a089018215159052565b5060c0810151611b7e60c08901826001600160a01b03169052565b5060e081015160e088015261010081015161010088015261012081015161012088015250602081015161014087015260408101519050610180610160870152611bcb610180870182611a99565b9550506020938401939190910190600101611aed565b50929695505050505050565b600060208284031215611bff57600080fd5b6118aa826118ec565b600060208284031215611c1a57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417611c6457611c64611c37565b92915050565b600082611c8757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115611c6457611c64611c37565b81810381811115611c6457611c64611c37565b600060018201611cc457611cc4611c37565b5060010190565b604081526000611cde6040830185611a99565b90508260208301529392505050565b600060208284031215611cff57600080fd5b815167ffffffffffffffff811115611d1657600080fd5b8201601f81018413611d2757600080fd5b8051611d356119f98261196e565b818152856020838501011115611d4a57600080fd5b611d5b826020830160208601611a75565b95945050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b7cf876d243431b87f2a79a95367c296828e10477aca05fa16d71c50943a67c764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C7CE62D GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x9F5E6FD9 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F5E6FD9 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xB50C0D20 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xBC4BC9C8 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C7CE62D EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x93F31109 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95CE4A3B EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6081A0DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x6081A0DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x62590604 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x752CD654 EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3147F39 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x1065CF73 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x3529280B EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FB JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0xF3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP8 SWAP6 DUP8 AND SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0xFF DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 DUP11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x20 DUP13 ADD MSTORE SWAP8 DUP10 AND SWAP8 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x60 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x14F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x133 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E0 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x596 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1C08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x640 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x658 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x674 JUMPI PUSH1 0x1 DUP1 PUSH1 0x1 DUP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x684 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x690 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x6BD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x6FC JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2A3434B99024BA32B6903737BA103634B9BA32B21 PUSH1 0x5D SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD AND CALLER EQ PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BA9030B932903737BA1027BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0x64 PUSH1 0xC DUP3 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x872 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x883 PUSH2 0x1C21 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP8 DUP4 MSTORE SWAP1 SWAP4 MSTORE KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP3 POP CALLER SWAP2 AND SUB PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103A34329029B2B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x969 SWAP1 DUP3 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F756768207072696365 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SUB PUSH2 0xA96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x55 PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xF PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD ISZERO PUSH2 0xAFC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 PUSH1 0x6 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x5F PUSH1 0x7 DUP4 ADD SSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0xB99 SWAP2 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 DUP12 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP10 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x64 SWAP1 PUSH2 0xC06 SWAP1 DUP5 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xC10 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xC1F DUP7 DUP5 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP4 SWAP5 POP AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 MLOAD PUSH2 0x100 SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP8 ISZERO PUSH2 0x8FC MUL SWAP2 DUP9 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 ISZERO PUSH2 0x8FC MUL SWAP2 DUP10 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 ADD DUP1 SLOAD SWAP2 PUSH2 0xDDD DUP4 PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xE PUSH1 0x0 PUSH2 0xDEF PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP14 DUP3 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH2 0xE3C SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD DUP3 MLOAD PUSH2 0x100 SWAP1 SWAP3 DIV SWAP1 SWAP5 AND DUP2 MSTORE SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x7BD3AA7D673767F759EBF216E7F6C12844986C661AE6E0F1D988CF7EB7394D1D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP1 SWAP4 AND SWAP1 DUP4 ADD MSTORE CALLER DUP3 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP4 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH32 0x5FAFAD85DEC201C2E73B6A2BEF6351129304A624EA8720ECD04CD7F04D83BC39 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF46 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xF50 PUSH1 0x0 PUSH2 0x1823 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF60 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 SLOAD DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE POP PUSH1 0xE PUSH1 0x0 PUSH2 0x114C PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP3 MSTORE SWAP4 DUP2 KECCAK256 SWAP3 MLOAD DUP4 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP4 POP SWAP1 SWAP2 POP PUSH2 0x1229 DUP4 PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD CALLER SWAP1 PUSH32 0x1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1264 SWAP3 SWAP2 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1281 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1334 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1A0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x120 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x140 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x160 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x180 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12B7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 JUMPDEST PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x14EB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0xD DUP5 MSTORE DUP8 DUP7 KECCAK256 PUSH1 0x1 SWAP4 DUP5 ADD SLOAD DUP1 DUP9 MSTORE SWAP1 DUP6 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x1A0 DUP10 ADD DUP11 MSTORE DUP1 SLOAD PUSH1 0x60 DUP11 ADD SWAP1 DUP2 MSTORE SWAP5 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0x4 DUP1 DUP3 ADD SLOAD PUSH1 0xE0 DUP12 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x100 DUP1 DUP14 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DIV SWAP1 SWAP5 AND PUSH2 0x120 DUP11 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x140 DUP11 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x160 DUP11 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x180 DUP10 ADD MSTORE SWAP3 DUP8 MSTORE DUP4 DUP8 ADD DUP10 SWAP1 MSTORE SWAP5 DUP9 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP5 MLOAD PUSH4 0x8AD91345 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 PUSH4 0x8AD91345 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14AA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CED JUMP JUMPDEST DUP2 MSTORE POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14BF JUMPI PUSH2 0x14BF PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x14D5 SWAP1 PUSH2 0x1CB2 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0x14E3 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x133A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2A3434B99024BA32B6903737BA103634B9BA32B21 PUSH1 0x5D SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD DUP11 MSTORE SWAP2 DUP8 MSTORE DUP6 DUP10 KECCAK256 DUP1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 SLOAD DUP4 AND DUP1 DUP10 MSTORE SWAP2 DUP7 MSTORE DUP5 DUP9 KECCAK256 SWAP1 SLOAD DUP1 DUP10 MSTORE SWAP1 DUP7 MSTORE DUP5 DUP9 KECCAK256 SWAP1 SWAP4 ADD SLOAD SWAP7 DUP9 SWAP1 MSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE PUSH1 0xD DUP1 DUP6 MSTORE DUP4 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD DUP11 MSTORE SWAP2 DUP8 MSTORE DUP6 DUP10 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP5 SLOAD DUP5 AND DUP10 MSTORE SWAP2 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP2 SLOAD DUP10 MSTORE DUP7 MSTORE DUP5 DUP9 KECCAK256 PUSH1 0x4 ADD DUP11 SWAP1 SSTORE DUP2 SLOAD DUP9 MSTORE SWAP6 SWAP1 SWAP5 MSTORE SWAP2 DUP6 KECCAK256 SWAP5 DUP8 SWAP1 MSTORE DUP5 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 DUP3 ADD SLOAD SWAP1 SSTORE PUSH2 0x16D5 SWAP2 POP PUSH2 0x179F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xD DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x1 SWAP3 DUP4 ADD SLOAD DUP7 MSTORE DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD SWAP3 DUP4 MSTORE SWAP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1769 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1793 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x179C DUP2 PUSH2 0x1823 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x17EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18AA DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x191E PUSH1 0x20 DUP5 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1966 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1988 PUSH2 0x1927 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B7 DUP7 PUSH2 0x1873 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19FE PUSH2 0x19F9 DUP3 PUSH2 0x196E JUMP JUMPDEST PUSH2 0x193D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP10 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1A13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A3F PUSH1 0x80 DUP8 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A67 DUP4 PUSH2 0x1873 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A78 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1AB1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A75 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP1 MLOAD DUP8 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1B20 PUSH1 0x20 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1B3B PUSH1 0x40 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x1B63 PUSH1 0xA0 DUP10 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1B7E PUSH1 0xC0 DUP10 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP9 ADD MSTORE POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 POP PUSH2 0x180 PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x1BCB PUSH2 0x180 DUP8 ADD DUP3 PUSH2 0x1A99 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AED JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18AA DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C64 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CC4 JUMPI PUSH2 0x1CC4 PUSH2 0x1C37 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CDE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1D27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1D35 PUSH2 0x19F9 DUP3 PUSH2 0x196E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5B DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A75 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xCF DUP8 PUSH14 0x243431B87F2A79A95367C296828E LT SELFBALANCE PUSH27 0xCA05FA16D71C50943A67C764736F6C634300081A00330000000000 ",
							"sourceMap": "1155:9332:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7502:923;;;;;;;;;;-1:-1:-1;7502:923:17;;;;;:::i;:::-;;:::i;:::-;;;;711:14:18;;704:22;686:41;;770:14;;763:22;758:2;743:18;;736:50;829:14;;822:22;802:18;;;795:50;;;;888:14;881:22;876:2;861:18;;854:50;673:3;658:19;7502:923:17;;;;;;;;3127:49;;;;;;;;;;-1:-1:-1;3127:49:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1320:25:18;;;1376:2;1361:18;;1354:34;;;;1293:18;3127:49:17;1146:248:18;3182:34:17;;;;;;;;;;-1:-1:-1;3182:34:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1545:25:18;;;1533:2;1518:18;3182:34:17;1399:177:18;8432:394:17;;;;;;;;;;-1:-1:-1;8432:394:17;;;;;:::i;:::-;;:::i;:::-;;4600:2896;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;3079:41:17:-;;;;;;;;;;-1:-1:-1;3079:41:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3910:683;;;;;;;;;;-1:-1:-1;3910:683:17;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4361:51:18;;4349:2;4334:18;1638:85:0;4215:203:18;2944:81:17;;;;;;;;;;-1:-1:-1;2944:81:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2944:81:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;5121:25:18;;;-1:-1:-1;;;;;5182:32:18;;;5177:2;5162:18;;5155:60;5251:32;;;5231:18;;;5224:60;;;;5315:2;5300:18;;5293:34;;;;5358:3;5343:19;;5336:35;;;;5415:14;;5408:22;5202:3;5387:19;;5380:51;5468:32;;;5462:3;5447:19;;5440:61;5532:3;5517:19;;5510:35;;;;5576:3;5561:19;;5554:35;;;;5620:3;5605:19;;5598:35;5108:3;5093:19;2944:81:17;4728:911:18;9900:584:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8832:1062::-;;;;;;;;;;-1:-1:-1;8832:1062:17;;;;;:::i;:::-;;:::i;2550:49::-;;;;;;;;;;-1:-1:-1;2550:49:17;;;;;:::i;:::-;;;;;;;;;;;;;;3031:42;;;;;;;;;;-1:-1:-1;3031:42:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3031:42:17;;;;;;;;;;-1:-1:-1;;;;;8474:32:18;;;8456:51;;8538:2;8523:18;;8516:34;;;;8429:18;3031:42:17;8282:274:18;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;7502:923:17:-;7705:7;;7694:40;;-1:-1:-1;;;7694:40:17;;-1:-1:-1;;;;;4379:32:18;;;7694:40:17;;;4361:51:18;7573:17:17;;;;;;;;;;7705:7;;;7694:29;;4334:18:18;;7694:40:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7773:11;;7762:44;;-1:-1:-1;;;7762:44:17;;-1:-1:-1;;;;;4379:32:18;;;7762:44:17;;;4361:51:18;7676:58:17;;-1:-1:-1;7744:15:17;;7773:11;;;;7762:33;;4334:18:18;;7762:44:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7847:9;;7836:42;;-1:-1:-1;;;7836:42:17;;-1:-1:-1;;;;;4379:32:18;;;7836:42:17;;;4361:51:18;7744:62:17;;-1:-1:-1;7816:17:17;;7847:9;;;;7836:31;;4334:18:18;;7836:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7918:10;;7907:43;;-1:-1:-1;;;7907:43:17;;-1:-1:-1;;;;;4379:32:18;;;7907:43:17;;;4361:51:18;7816:62:17;;-1:-1:-1;7888:16:17;;7918:10;;;;7907:32;;4334:18:18;;7907:43:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7888:62;;7986:1;7973:10;:14;:32;;;;;8004:1;7991:10;:14;7973:32;:52;;;;;8024:1;8009:12;:16;7973:52;:71;;;;;8043:1;8029:11;:15;7973:71;7969:450;;;8069:4;8075;8081;8087;8060:32;;;;;;;;;;;;;;7969:450;8126:1;8113:10;:14;:34;;;;;8146:1;8131:12;:16;8113:34;:53;;;;;8165:1;8151:11;:15;8113:53;8109:310;;;8191:5;8198:4;8204;8210;8182:33;;;;;;;;;;;;;;8109:310;8251:1;8236:12;:16;:35;;;;;8270:1;8256:11;:15;8236:35;8232:187;;;8296:5;8303;8310:4;8316;8287:34;;;;;;;;;;;;;;8232:187;8342:15;;8338:81;;8382:5;8389;8396;8403:4;8373:35;;;;;;;;;;;;;;8338:81;7656:769;;;;7502:923;;;;;;:::o;8432:394::-;8504:40;8511:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;8511:32:17;8504:40;;:6;:40;;;;;8511:32;8545:24;;;;8504:66;;;;;;;:73;;;;;8496:106;;;;-1:-1:-1;;;8496:106:17;;8952:2:18;8496:106:17;;;8934:21:18;8991:2;8971:18;;;8964:30;-1:-1:-1;;;9010:18:18;;;9003:51;9071:18;;8496:106:17;;;;;;;;;8620:40;8627:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;8627:32:17;;;8620:40;;:6;:40;;;;;8627:32;8661:24;;;;8620:67;;;;;;;:74;;;;;8698:10;8620:88;8612:117;;;;-1:-1:-1;;;8612:117:17;;9302:2:18;8612:117:17;;;9284:21:18;9341:2;9321:18;;;9314:30;-1:-1:-1;;;9360:18:18;;;9353:47;9417:18;;8612:117:17;9100:341:18;8612:117:17;8739:40;8746:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;8746:32:17;8739:40;;:6;:40;;;;;8746:32;8780:24;;;;8739:66;;;;;;;;:72;;:80;8432:394::o;4600:2896::-;4674:23;4700:16;;;:5;:16;;;;;:32;;;4757:24;;;;-1:-1:-1;;;;;4700:32:17;;;;4880:3;4855:13;4674:23;4869:6;4855:21;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;4855:21:17;;;;-1:-1:-1;;;;;4814:23:17;;;;:6;:23;;;;;:32;;;;;;;:38;;;:62;;4855:21;4814:62;:::i;:::-;4813:70;;;;:::i;:::-;-1:-1:-1;;;;;4902:23:17;;;;;;;:6;:23;;;;;;;;:32;;;;;;;;:39;;;4791:92;;-1:-1:-1;4945:10:17;4902:39;;:53;4894:80;;;;-1:-1:-1;;;4894:80:17;;10307:2:18;4894:80:17;;;10289:21:18;10346:2;10326:18;;;10319:30;-1:-1:-1;;;10365:18:18;;;10358:44;10419:18;;4894:80:17;10105:338:18;4894:80:17;-1:-1:-1;;;;;5007:23:17;;;;;;:6;:23;;;;;;;;:32;;;;;;;;:38;;;:56;;5048:15;;5007:56;:::i;:::-;4992:9;:72;;4984:101;;;;-1:-1:-1;;;4984:101:17;;10780:2:18;4984:101:17;;;10762:21:18;10819:2;10799:18;;;10792:30;-1:-1:-1;;;10838:18:18;;;10831:46;10894:18;;4984:101:17;10578:340:18;4984:101:17;5095:70;;-1:-1:-1;;;5095:70:17;;5140:4;5095:70;;;11125:51:18;5146:10:17;11192:18:18;;;11185:60;11261:18;;;11254:34;;;-1:-1:-1;;;;;5095:36:17;;;;;11098:18:18;;5095:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;5414:23:17;;;;;;:6;:23;;;;;;;;:32;;;;;;;;:38;;;:43;;5411:302;;-1:-1:-1;;;;;5517:23:17;;;;;;;:6;:23;;;;;;;;:32;;;;;;;;:39;;;;5476;;;:80;;5517:39;;;;;5476:80;-1:-1:-1;;;;;;5476:80:17;;;;;;;5625:2;5574:48;;;:53;5694:2;5645:47;;;;:51;5411:302;-1:-1:-1;;;;;5729:23:17;;5770:1;5729:23;;;:6;:23;;;;;;;;:32;;;;;;;;:38;;;:42;5726:269;;-1:-1:-1;;;;;5791:23:17;;;;;;:6;:23;;;;;;;;:32;;;;;;;;5842:1;5791:48;;;:52;;;5910:2;5861:48;;;:51;5930:47;;;;:50;5726:269;6109:14;;6013:16;6041;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;6041:32:17;6034:40;;:6;:40;;;;;6041:32;6075:24;;;;6034:66;;;;;;;:72;;;6013:16;;6127:4;;6034:89;;6109:14;6034:89;:::i;:::-;6033:98;;;;:::i;:::-;6237:15;;6141:17;6169:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;6169:32:17;6162:40;;:6;:40;;;;;6169:32;6203:24;;;;6162:66;;;;;;;:72;;;6013:118;;-1:-1:-1;6141:17:17;6256:4;;6162:90;;;:::i;:::-;6161:99;;;;:::i;:::-;6270:17;6297:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;6297:32:17;;;6290:40;;:6;:40;;;;;;6297:32;6331:24;;;;6290:66;;;;;;;;:82;;;6400:23;;;;;;;;;;;:32;;;;;;;;:38;;;6141:119;;-1:-1:-1;6290:82:17;6457:3;;6400:53;;6290:82;;6400:53;:::i;:::-;6399:61;;;;:::i;:::-;6382:78;-1:-1:-1;6470:17:17;6558:12;6532:23;6544:11;6382:78;6532:23;:::i;:::-;:38;;;;:::i;:::-;-1:-1:-1;;;;;6490:23:17;;;;;;:6;:23;;;;;;;;:32;;;;;;;;:38;;;:81;;;;:::i;:::-;6590:40;6597:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;6597:32:17;;;6590:40;;:6;:40;;;;;6597:32;6631:24;;;;6590:66;;;;;;;;:73;;6582:105;;6470:101;;-1:-1:-1;6590:73:17;;6582:105;;;;;6470:101;;6582:105;;6590:40;6582:105;6470:101;6590:73;6582:105;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6706:40:17;6713:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;6713:32:17;;;6706:40;;:6;:40;;;;;6713:32;6747:24;;;;6706:66;;;;;;;:73;;;6697:103;;6713:32;6706:73;;;;;;;6697:103;;;;;6790:9;;6697:103;6706:40;6697:103;6790:9;6706:73;6697:103;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;;6810:38:17;;-1:-1:-1;;;;;1710:6:0;;;;6810:38:17;;;;;6836:11;;6810:38;1684:7:0;6810:38:17;6836:11;1710:6:0;6810:38:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;;6858:42:17;;-1:-1:-1;;;;;1710:6:0;;;;6858:42:17;;;;;6884:15;;6858:42;1684:7:0;6858:42:17;6884:15;1710:6:0;6858:42:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6910:23:17;;6952:5;6910:23;;;:6;:23;;;;;;;;:32;;;;;;;;:39;;;:47;;-1:-1:-1;;6910:47:17;;;7024:38;;:40;;;;;;:::i;:::-;;;;;;7093:5;:25;7099:18;:8;918:14:11;;827:112;7099:18:17;7093:25;;;;;;;;;;;;;;-1:-1:-1;7093:25:17;;;7075:16;;;:5;:16;;;;:43;;;;-1:-1:-1;;;;;;7075:43:17;-1:-1:-1;;;;;7075:43:17;;;;;;;;;;;;;;;7128:20;;:18;:20::i;:::-;7167:40;7174:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;7174:32:17;;;7167:40;;:6;:40;;;;;7174:32;7208:24;;;;7167:66;;;;;;;;;:73;;;;7241:82;;;;;7163:161;;7174:32;7167:73;;;;;;8456:51:18;;8523:18;;;8516:34;;;;7163:161:17;;8429:18:18;7163:161:17;;;;;;;-1:-1:-1;;;;;7347:23:17;;;;;;;:6;:23;;;;;;;;:32;;;;;;;;;:40;;7398:39;;;;;7339:150;;11831:25:18;;;7398:39:17;;;11872:18:18;;;11865:60;7447:10:17;11941:18:18;;;11934:60;12025:2;12010:18;;12003:34;;;7473:15:17;12068:3:18;12053:19;;12046:35;7339:150:17;;;;;;11818:3:18;7339:150:17;;;4663:2833;;;;;;;;4600:2896;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3910:683:17:-;4034:20;:8;1032:19:11;;1050:1;1032:19;;;945:123;4034:20:17;4124:150;;;;;;;;4133:8;4124:150;;;;4142:10;-1:-1:-1;;;;;4124:150:17;;;;;4161:4;-1:-1:-1;;;;;4124:150:17;;;;;4168:5;4124:150;;;;4174:6;:20;4181:12;-1:-1:-1;;;;;4174:20:17;-1:-1:-1;;;;;4174:20:17;;;;;;;;;;;;:30;4195:8;4174:30;;;;;;;;;;;:36;;;4124:150;;;;4212:4;4124:150;;;;;;4219:6;-1:-1:-1;;;;;4124:150:17;;;;;4227:15;;4124:150;;;;4243:15;;4124:150;;;;4259:14;;4124:150;;;4092:6;:20;4099:12;-1:-1:-1;;;;;4092:20:17;-1:-1:-1;;;;;4092:20:17;;;;;;;;;;;;:30;4113:8;4092:30;;;;;;;;;;;:182;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4092:182:17;;;;;-1:-1:-1;;;;;4092:182:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4092:182:17;;;;;-1:-1:-1;;;;;4092:182:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4092:182:17;;;;;-1:-1:-1;;;;;4092:182:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4312:36;;;;;;;;4325:12;-1:-1:-1;;;;;4312:36:17;;;;;4338:8;4312:36;;;4284:5;:25;4290:18;:8;918:14:11;;827:112;4290:18:17;4284:25;;;;;;;;;;;;;;-1:-1:-1;4284:25:17;:64;;;;-1:-1:-1;;;;;;4284:64:17;-1:-1:-1;;;;;4284:64:17;;;;;;;;;;;-1:-1:-1;4284:64:17;;;;;;;4358:68;-1:-1:-1;;;4358:68:17;;4392:10;4358:68;;;11125:51:18;4411:4:17;11192:18:18;;;11185:60;11261:18;;;11254:34;;;4358:33:17;;;;;;11098:18:18;;4358:68:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4458:35:17;;;;;;;;;;;4477:15;4458:35;;;;;;;4443:11;;;-1:-1:-1;4436:19:17;;;:6;:19;;;;;;:57;;;;;;;;;;;;;;4503:13;;;-1:-1:-1;4443:11:17;;-1:-1:-1;4503:13:17;;;:::i;:::-;;;;-1:-1:-1;;4543:8:17;918:14:11;4563:10:17;;4531:55;4575:3;4580:5;4531:55;;;;;;;:::i;:::-;;;;;;;;3910:683;;;;;:::o;9900:584::-;9949:25;9983:17;10010:39;10075:18;:8;918:14:11;;827:112;10075:18:17;10052:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10052:42:17;;;;;;;;;;;;;;;-1:-1:-1;10010:84:17;-1:-1:-1;10119:1:17;10105:347;10127:8;918:14:11;10122:1:17;:23;10105:347;;10167:32;10174:8;;;:5;:8;;;;;;;;:24;;-1:-1:-1;;;;;10174:24:17;10167:32;;:6;:32;;;;;10174:24;10200:16;;;;10167:50;;;;;;;:57;;;;;10163:283;;;10270:137;;;-1:-1:-1;10294:8:17;;;:5;:8;;;;;;;:24;;-1:-1:-1;;;;;10294:24:17;;;10287:32;;;:6;:32;;;;;10294:24;10320:16;;;;10287:50;;;;;;;;;10270:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10294:24;10270:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10351:8;;;;;;;;10340:66;;-1:-1:-1;;;10340:66:17;;;;;1545:25:18;10270:137:17;;;;;10340:48;;1518:18:18;;10340:66:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10340:66:17;;;;;;;;;;;;:::i;:::-;10270:137;;;10240:13;10254:12;10240:27;;;;;;;;:::i;:::-;;;;;;:167;;;;10421:14;;;;;:::i;:::-;;;;10163:283;10147:3;;;;:::i;:::-;;;;10105:347;;;-1:-1:-1;10464:13:17;9900:584;-1:-1:-1;;9900:584:17:o;8832:1062::-;8901:40;8908:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;8908:32:17;8901:40;;:6;:40;;;;;8908:32;8942:24;;;;8901:66;;;;;;;:73;;;;;8893:106;;;;-1:-1:-1;;;8893:106:17;;8952:2:18;8893:106:17;;;8934:21:18;8991:2;8971:18;;;8964:30;-1:-1:-1;;;9010:18:18;;;9003:51;9071:18;;8893:106:17;8750:345:18;8893:106:17;9083:40;9090:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;9090:32:17;;;9083:40;;:6;:40;;;;;;9090:32;9124:24;;;;;9083:66;;;;;;;;:73;;;;9009:72;;;;:147;;-1:-1:-1;;;;;;9009:147:17;9083:73;;;9009:147;;;;;;9173:32;;;;9234:40;;;;;;;;;9275:24;;9234:66;;;;;;;;;:73;;;;9308:16;;;;;;;;9166:167;;-1:-1:-1;;;9166:167:17;;9228:4;9166:167;;;11125:51:18;9234:73:17;;;;11192:18:18;;;11185:60;11261:18;;;11254:34;9173:32:17;9166:53;;11098:18:18;;9166:167:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9419:5:17;9350:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;9350:32:17;;;9343:40;;:6;:40;;;;;;9350:32;9384:24;;;;;9343:66;;;;;;;;:73;;:81;;-1:-1:-1;;9343:81:17;;;9441:32;;;;9434:40;;;;;;;;9475:24;;9434:66;;;;;;;:72;;:84;;;918:14:11;;9547:25:17;;;;;;;;;9528:16;;;;:44;;;;-1:-1:-1;;;;;;9528:44:17;;;;;;;;;;;;;;;9582:20;;-1:-1:-1;9582:18:17;:20::i;:::-;9627:40;9634:16;;;:5;:16;;;;;;;;:32;;-1:-1:-1;;;;;9634:32:17;;;9627:40;;:6;:40;;;;;9634:32;9668:24;;;;9627:66;;;;;;;;:74;;9711:73;;;;9814:72;;;;;9617:270;;13425:25:18;;;9711:73:17;;13466:18:18;;;13459:60;;;;9794:10:17;13535:18:18;;;13528:60;13619:2;13604:18;;13597:34;;;;9617:270:17;;13412:3:18;13397:19;9617:270:17;;;;;;;8832:1062;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4361:51:18::0;4334:18;;2672:31:0::1;4215:203:18::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1074:229:11:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:11;;13844:2:18;1177:49:11;;;13826:21:18;13883:2;13863:18;;;13856:30;13922:29;13902:18;;;13895:57;13969:18;;1177:49:11;13642:351:18;1177:49:11;-1:-1:-1;;1277:9:11;1260:26;;1074:229::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:10;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;4361:51:18;4334:18;;1901:40:0;4215:203:18;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:18:-;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:18:o;915:226::-;974:6;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;-1:-1:-1;1088:23:18;;915:226;-1:-1:-1;915:226:18:o;1581:346::-;1649:6;1657;1710:2;1698:9;1689:7;1685:23;1681:32;1678:52;;;1726:1;1723;1716:12;1678:52;-1:-1:-1;;1771:23:18;;;1891:2;1876:18;;;1863:32;;-1:-1:-1;1581:346:18:o;1932:151::-;2008:20;;2057:1;2047:12;;2037:40;;2073:1;2070;2063:12;2088:323;2171:6;2179;2232:2;2220:9;2211:7;2207:23;2203:32;2200:52;;;2248:1;2245;2238:12;2200:52;2293:23;;;-1:-1:-1;2359:46:18;2401:2;2386:18;;2359:46;:::i;:::-;2349:56;;2088:323;;;;;:::o;2416:127::-;2477:10;2472:3;2468:20;2465:1;2458:31;2508:4;2505:1;2498:15;2532:4;2529:1;2522:15;2548:275;2619:2;2613:9;2684:2;2665:13;;-1:-1:-1;;2661:27:18;2649:40;;2719:18;2704:34;;2740:22;;;2701:62;2698:88;;;2766:18;;:::i;:::-;2802:2;2795:22;2548:275;;-1:-1:-1;2548:275:18:o;2828:187::-;2877:4;2910:18;2902:6;2899:30;2896:56;;;2932:18;;:::i;:::-;-1:-1:-1;2998:2:18;2977:15;-1:-1:-1;;2973:29:18;3004:4;2969:40;;2828:187::o;3020:1081::-;3125:6;3133;3141;3149;3157;3210:3;3198:9;3189:7;3185:23;3181:33;3178:53;;;3227:1;3224;3217:12;3178:53;3250:29;3269:9;3250:29;:::i;:::-;3240:39;-1:-1:-1;3348:2:18;3333:18;;3320:32;;-1:-1:-1;3427:2:18;3412:18;;3399:32;3454:18;3443:30;;3440:50;;;3486:1;3483;3476:12;3440:50;3509:22;;3562:4;3554:13;;3550:27;-1:-1:-1;3540:55:18;;3591:1;3588;3581:12;3540:55;3631:2;3618:16;3656:53;3672:36;3701:6;3672:36;:::i;:::-;3656:53;:::i;:::-;3732:6;3725:5;3718:21;3780:7;3775:2;3766:6;3762:2;3758:15;3754:24;3751:37;3748:57;;;3801:1;3798;3791:12;3748:57;3856:6;3851:2;3847;3843:11;3838:2;3831:5;3827:14;3814:49;3908:1;3883:18;;;3903:2;3879:27;3872:38;;;;3887:5;-1:-1:-1;;4007:2:18;3992:18;;3979:32;;-1:-1:-1;4056:39:18;4090:3;4075:19;;4056:39;:::i;:::-;4046:49;;3020:1081;;;;;;;;:::o;4423:300::-;4491:6;4499;4552:2;4540:9;4531:7;4527:23;4523:32;4520:52;;;4568:1;4565;4558:12;4520:52;4591:29;4610:9;4591:29;:::i;:::-;4581:39;4689:2;4674:18;;;;4661:32;;-1:-1:-1;;;4423:300:18:o;5644:250::-;5729:1;5739:113;5753:6;5750:1;5747:13;5739:113;;;5829:11;;;5823:18;5810:11;;;5803:39;5775:2;5768:10;5739:113;;;-1:-1:-1;;5886:1:18;5868:16;;5861:27;5644:250::o;5899:271::-;5941:3;5979:5;5973:12;6006:6;6001:3;5994:19;6022:76;6091:6;6084:4;6079:3;6075:14;6068:4;6061:5;6057:16;6022:76;:::i;:::-;6152:2;6131:15;-1:-1:-1;;6127:29:18;6118:39;;;;6159:4;6114:50;;5899:271;-1:-1:-1;;5899:271:18:o;6175:1888::-;6385:4;6433:2;6422:9;6418:18;6463:2;6452:9;6445:21;6486:6;6521;6515:13;6552:6;6544;6537:22;6590:2;6579:9;6575:18;6568:25;;6652:2;6642:6;6639:1;6635:14;6624:9;6620:30;6616:39;6602:53;;6690:2;6682:6;6678:15;6711:1;6721:1313;6735:6;6732:1;6729:13;6721:1313;;;6828:2;6824:7;6812:9;6804:6;6800:22;6796:36;6791:3;6784:49;6862:6;6856:13;6898:2;6892:9;6935:2;6929:9;6921:6;6914:25;6986:2;6982;6978:11;6972:18;7003:49;7048:2;7040:6;7036:15;7022:12;-1:-1:-1;;;;;4172:31:18;4160:44;;4106:104;7003:49;;7101:2;7097;7093:11;7087:18;7118:51;7165:2;7157:6;7153:15;7137:14;-1:-1:-1;;;;;4172:31:18;4160:44;;4106:104;7118:51;;7222:4;7218:2;7214:13;7208:20;7201:4;7193:6;7189:17;7182:47;7282:4;7278:2;7274:13;7268:20;7261:4;7253:6;7249:17;7242:47;7338:4;7334:2;7330:13;7324:20;7357:50;7401:4;7393:6;7389:17;7373:14;453:13;446:21;434:34;;383:91;7357:50;;7456:4;7452:2;7448:13;7442:20;7475:53;7522:4;7514:6;7510:17;7494:14;-1:-1:-1;;;;;4172:31:18;4160:44;;4106:104;7475:53;;7581:4;7577:2;7573:13;7567:20;7560:4;7552:6;7548:17;7541:47;7643:6;7639:2;7635:15;7629:22;7620:6;7612;7608:19;7601:51;7707:6;7703:2;7699:15;7693:22;7684:6;7676;7672:19;7665:51;;7771:2;7767;7763:11;7757:18;7748:6;7740;7736:19;7729:47;7825:2;7821;7817:11;7811:18;7789:40;;7870:6;7861;7853;7849:19;7842:35;7900:54;7946:6;7938;7934:19;7918:14;7900:54;:::i;:::-;7890:64;-1:-1:-1;;7989:2:18;8012:12;;;;7977:15;;;;;6757:1;6750:9;6721:1313;;;-1:-1:-1;8051:6:18;;6175:1888;-1:-1:-1;;;;;;6175:1888:18:o;8068:209::-;8142:6;8195:2;8183:9;8174:7;8170:23;8166:32;8163:52;;;8211:1;8208;8201:12;8163:52;8234:37;8261:9;8234:37;:::i;8561:184::-;8631:6;8684:2;8672:9;8663:7;8659:23;8655:32;8652:52;;;8700:1;8697;8690:12;8652:52;-1:-1:-1;8723:16:18;;8561:184;-1:-1:-1;8561:184:18:o;9446:127::-;9507:10;9502:3;9498:20;9495:1;9488:31;9538:4;9535:1;9528:15;9562:4;9559:1;9552:15;9578:127;9639:10;9634:3;9630:20;9627:1;9620:31;9670:4;9667:1;9660:15;9694:4;9691:1;9684:15;9710:168;9783:9;;;9814;;9831:15;;;9825:22;;9811:37;9801:71;;9852:18;;:::i;:::-;9710:168;;;;:::o;9883:217::-;9923:1;9949;9939:132;;9993:10;9988:3;9984:20;9981:1;9974:31;10028:4;10025:1;10018:15;10056:4;10053:1;10046:15;9939:132;-1:-1:-1;10085:9:18;;9883:217::o;10448:125::-;10513:9;;;10534:10;;;10531:36;;;10547:18;;:::i;11299:128::-;11366:9;;;11387:11;;;11384:37;;;11401:18;;:::i;11432:135::-;11471:3;11492:17;;;11489:43;;11512:18;;:::i;:::-;-1:-1:-1;11559:1:18;11548:13;;11432:135::o;12092:291::-;12269:2;12258:9;12251:21;12232:4;12289:45;12330:2;12319:9;12315:18;12307:6;12289:45;:::i;:::-;12281:53;;12370:6;12365:2;12354:9;12350:18;12343:34;12092:291;;;;;:::o;12388:669::-;12468:6;12521:2;12509:9;12500:7;12496:23;12492:32;12489:52;;;12537:1;12534;12527:12;12489:52;12570:9;12564:16;12603:18;12595:6;12592:30;12589:50;;;12635:1;12632;12625:12;12589:50;12658:22;;12711:4;12703:13;;12699:27;-1:-1:-1;12689:55:18;;12740:1;12737;12730:12;12689:55;12773:2;12767:9;12798:53;12814:36;12843:6;12814:36;:::i;12798:53::-;12874:6;12867:5;12860:21;12922:7;12917:2;12908:6;12904:2;12900:15;12896:24;12893:37;12890:57;;;12943:1;12940;12933:12;12890:57;12956:71;13020:6;13015:2;13008:5;13004:14;12999:2;12995;12991:11;12956:71;:::i;:::-;13046:5;12388:669;-1:-1:-1;;;;;12388:669:18:o;13062:127::-;13123:10;13118:3;13114:20;13111:1;13104:31;13154:4;13151:1;13144:15;13178:4;13175:1;13168:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1520000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Buy(uint256,uint8)": "infinite",
								"CancleListForSale(uint256)": "infinite",
								"Index(uint256)": "4691",
								"Sales(uint256)": "2506",
								"Volume(uint256)": "4666",
								"_items(address,uint256)": "19880",
								"checkBalanceOf(address)": "infinite",
								"commission(uint256)": "4623",
								"editList(uint256,uint256)": "39941",
								"getAllListedNfts()": "infinite",
								"listItem(address,uint256,string,uint256,address)": "infinite",
								"memberShipPer(uint8)": "2545",
								"owner()": "2346",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1457,
									"end": 1499,
									"name": "PUSH",
									"source": 17,
									"value": "5F31F088C0D692FF133BD3B11B923F4E1BE99E9B"
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1499,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "PUSH",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1526,
									"end": 1568,
									"name": "PUSH",
									"source": 17,
									"value": "E2CBADC3250DC901596E1CDFFA778FC313162247"
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1505,
									"end": 1568,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1593,
									"end": 1635,
									"name": "PUSH",
									"source": 17,
									"value": "572DD734F1068C1EDA13E0B655BC227B31AD8F72"
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1635,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1661,
									"end": 1703,
									"name": "PUSH",
									"source": 17,
									"value": "E533F399513F8ED44D7E12E458D532FE7005CF4E"
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1641,
									"end": 1703,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "CODESIZE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1714,
									"end": 1961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "tag",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1714,
									"end": 1961,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1749,
									"end": 1759,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1749,
									"end": 1759,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1766,
									"end": 1779,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "C"
								},
								{
									"begin": 1766,
									"end": 1796,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1766,
									"end": 1796,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1799,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1766,
									"end": 1796,
									"name": "PUSH",
									"source": 17,
									"value": "13649B2456F1B42FEF0F0040B3AAEABCD21A76A0F3F5DEFD4F583839455116E8"
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1766,
									"end": 1800,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1841,
									"end": 1842,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1806,
									"end": 1838,
									"name": "PUSH",
									"source": 17,
									"value": "D421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5C"
								},
								{
									"begin": 1806,
									"end": 1842,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1806,
									"end": 1842,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1806,
									"end": 1842,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1883,
									"end": 1884,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1848,
									"end": 1880,
									"name": "PUSH",
									"source": 17,
									"value": "5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD720"
								},
								{
									"begin": 1848,
									"end": 1884,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1890,
									"end": 1924,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1890,
									"end": 1924,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1927,
									"end": 1928,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1890,
									"end": 1924,
									"name": "PUSH",
									"source": 17,
									"value": "C0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD7"
								},
								{
									"begin": 1890,
									"end": 1928,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 517,
									"end": 644,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 517,
									"end": 644,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 10487,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7cf876d243431b87f2a79a95367c296828e10477aca05fa16d71c50943a67c764736f6c634300081a0033",
									".code": [
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "7C7CE62D"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "9F5E6FD9"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "9F5E6FD9"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "B50C0D20"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "BC4BC9C8"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "7C7CE62D"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "93F31109"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "95CE4A3B"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "6081A0DD"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "6081A0DD"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "62590604"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "752CD654"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "3147F39"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "1065CF73"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "3529280B"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1155,
											"end": 10487,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 7502,
											"end": 8425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7502,
											"end": 8425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 711,
											"end": 725,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 711,
											"end": 725,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 704,
											"end": 726,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 686,
											"end": 727,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 686,
											"end": 727,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 770,
											"end": 784,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 770,
											"end": 784,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 763,
											"end": 785,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 761,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 736,
											"end": 786,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 829,
											"end": 843,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 829,
											"end": 843,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 822,
											"end": 844,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 802,
											"end": 820,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 802,
											"end": 820,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 802,
											"end": 820,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 795,
											"end": 845,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 888,
											"end": 902,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 881,
											"end": 903,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 861,
											"end": 879,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 861,
											"end": 879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 854,
											"end": 904,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 673,
											"end": 676,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 658,
											"end": 677,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3127,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1320,
											"end": 1345,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1320,
											"end": 1345,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1320,
											"end": 1345,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1354,
											"end": 1388,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1354,
											"end": 1388,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1354,
											"end": 1388,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1354,
											"end": 1388,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 1146,
											"end": 1394,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3182,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1545,
											"end": 1570,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1545,
											"end": 1570,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1545,
											"end": 1570,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 1399,
											"end": 1576,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 8432,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8432,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 4600,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4600,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3079,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3120,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3910,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3910,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4215,
											"end": 4418,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 2944,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5121,
											"end": 5146,
											"name": "SWAP11",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5146,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5146,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5182,
											"end": 5214,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 5182,
											"end": 5214,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 5182,
											"end": 5214,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "DUP13",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5155,
											"end": 5215,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5251,
											"end": 5283,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 5251,
											"end": 5283,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 5251,
											"end": 5283,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5224,
											"end": 5284,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 5224,
											"end": 5284,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5224,
											"end": 5284,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 5224,
											"end": 5284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5300,
											"end": 5318,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5318,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5293,
											"end": 5327,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 5293,
											"end": 5327,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5293,
											"end": 5327,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 5293,
											"end": 5327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5358,
											"end": 5361,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5343,
											"end": 5362,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5343,
											"end": 5362,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5371,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5415,
											"end": 5429,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5415,
											"end": 5429,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5408,
											"end": 5430,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5202,
											"end": 5205,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5387,
											"end": 5406,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5387,
											"end": 5406,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5380,
											"end": 5431,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5462,
											"end": 5465,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 5447,
											"end": 5466,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5447,
											"end": 5466,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5440,
											"end": 5501,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5532,
											"end": 5535,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5517,
											"end": 5536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5510,
											"end": 5545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5510,
											"end": 5545,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5510,
											"end": 5545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5510,
											"end": 5545,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5576,
											"end": 5579,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 5561,
											"end": 5580,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5561,
											"end": 5580,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5605,
											"end": 5624,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5598,
											"end": 5633,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5108,
											"end": 5111,
											"name": "PUSH",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 5093,
											"end": 5112,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2944,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 4728,
											"end": 5639,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 9900,
											"end": 10484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 9900,
											"end": 10484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 8832,
											"end": 9894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 8832,
											"end": 9894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2599,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3031,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8474,
											"end": 8506,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8506,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8506,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8456,
											"end": 8507,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8456,
											"end": 8507,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8429,
											"end": 8447,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3031,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 8282,
											"end": 8556,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7590,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7723,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 7694,
											"end": 7723,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7694,
											"end": 7734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 7694,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7676,
											"end": 7734,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7676,
											"end": 7734,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7773,
											"end": 7784,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7795,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 7762,
											"end": 7795,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7762,
											"end": 7806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 7762,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7744,
											"end": 7806,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7744,
											"end": 7806,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7816,
											"end": 7833,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7833,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7867,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 7836,
											"end": 7867,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7836,
											"end": 7878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "tag",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 7836,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7816,
											"end": 7878,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7816,
											"end": 7878,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7918,
											"end": 7928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7939,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 7907,
											"end": 7939,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 7907,
											"end": 7950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 7907,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7888,
											"end": 7950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7888,
											"end": 7950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7983,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 7987,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8004,
											"end": 8005,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8001,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7991,
											"end": 8005,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8024,
											"end": 8025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8021,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8009,
											"end": 8025,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8040,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8029,
											"end": 8044,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 7973,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7969,
											"end": 8419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7969,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 7969,
											"end": 8419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8081,
											"end": 8085,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 8060,
											"end": 8092,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7969,
											"end": 8419,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 7969,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8123,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8146,
											"end": 8147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8162,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8151,
											"end": 8166,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8109,
											"end": 8419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8109,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 8109,
											"end": 8419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8191,
											"end": 8196,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8202,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8204,
											"end": 8208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8109,
											"end": 8419,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 8109,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8251,
											"end": 8252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8252,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8270,
											"end": 8271,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8267,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 8236,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 8232,
											"end": 8419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8296,
											"end": 8301,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8308,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8310,
											"end": 8314,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8320,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8232,
											"end": 8419,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 8232,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8342,
											"end": 8357,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8342,
											"end": 8357,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8338,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 8338,
											"end": 8419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8396,
											"end": 8401,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 8373,
											"end": 8408,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8338,
											"end": 8419,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 8338,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7502,
											"end": 8425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8432,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8516,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8543,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8543,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8511,
											"end": 8543,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8510,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8544,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8511,
											"end": 8543,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8545,
											"end": 8569,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8569,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8569,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8569,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8570,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8577,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8504,
											"end": 8577,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8577,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8577,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 8504,
											"end": 8577,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8934,
											"end": 8955,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3434B99024BA32B6903737BA103634B9BA32B21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9003,
											"end": 9054,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 8496,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8632,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8643,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8660,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8627,
											"end": 8659,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8661,
											"end": 8685,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8685,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8685,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8687,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8694,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 8708,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8708,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9302,
											"end": 9304,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9284,
											"end": 9305,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 9321,
											"end": 9339,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9321,
											"end": 9339,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9321,
											"end": 9339,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9314,
											"end": 9344,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA1027BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9353,
											"end": 9400,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 9100,
											"end": 9441,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 8612,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8751,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8762,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8778,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8778,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8746,
											"end": 8778,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8746,
											"end": 8778,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8780,
											"end": 8804,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8805,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8739,
											"end": 8819,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4674,
											"end": 4697,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4716,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 4674,
											"end": 4697,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 4855,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 4855,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4837,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4846,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4852,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4814,
											"end": 4852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4852,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 4814,
											"end": 4876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 4814,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4876,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 4814,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 4813,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4925,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4934,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4941,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4902,
											"end": 4941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4941,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4791,
											"end": 4883,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4791,
											"end": 4883,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4945,
											"end": 4955,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4941,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4941,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4902,
											"end": 4955,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10307,
											"end": 10309,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10289,
											"end": 10310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10346,
											"end": 10348,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10319,
											"end": 10349,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329029B2B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10358,
											"end": 10402,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10419,
											"end": 10437,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10419,
											"end": 10437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 10105,
											"end": 10443,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 4894,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5045,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 5007,
											"end": 5045,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5045,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5063,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5063,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 5007,
											"end": 5063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 5007,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4992,
											"end": 5064,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4992,
											"end": 5064,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10780,
											"end": 10782,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10762,
											"end": 10783,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10792,
											"end": 10822,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10831,
											"end": 10877,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 10578,
											"end": 10918,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 4984,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5140,
											"end": 5144,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11176,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5146,
											"end": 5156,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11185,
											"end": 11245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 5095,
											"end": 5131,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 5095,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5420,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5437,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5446,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5457,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5414,
											"end": 5457,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5411,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 5411,
											"end": 5713,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5540,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5549,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5515,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5476,
											"end": 5515,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5517,
											"end": 5556,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5556,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 5574,
											"end": 5622,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 5574,
											"end": 5622,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5574,
											"end": 5622,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5574,
											"end": 5627,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 5645,
											"end": 5692,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 5645,
											"end": 5692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5645,
											"end": 5692,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5645,
											"end": 5692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5645,
											"end": 5696,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5411,
											"end": 5713,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 5411,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5752,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5767,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5729,
											"end": 5767,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5767,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5729,
											"end": 5771,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5726,
											"end": 5995,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5823,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 5791,
											"end": 5839,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 5791,
											"end": 5839,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5839,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5843,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5843,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 17,
											"value": "5F"
										},
										{
											"begin": 5861,
											"end": 5909,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 5861,
											"end": 5909,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5861,
											"end": 5909,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5861,
											"end": 5912,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5930,
											"end": 5977,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 5930,
											"end": 5977,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5930,
											"end": 5977,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5930,
											"end": 5977,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5930,
											"end": 5980,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5995,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 5726,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6046,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6057,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6074,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6075,
											"end": 6099,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6100,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6106,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6034,
											"end": 6106,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6106,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 17,
											"value": "3E8"
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 6034,
											"end": 6123,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6034,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6034,
											"end": 6123,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 6034,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 6033,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 6033,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6252,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6237,
											"end": 6252,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6141,
											"end": 6158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6174,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6185,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6202,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6228,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6234,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6162,
											"end": 6234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6234,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6131,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6141,
											"end": 6158,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 17,
											"value": "3E8"
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6162,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 6161,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 6161,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6270,
											"end": 6287,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6302,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6313,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6296,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6330,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6329,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6331,
											"end": 6355,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6331,
											"end": 6355,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6331,
											"end": 6355,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6331,
											"end": 6355,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6356,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6432,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6438,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6400,
											"end": 6438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6438,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6141,
											"end": 6260,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6141,
											"end": 6260,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6457,
											"end": 6460,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6457,
											"end": 6460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 6400,
											"end": 6453,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6290,
											"end": 6372,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 6400,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6400,
											"end": 6453,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 6400,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 6399,
											"end": 6460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 6399,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6382,
											"end": 6460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6487,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6570,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6382,
											"end": 6460,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 6532,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "tag",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 6532,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6496,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6513,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6522,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6528,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 6490,
											"end": 6528,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6528,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 6490,
											"end": 6571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 6490,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6602,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6613,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6596,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6631,
											"end": 6655,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6631,
											"end": 6655,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6631,
											"end": 6655,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6631,
											"end": 6655,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6656,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6571,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6571,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6571,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6571,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6630,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6571,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6663,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 6582,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6747,
											"end": 6771,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6747,
											"end": 6771,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6747,
											"end": 6771,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6747,
											"end": 6771,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6772,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6745,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6790,
											"end": 6799,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6790,
											"end": 6799,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6746,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6790,
											"end": 6799,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 6779,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 6697,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6847,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6847,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6836,
											"end": 6847,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 6810,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6884,
											"end": 6899,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6884,
											"end": 6899,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6884,
											"end": 6899,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 6858,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6952,
											"end": 6957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6916,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6933,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6942,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6949,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6910,
											"end": 6949,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6957,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6957,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6957,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6957,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6910,
											"end": 6957,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7062,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7024,
											"end": 7062,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 7024,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "tag",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7064,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7098,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 7099,
											"end": 7107,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7080,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7091,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7118,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 7128,
											"end": 7148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "tag",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 7128,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7179,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7207,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7208,
											"end": 7232,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7208,
											"end": 7232,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7208,
											"end": 7232,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7208,
											"end": 7232,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7233,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7323,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 7241,
											"end": 7323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7323,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7174,
											"end": 7206,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7167,
											"end": 7240,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8456,
											"end": 8507,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8456,
											"end": 8507,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8516,
											"end": 8550,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "PUSH",
											"source": 17,
											"value": "7BD3AA7D673767F759EBF216E7F6C12844986C661AE6E0F1D988CF7EB7394D1D"
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8429,
											"end": 8447,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7163,
											"end": 7324,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7370,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7379,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7387,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7347,
											"end": 7387,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11831,
											"end": 11856,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11831,
											"end": 11856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11831,
											"end": 11856,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7398,
											"end": 7437,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11865,
											"end": 11925,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7447,
											"end": 7457,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 11941,
											"end": 11959,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11941,
											"end": 11959,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11941,
											"end": 11959,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11934,
											"end": 11994,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12025,
											"end": 12027,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12003,
											"end": 12037,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12003,
											"end": 12037,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12003,
											"end": 12037,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7473,
											"end": 7488,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 12068,
											"end": 12071,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 12053,
											"end": 12072,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12053,
											"end": 12072,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12046,
											"end": 12081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "PUSH",
											"source": 17,
											"value": "5FAFAD85DEC201C2E73B6A2BEF6351129304A624EA8720ECD04CD7F04D83BC39"
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11818,
											"end": 11821,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7339,
											"end": 7489,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4663,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4600,
											"end": 7496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4141,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4142,
											"end": 4152,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4193,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4194,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4204,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4210,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4210,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4174,
											"end": 4210,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4212,
											"end": 4216,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4227,
											"end": 4242,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4242,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4243,
											"end": 4258,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4243,
											"end": 4258,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4259,
											"end": 4273,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 4259,
											"end": 4273,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4111,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4112,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4121,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4092,
											"end": 4274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4346,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4289,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 4290,
											"end": 4298,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4309,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4348,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4392,
											"end": 4402,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11176,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11185,
											"end": 11245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 4358,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4477,
											"end": 4492,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4493,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4436,
											"end": 4493,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 4503,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4543,
											"end": 4551,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "PUSH",
											"source": 17,
											"value": "1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8"
										},
										{
											"begin": 4575,
											"end": 4578,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4580,
											"end": 4585,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 4531,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4531,
											"end": 4586,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 4593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 9974,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9983,
											"end": 10000,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10049,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 10075,
											"end": 10083,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 10052,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "tag",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "tag",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 10052,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10119,
											"end": 10120,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10127,
											"end": 10135,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10122,
											"end": 10145,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10179,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10182,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10198,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10198,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10174,
											"end": 10198,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10199,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10174,
											"end": 10198,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10200,
											"end": 10216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10200,
											"end": 10216,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10200,
											"end": 10216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10200,
											"end": 10216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10217,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10224,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10167,
											"end": 10224,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10224,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10167,
											"end": 10224,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 10167,
											"end": 10224,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10163,
											"end": 10446,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10163,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 10163,
											"end": 10446,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10299,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10302,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10293,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10320,
											"end": 10336,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10320,
											"end": 10336,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10320,
											"end": 10336,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10320,
											"end": 10336,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10337,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "1A0"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10294,
											"end": 10318,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "PUSH",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10359,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8AD91345"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1545,
											"end": 1570,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10388,
											"name": "PUSH",
											"source": 17,
											"value": "8AD91345"
										},
										{
											"begin": 10340,
											"end": 10388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 10340,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 10340,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10407,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10253,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10254,
											"end": 10266,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 10240,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10267,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10407,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10240,
											"end": 10407,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 10421,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10163,
											"end": 10446,
											"name": "tag",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 10163,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 10147,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10147,
											"end": 10150,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 10105,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10464,
											"end": 10477,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9900,
											"end": 10484,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 10484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8913,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8941,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8908,
											"end": 8940,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8942,
											"end": 8966,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8942,
											"end": 8966,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8942,
											"end": 8966,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8942,
											"end": 8966,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8967,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8974,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 8901,
											"end": 8974,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8974,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 8901,
											"end": 8974,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 8901,
											"end": 8974,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 8954,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8934,
											"end": 8955,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8971,
											"end": 8989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8964,
											"end": 8994,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3434B99024BA32B6903737BA103634B9BA32B21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9003,
											"end": 9054,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9071,
											"end": 9089,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 8750,
											"end": 9095,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 8893,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9095,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9106,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9089,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9123,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9122,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9149,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9081,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 9009,
											"end": 9081,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9081,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9081,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9083,
											"end": 9156,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9156,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9205,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9205,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9205,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9205,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9274,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9275,
											"end": 9299,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9275,
											"end": 9299,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9300,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9324,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9228,
											"end": 9232,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11176,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9307,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11185,
											"end": 11245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9219,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 9166,
											"end": 9219,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 9166,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9419,
											"end": 9424,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9355,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9366,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9383,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9382,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9384,
											"end": 9408,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9384,
											"end": 9408,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9384,
											"end": 9408,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9384,
											"end": 9408,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9384,
											"end": 9408,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9409,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9416,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 9343,
											"end": 9416,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9424,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9424,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9343,
											"end": 9424,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9424,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9343,
											"end": 9424,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9473,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9473,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9473,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9473,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9474,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9475,
											"end": 9499,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9475,
											"end": 9499,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9500,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9506,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9434,
											"end": 9506,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9518,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9518,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9434,
											"end": 9518,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 918,
											"end": 932,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9547,
											"end": 9572,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9528,
											"end": 9572,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 9582,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 9582,
											"end": 9602,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9582,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 9582,
											"end": 9602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9582,
											"end": 9602,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 9582,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9639,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9633,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9667,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9634,
											"end": 9666,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9668,
											"end": 9692,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9693,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9814,
											"end": 9886,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 9814,
											"end": 9886,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9814,
											"end": 9886,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9814,
											"end": 9886,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9814,
											"end": 9886,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13425,
											"end": 13450,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13425,
											"end": 13450,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13425,
											"end": 13450,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9784,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13459,
											"end": 13519,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13459,
											"end": 13519,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13459,
											"end": 13519,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13459,
											"end": 13519,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9794,
											"end": 9804,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 13535,
											"end": 13553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13535,
											"end": 13553,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13535,
											"end": 13553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13528,
											"end": 13588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13619,
											"end": 13621,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13631,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13631,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13631,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13631,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "PUSH",
											"source": 17,
											"value": "FB0451E2371B977DB14CE8DB0BD62262E6FF8FE4B5960280928BA94E02443603"
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13412,
											"end": 13415,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 13397,
											"end": 13416,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8832,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4215,
											"end": 4418,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13844,
											"end": 13846,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13826,
											"end": 13847,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13883,
											"end": 13885,
											"name": "PUSH",
											"source": 18,
											"value": "1B"
										},
										{
											"begin": 13863,
											"end": 13881,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13863,
											"end": 13881,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13863,
											"end": 13881,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13856,
											"end": 13886,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13922,
											"end": 13951,
											"name": "PUSH",
											"source": 18,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13895,
											"end": 13952,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13969,
											"end": 13987,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 13969,
											"end": 13987,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 13642,
											"end": 13993,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4412,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4215,
											"end": 4418,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 915,
											"end": 1141,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 915,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 974,
											"end": 980,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1029,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1002,
											"end": 1025,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 998,
											"end": 1030,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "287"
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1033,
											"end": 1045,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "tag",
											"source": 18,
											"value": "287"
										},
										{
											"begin": 995,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1111,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1088,
											"end": 1111,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 915,
											"end": 1141,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1581,
											"end": 1927,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 1581,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1707,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1689,
											"end": 1696,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1681,
											"end": 1713,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1730,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 1678,
											"end": 1730,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1728,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1730,
											"name": "tag",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 1678,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1794,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1771,
											"end": 1794,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1771,
											"end": 1794,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1863,
											"end": 1895,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1863,
											"end": 1895,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1932,
											"end": 2083,
											"name": "tag",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 1932,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2028,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2008,
											"end": 2028,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2037,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 2037,
											"end": 2077,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2063,
											"end": 2075,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2218,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2207,
											"end": 2230,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2203,
											"end": 2235,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2200,
											"end": 2252,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2200,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 2200,
											"end": 2252,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2200,
											"end": 2252,
											"name": "tag",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 2200,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2386,
											"end": 2404,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2359,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 2359,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2359,
											"end": 2405,
											"name": "tag",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 2359,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2405,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2405,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2088,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2416,
											"end": 2543,
											"name": "tag",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 2416,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2477,
											"end": 2487,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 2472,
											"end": 2475,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2468,
											"end": 2488,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2489,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2548,
											"end": 2823,
											"name": "tag",
											"source": 18,
											"value": "272"
										},
										{
											"begin": 2548,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2688,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2649,
											"end": 2689,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2649,
											"end": 2689,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2704,
											"end": 2738,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2704,
											"end": 2738,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2786,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 2698,
											"end": 2786,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 2766,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "tag",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2548,
											"end": 2823,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2548,
											"end": 2823,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2828,
											"end": 3015,
											"name": "tag",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 2828,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2877,
											"end": 2881,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2899,
											"end": 2929,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2896,
											"end": 2952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2896,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 2896,
											"end": 2952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 2932,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "tag",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 2932,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 2992,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 3002,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3009,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2969,
											"end": 3009,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2828,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3189,
											"end": 3196,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3185,
											"end": 3208,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "305"
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3225,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3217,
											"end": 3229,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "tag",
											"source": 18,
											"value": "305"
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "306"
										},
										{
											"begin": 3269,
											"end": 3278,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 3250,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3250,
											"end": 3279,
											"name": "tag",
											"source": 18,
											"value": "306"
										},
										{
											"begin": 3250,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3240,
											"end": 3279,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3348,
											"end": 3350,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3351,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3333,
											"end": 3351,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3430,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3412,
											"end": 3430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3399,
											"end": 3431,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3443,
											"end": 3473,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3440,
											"end": 3490,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3440,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 3440,
											"end": 3490,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3440,
											"end": 3490,
											"name": "tag",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 3440,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3554,
											"end": 3567,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3554,
											"end": 3567,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3577,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "308"
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "tag",
											"source": 18,
											"value": "308"
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3618,
											"end": 3634,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3656,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 3672,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 3701,
											"end": 3707,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3672,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 3672,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3672,
											"end": 3708,
											"name": "tag",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 3672,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3656,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "272"
										},
										{
											"begin": 3656,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3656,
											"end": 3709,
											"name": "tag",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 3656,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3725,
											"end": 3730,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3718,
											"end": 3739,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3780,
											"end": 3787,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3758,
											"end": 3773,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3751,
											"end": 3788,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3748,
											"end": 3805,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3748,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "311"
										},
										{
											"begin": 3748,
											"end": 3805,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3791,
											"end": 3803,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3748,
											"end": 3805,
											"name": "tag",
											"source": 18,
											"value": "311"
										},
										{
											"begin": 3748,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3843,
											"end": 3854,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3838,
											"end": 3840,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3836,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3827,
											"end": 3841,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3814,
											"end": 3863,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3903,
											"end": 3905,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3879,
											"end": 3906,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3910,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3910,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3910,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3910,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4056,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 4090,
											"end": 4093,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4056,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 4056,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4056,
											"end": 4095,
											"name": "tag",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 4056,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4095,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4723,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 4423,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4549,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4531,
											"end": 4538,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4527,
											"end": 4550,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4523,
											"end": 4555,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "tag",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4591,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 4610,
											"end": 4619,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4591,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 4591,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4591,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 4591,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4581,
											"end": 4620,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4423,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5644,
											"end": 5894,
											"name": "tag",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 5644,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "tag",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5753,
											"end": 5759,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5747,
											"end": 5760,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5829,
											"end": 5840,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5829,
											"end": 5840,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5829,
											"end": 5840,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5821,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5821,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5821,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5803,
											"end": 5842,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5775,
											"end": 5777,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 5739,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5887,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5884,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5868,
											"end": 5884,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5861,
											"end": 5888,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5644,
											"end": 5894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "tag",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6001,
											"end": 6004,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6022,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6079,
											"end": 6082,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6066,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6057,
											"end": 6073,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6022,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 6022,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6022,
											"end": 6098,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 6022,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6152,
											"end": 6154,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6127,
											"end": 6156,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6157,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6157,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6157,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6157,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6159,
											"end": 6163,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6170,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 6170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6175,
											"end": 8063,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 6175,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6418,
											"end": 6436,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6445,
											"end": 6466,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6486,
											"end": 6492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6515,
											"end": 6528,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6552,
											"end": 6558,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6544,
											"end": 6550,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6537,
											"end": 6559,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6568,
											"end": 6593,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6568,
											"end": 6593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6652,
											"end": 6654,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6620,
											"end": 6650,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6616,
											"end": 6655,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6602,
											"end": 6655,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6602,
											"end": 6655,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6682,
											"end": 6688,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6678,
											"end": 6693,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6735,
											"end": 6741,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6729,
											"end": 6742,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 6824,
											"end": 6831,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6800,
											"end": 6822,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6796,
											"end": 6832,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6791,
											"end": 6794,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6784,
											"end": 6833,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6856,
											"end": 6869,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6898,
											"end": 6900,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6914,
											"end": 6939,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6982,
											"end": 6984,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7003,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7051,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7022,
											"end": 7034,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4203,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4210,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7003,
											"end": 7052,
											"name": "tag",
											"source": 18,
											"value": "329"
										},
										{
											"begin": 7003,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7003,
											"end": 7052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7101,
											"end": 7103,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7099,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7093,
											"end": 7104,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 7165,
											"end": 7167,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7151,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4203,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4210,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7169,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 7118,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7169,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7218,
											"end": 7220,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7214,
											"end": 7227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7208,
											"end": 7228,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7193,
											"end": 7199,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7182,
											"end": 7229,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7278,
											"end": 7280,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7274,
											"end": 7287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7268,
											"end": 7288,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7242,
											"end": 7289,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7334,
											"end": 7336,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7330,
											"end": 7343,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7393,
											"end": 7399,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7373,
											"end": 7387,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 453,
											"end": 466,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 446,
											"end": 467,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 434,
											"end": 468,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 434,
											"end": 468,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 383,
											"end": 474,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7407,
											"name": "tag",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 7357,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7407,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7456,
											"end": 7460,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 7452,
											"end": 7454,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7448,
											"end": 7461,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7442,
											"end": 7462,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7475,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7510,
											"end": 7527,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7508,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4203,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4204,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4210,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7475,
											"end": 7528,
											"name": "tag",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 7475,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7475,
											"end": 7528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7581,
											"end": 7585,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7573,
											"end": 7586,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7552,
											"end": 7558,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7565,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7541,
											"end": 7588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 7639,
											"end": 7641,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7635,
											"end": 7650,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7629,
											"end": 7651,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7620,
											"end": 7626,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7608,
											"end": 7627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7601,
											"end": 7652,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7713,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7699,
											"end": 7714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7693,
											"end": 7715,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 7676,
											"end": 7682,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7665,
											"end": 7716,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7665,
											"end": 7716,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7763,
											"end": 7774,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7748,
											"end": 7754,
											"name": "PUSH",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7736,
											"end": 7755,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7729,
											"end": 7776,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7825,
											"end": 7827,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7823,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7817,
											"end": 7828,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7789,
											"end": 7829,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7789,
											"end": 7829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "PUSH",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "PUSH",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 7853,
											"end": 7859,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7842,
											"end": 7877,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "PUSH",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 7938,
											"end": 7944,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7934,
											"end": 7953,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7918,
											"end": 7932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 7900,
											"end": 7954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7954,
											"name": "tag",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 7900,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 7954,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8024,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8012,
											"end": 8024,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8012,
											"end": 8024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8012,
											"end": 8024,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6750,
											"end": 6759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "tag",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 6721,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6175,
											"end": 8063,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6175,
											"end": 8063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8068,
											"end": 8277,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 8068,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8142,
											"end": 8148,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8174,
											"end": 8181,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8170,
											"end": 8193,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8166,
											"end": 8198,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8209,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 8163,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8234,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8234,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 8234,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8561,
											"end": 8745,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 8561,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8681,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8663,
											"end": 8670,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8655,
											"end": 8687,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8652,
											"end": 8704,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8652,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 8652,
											"end": 8704,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8698,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8652,
											"end": 8704,
											"name": "tag",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 8652,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8723,
											"end": 8739,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8739,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8561,
											"end": 8745,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9446,
											"end": 9573,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 9446,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9507,
											"end": 9517,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9502,
											"end": 9505,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9519,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9528,
											"end": 9543,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9567,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9578,
											"end": 9705,
											"name": "tag",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 9578,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9639,
											"end": 9649,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9634,
											"end": 9637,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9627,
											"end": 9628,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9651,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9670,
											"end": 9674,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9660,
											"end": 9675,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9694,
											"end": 9698,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9691,
											"end": 9692,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9684,
											"end": 9699,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9831,
											"end": 9846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9831,
											"end": 9846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9831,
											"end": 9846,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9825,
											"end": 9847,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 9811,
											"end": 9848,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 9801,
											"end": 9872,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 9852,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9710,
											"end": 9878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9883,
											"end": 10100,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 9883,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9923,
											"end": 9924,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9949,
											"end": 9950,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9939,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 9939,
											"end": 10071,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9993,
											"end": 10003,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9988,
											"end": 9991,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9984,
											"end": 10004,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9974,
											"end": 10005,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10028,
											"end": 10032,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 10018,
											"end": 10033,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10056,
											"end": 10060,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10053,
											"end": 10054,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10046,
											"end": 10061,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9939,
											"end": 10071,
											"name": "tag",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 9939,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10094,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 10085,
											"end": 10094,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9883,
											"end": 10100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10448,
											"end": 10573,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 10448,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10513,
											"end": 10522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10534,
											"end": 10544,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10534,
											"end": 10544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10534,
											"end": 10544,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10531,
											"end": 10567,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10531,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 10531,
											"end": 10567,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 10547,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11299,
											"end": 11427,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 11299,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11387,
											"end": 11398,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11387,
											"end": 11398,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11387,
											"end": 11398,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 11384,
											"end": 11421,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 11401,
											"end": 11419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11432,
											"end": 11567,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 11432,
											"end": 11567,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11471,
											"end": 11474,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11509,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11492,
											"end": 11509,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11492,
											"end": 11509,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11489,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 11489,
											"end": 11532,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 11512,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "tag",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11548,
											"end": 11561,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11548,
											"end": 11561,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11432,
											"end": 11567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12269,
											"end": 12271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12251,
											"end": 12272,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12232,
											"end": 12236,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12334,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12330,
											"end": 12332,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12319,
											"end": 12328,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12289,
											"end": 12334,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 12289,
											"end": 12334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12289,
											"end": 12334,
											"name": "tag",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 12289,
											"end": 12334,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12281,
											"end": 12334,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12281,
											"end": 12334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12370,
											"end": 12376,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12365,
											"end": 12367,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12350,
											"end": 12368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12343,
											"end": 12377,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12092,
											"end": 12383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12388,
											"end": 13057,
											"name": "tag",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 12388,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12474,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12509,
											"end": 12518,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12500,
											"end": 12507,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12496,
											"end": 12519,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12492,
											"end": 12524,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12489,
											"end": 12541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12489,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 12489,
											"end": 12541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12537,
											"end": 12538,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12527,
											"end": 12539,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12489,
											"end": 12541,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 12489,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12595,
											"end": 12601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12592,
											"end": 12622,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12589,
											"end": 12639,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12589,
											"end": 12639,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 12589,
											"end": 12639,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12635,
											"end": 12636,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12625,
											"end": 12637,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12589,
											"end": 12639,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 12589,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12711,
											"end": 12715,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 12703,
											"end": 12716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12703,
											"end": 12716,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12699,
											"end": 12726,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 12689,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 12689,
											"end": 12744,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12740,
											"end": 12741,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12737,
											"end": 12738,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12730,
											"end": 12742,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12689,
											"end": 12744,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 12689,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12773,
											"end": 12775,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12767,
											"end": 12776,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12798,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 12814,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 12843,
											"end": 12849,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12814,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 12814,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12798,
											"end": 12851,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 12798,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12874,
											"end": 12880,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12867,
											"end": 12872,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12860,
											"end": 12881,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12922,
											"end": 12929,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12914,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12900,
											"end": 12915,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12896,
											"end": 12920,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12893,
											"end": 12930,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12890,
											"end": 12947,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12890,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 12890,
											"end": 12947,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12943,
											"end": 12944,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12940,
											"end": 12941,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12933,
											"end": 12945,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12890,
											"end": 12947,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 12890,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12956,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 13020,
											"end": 13026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13015,
											"end": 13017,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13008,
											"end": 13013,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13004,
											"end": 13018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12999,
											"end": 13001,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 12997,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12991,
											"end": 13002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12956,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 12956,
											"end": 13027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12956,
											"end": 13027,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 12956,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13046,
											"end": 13051,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 12388,
											"end": 13057,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12388,
											"end": 13057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13062,
											"end": 13189,
											"name": "tag",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 13062,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 13118,
											"end": 13121,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13111,
											"end": 13112,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13104,
											"end": 13135,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13154,
											"end": 13158,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 13151,
											"end": 13152,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13144,
											"end": 13159,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13178,
											"end": 13182,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13175,
											"end": 13176,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13183,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/fatcat/marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Buy(uint256,uint8)": "62590604",
							"CancleListForSale(uint256)": "9f5e6fd9",
							"Index(uint256)": "bc4bc9c8",
							"Sales(uint256)": "3529280b",
							"Volume(uint256)": "752cd654",
							"_items(address,uint256)": "93f31109",
							"checkBalanceOf(address)": "03147f39",
							"commission(uint256)": "1065cf73",
							"editList(uint256,uint256)": "6081a0dd",
							"getAllListedNfts()": "95ce4a3b",
							"listItem(address,uint256,string,uint256,address)": "7c7ce62d",
							"memberShipPer(uint8)": "b50c0d20",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ArtistAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ArtistFee\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTCancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SoldTime\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum NFTMarketplace.memberShip\",\"name\":\"choice\",\"type\":\"uint8\"}],\"name\":\"Buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"}],\"name\":\"CancleListForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Index\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"TokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Sales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Volume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"artistFeePerAge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerFeePerAge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerFeePerAge\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddrr\",\"type\":\"address\"}],\"name\":\"checkBalanceOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGoldMember\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSilverMember\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isBronzeMember\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStandardMember\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"commission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCommission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"editList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllListedNfts\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"artistFeePerAge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellerFeePerAge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerFeePerAge\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarketplace.NFTlist\",\"name\":\"listedData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"Index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uriData\",\"type\":\"string\"}],\"internalType\":\"struct NFTMarketplace.ListedNftTokenId[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum NFTMarketplace.memberShip\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"memberShipPer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fatcat/marketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/fatcat/marketplace.sol\":{\"keccak256\":\"0xbd4eb17d488c6f940faee47157442f1fa14c553c46a9eaa087f6995b99185edf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1c218d1b56ee19e8eb58b9cf40d3c29c201d55debe8680a035256cfbe9f9ae\",\"dweb:/ipfs/QmWiFFRN66dGoKRVgaRAespLW5dkaxThHs5unTEx5gEra6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3232,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "_itemIds",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1650_storage"
							},
							{
								"astId": 3235,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "_itemsSold",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1650_storage"
							},
							{
								"astId": 3237,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "totalVolume",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 3239,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "artistFeePerAge",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3241,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "sellerFeePerAge",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3243,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "buyerFeePerAge",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 3245,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "soldCount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 3248,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "FatCats",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 3251,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "FatLeopards",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 3254,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "FatTigers",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3257,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "FatKittens",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 3346,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "memberShipPer",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_enum(memberShip)3305,t_uint256)"
							},
							{
								"astId": 3361,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "_items",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTlist)3326_storage))"
							},
							{
								"astId": 3366,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "Index",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(tokenAddress)3331_storage)"
							},
							{
								"astId": 3371,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "Volume",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_struct(VolumeData)3336_storage)"
							},
							{
								"astId": 3376,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "commission",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_struct(commissionData)3341_storage)"
							},
							{
								"astId": 3380,
								"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
								"label": "Sales",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(memberShip)3305": {
								"encoding": "inplace",
								"label": "enum NFTMarketplace.memberShip",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTlist)3326_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(NFTlist)3326_storage)"
							},
							"t_mapping(t_enum(memberShip)3305,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(memberShip)3305",
								"label": "mapping(enum NFTMarketplace.memberShip => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(NFTlist)3326_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.NFTlist)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTlist)3326_storage"
							},
							"t_mapping(t_uint256,t_struct(VolumeData)3336_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.VolumeData)",
								"numberOfBytes": "32",
								"value": "t_struct(VolumeData)3336_storage"
							},
							"t_mapping(t_uint256,t_struct(commissionData)3341_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.commissionData)",
								"numberOfBytes": "32",
								"value": "t_struct(commissionData)3341_storage"
							},
							"t_mapping(t_uint256,t_struct(tokenAddress)3331_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.tokenAddress)",
								"numberOfBytes": "32",
								"value": "t_struct(tokenAddress)3331_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)1650_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1649,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFTlist)3326_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.NFTlist",
								"members": [
									{
										"astId": 3307,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3309,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3311,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "owner",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 3313,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3315,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "count",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3317,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "listed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 3319,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "artist",
										"offset": 1,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 3321,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "artistFeePerAge",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3323,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "sellerFeePerAge",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 3325,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "buyerFeePerAge",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(VolumeData)3336_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.VolumeData",
								"members": [
									{
										"astId": 3333,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "_price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3335,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "_time",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(commissionData)3341_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.commissionData",
								"members": [
									{
										"astId": 3338,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "totalCommission",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3340,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(tokenAddress)3331_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.tokenAddress",
								"members": [
									{
										"astId": 3328,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3330,
										"contract": "contracts/fatcat/marketplace.sol:NFTMarketplace",
										"label": "TokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1645,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1644
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2010,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2009
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1997
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2009
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1973
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1645,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1974,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1998,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1997,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1997,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1997,
								2009,
								1644
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1996,
										2008
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1996,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1997,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2009,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1786,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2010,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2009
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1973
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1974,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1997,
								2009,
								1644
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2008
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2009,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1586,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1586,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1586,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "431:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								2009
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1614,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1614,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1614,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1644
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1644,
							"linearizedBaseContracts": [
								1644
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1644,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1644,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1639,
												"id": 1641,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1644,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1718
						]
					},
					"id": 1719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1647,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:11",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1718,
							"linearizedBaseContracts": [
								1718
							],
							"name": "Counters",
							"nameLocation": "432:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1650,
									"members": [
										{
											"constant": false,
											"id": 1649,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1650,
											"src": "786:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1648,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:11",
									"nodeType": "StructDefinition",
									"scope": 1718,
									"src": "447:374:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "901:38:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1658,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1649,
													"src": "918:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1660,
												"nodeType": "Return",
												"src": "911:21:11"
											}
										]
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "844:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "Counter",
														"nameLocations": [
															"844:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "844:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:11"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:11"
									},
									"scope": 1718,
									"src": "827:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "998:70:11",
										"statements": [
											{
												"id": 1674,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:11",
												"statements": [
													{
														"expression": {
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1668,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1032:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1649,
																"src": "1032:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1673,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:11"
													}
												]
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "964:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1663,
														"name": "Counter",
														"nameLocations": [
															"964:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "964:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:11"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:11"
									},
									"scope": 1718,
									"src": "945:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "1127:176:11",
										"statements": [
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "1137:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": {
													"expression": {
														"id": 1684,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "1153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1649,
													"src": "1153:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "1185:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:11"
											},
											{
												"id": 1702,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:11",
												"statements": [
													{
														"expression": {
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1694,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "1260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1649,
																"src": "1260:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1277:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1701,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:11"
													}
												]
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1093:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1677,
														"name": "Counter",
														"nameLocations": [
															"1093:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "1093:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:11"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:11"
									},
									"scope": 1718,
									"src": "1074:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "1358:35:11",
										"statements": [
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1710,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "1368:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:11",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1649,
														"src": "1368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:11"
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1324:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1705,
														"name": "Counter",
														"nameLocations": [
															"1324:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "1324:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "1324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:11"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:11"
									},
									"scope": 1718,
									"src": "1309:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "424:971:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3063
						],
						"SignedMath": [
							3168
						],
						"Strings": [
							1973
						]
					},
					"id": 1974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1722,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1974,
							"sourceUnit": 3064,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1721,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3063,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1974,
							"sourceUnit": 3169,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1723,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3168,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1973,
							"linearizedBaseContracts": [
								1973
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1728,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1973,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1726,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1727,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1731,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1973,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1729,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1730,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1738,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1784,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1747
														],
														"declarations": [
															{
																"constant": false,
																"id": 1747,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1754,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1748,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3063,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3063_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2883,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1756
														],
														"declarations": [
															{
																"constant": false,
																"id": 1756,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1755,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1761,
														"initialValue": {
															"arguments": [
																{
																	"id": 1759,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1757,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1763
														],
														"declarations": [
															{
																"constant": false,
																"id": 1763,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1764,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1747,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1765,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1780,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1767,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1763,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1769,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1728,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1763,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1741,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1770,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1774,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1779,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1778,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1781,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1782,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1783,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1973,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1804,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3168,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3168_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3167,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1803,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1794,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1810,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1788,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1973,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1830,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1821,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1824,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1815,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1822,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3063,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3063_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3005,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1820,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1832,
																	1915,
																	1935
																],
																"referencedDeclaration": 1915,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1819,
														"id": 1829,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1973,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1843
												],
												"declarations": [
													{
														"constant": false,
														"id": 1843,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"id": 1844,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1835,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1856,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1851,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1848,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1857,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1859,
														"indexExpression": {
															"hexValue": "30",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1863,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1865,
														"indexExpression": {
															"hexValue": "31",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1897,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1883,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1885,
																	"indexExpression": {
																		"id": 1884,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1886,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1890,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1887,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1843,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1892,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1893,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1896,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1877,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"initializationExpression": {
													"assignments": [
														1870
													],
													"declarations": [
														{
															"constant": false,
															"id": 1870,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1898,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1869,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1876,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1872,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1880,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1882,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1899,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1908,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1907,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1903,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1904,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1902,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1906,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1911,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1909,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1913,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1973,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1928,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1918,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1926,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1931,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1923,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1915,
															1935
														],
														"referencedDeclaration": 1915,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1933,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1973,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1947,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1952,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1959,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1957,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1956,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1965,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1963,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1962,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1970,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1973,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "251:2847:12",
							"usedErrors": [
								1738
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1997
						],
						"IERC165": [
							2009
						]
					},
					"id": 1998,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 2010,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1976,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1979,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "687:7:13"
									},
									"id": 1980,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1978,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1997,
							"linearizedBaseContracts": [
								1997,
								2009
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2008
									],
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1988,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1990,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2009_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2009_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1989,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2009",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1987,
												"id": 1994,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 1997,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1998,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1999,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2000,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 2009,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2010,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3063
						]
					},
					"id": 3064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2012,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3063,
							"linearizedBaseContracts": [
								3063
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2015,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2020,
									"members": [
										{
											"id": 2016,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 2017,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 2018,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 2019,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 2050,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															2033
														],
														"declarations": [
															{
																"constant": false,
																"id": 2033,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2050,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2037,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2034,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2038,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2039,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2031,
															"id": 2044,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2047,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2048,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2031,
														"id": 2049,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3063,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2078,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2064,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2071,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2063,
															"id": 2070,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2073,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2074,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2076,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2063,
														"id": 2077,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3063,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2120,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2092,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2099,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2097,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2098,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2101
														],
														"declarations": [
															{
																"constant": false,
																"id": 2101,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2105,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2107,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2109,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2114,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2117,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2091,
														"id": 2119,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3063,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2148,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2141,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2140,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2143,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2144,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2146,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2133,
														"id": 2147,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3063,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2176,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2169,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2167,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2161,
															"id": 2168,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2171,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2172,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2174,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2161,
														"id": 2175,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3063,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2188,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2189,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2192,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2191,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2187,
												"id": 2194,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3063,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2212,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3063,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2225,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2229,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2231,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2235,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3063,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2247,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2254,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2250,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2251,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2246,
															"id": 2253,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2256,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2260,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2264,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2246,
												"id": 2269,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3063,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2395,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2284
														],
														"declarations": [
															{
																"constant": false,
																"id": 2284,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2288,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2285,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2286,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2290
														],
														"declarations": [
															{
																"constant": false,
																"id": 2290,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2291,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2274,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2292,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2296,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2297,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2282,
																	"id": 2299,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2302,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2303,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2305,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2307,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2311
														],
														"declarations": [
															{
																"constant": false,
																"id": 2311,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2312,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2274,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2313,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2315
														],
														"declarations": [
															{
																"constant": false,
																"id": 2315,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2322,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2316,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2318,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2323,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2324,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2325,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2326,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2329,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2331
														],
														"declarations": [
															{
																"constant": false,
																"id": 2331,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2338,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2333,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2341,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2342,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2346,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2347,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2349,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2350,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2354,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2355,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2357,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2358,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2365,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2366,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2370,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2373,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2374,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2379,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2381,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2382,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2388,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2389,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2392,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2393,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2282,
														"id": 2394,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3063,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2413
												],
												"declarations": [
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2439,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2419,
												"initialValue": {
													"arguments": [
														{
															"id": 2415,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2416,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2417,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2414,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2397,
															2440
														],
														"referencedDeclaration": 2397,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2421,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2020",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2020",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2420,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2424,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2425,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2426,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2423,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2436,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2435,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2431,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2434,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2437,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2413,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2411,
												"id": 2438,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2405,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3063,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2448,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2447,
															"id": 2452,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2456
												],
												"declarations": [
													{
														"constant": false,
														"id": 2456,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2551,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2465,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2459,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2458,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2719,
																			2754
																		],
																		"referencedDeclaration": 2719,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2463,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2550,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2466,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2467,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2469,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2476,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2478,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2480,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2487,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2499,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2500,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2509,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2510,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2511,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2512,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2513,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2516,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2520,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2521,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2522,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2523,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2524,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2527,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2531,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2532,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2533,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2535,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2538,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2542,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2544,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2545,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2546,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2543,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2447,
														"id": 2549,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3063,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2564
														],
														"declarations": [
															{
																"constant": false,
																"id": 2564,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2563,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2568,
														"initialValue": {
															"arguments": [
																{
																	"id": 2566,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2565,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2552,
																	2587
																],
																"referencedDeclaration": 2552,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2571,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2558,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2570,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2573,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2574,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2576,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2555,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2562,
														"id": 2584,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2556,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3063,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2718,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2596
												],
												"declarations": [
													{
														"constant": false,
														"id": 2596,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2718,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2598,
												"initialValue": {
													"hexValue": "30",
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2715,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2613,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2612,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2611,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2614,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2629,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2641,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2702,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2714,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2713,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2716,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2596,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2594,
												"id": 2717,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3063,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2753,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2752,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2731
														],
														"declarations": [
															{
																"constant": false,
																"id": 2731,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2752,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2730,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2735,
														"initialValue": {
															"arguments": [
																{
																	"id": 2733,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2732,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2719,
																	2754
																],
																"referencedDeclaration": 2719,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2738,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2725,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2737,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2741,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2731,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2743,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2729,
														"id": 2751,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2720,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2724,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2723,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3063,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2765,
												"initialValue": {
													"hexValue": "30",
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 2879,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2782,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2781,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2783,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2799,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2798,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2800,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2816,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 2815,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2817,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2833,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 2832,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2827,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2828,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2831,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2834,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2850,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 2849,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2839,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2844,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2845,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2848,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2851,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2867,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2856,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2878,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 2877,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2880,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2763,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2881,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3063,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 2916,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															2895
														],
														"declarations": [
															{
																"constant": false,
																"id": 2895,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2916,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2894,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2899,
														"initialValue": {
															"arguments": [
																{
																	"id": 2897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2886,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2896,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2883,
																	2918
																],
																"referencedDeclaration": 2883,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2900,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2902,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2889,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2901,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2904,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2905,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2895,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2907,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2886,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2913,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2893,
														"id": 2915,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2884,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2887,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3063,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3004,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													2927
												],
												"declarations": [
													{
														"constant": false,
														"id": 2927,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2929,
												"initialValue": {
													"hexValue": "30",
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 3001,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2944,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 2943,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2935,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2938,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2942,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2959,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 2958,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2974,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 2973,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2968,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2969,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2972,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2989,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 2988,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2980,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2983,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2984,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2987,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3000,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 2999,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2998,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3002,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2927,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2925,
												"id": 3003,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3063,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 3041,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															3017
														],
														"declarations": [
															{
																"constant": false,
																"id": 3017,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3041,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3021,
														"initialValue": {
															"arguments": [
																{
																	"id": 3019,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3008,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3018,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3005,
																	3043
																],
																"referencedDeclaration": 3005,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3024,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3011,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3023,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3031,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3026,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3029,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3027,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3017,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3028,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3030,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3032,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3038,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3015,
														"id": 3040,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3006,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3009,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3063,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3061,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3054,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3047,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2020",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2020",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3052,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3051,
												"id": 3060,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3045,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3063,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3064,
							"src": "203:14914:15",
							"usedErrors": [
								2015
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3168
						]
					},
					"id": 3169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3065,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3066,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3168,
							"linearizedBaseContracts": [
								3168
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3076,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3077,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3080,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3079,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3075,
												"id": 3082,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3068,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3070,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3073,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3168,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3094,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3095,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3098,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3097,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3093,
												"id": 3100,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3085,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3086,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3088,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3091,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3168,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3113
												],
												"declarations": [
													{
														"constant": false,
														"id": 3113,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3112,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3114,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3115,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3107,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3118,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3119,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3107,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3121,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3127,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3132,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3113,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3130,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3128,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3137,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3138,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3107,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3140,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3142,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3111,
												"id": 3144,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3109,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3168,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3165,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3156,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3160,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3159,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3149,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3154,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3153,
														"id": 3164,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3147,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3168,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3169,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contracts/fatcat/marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/fatcat/marketplace.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Counters": [
							1718
						],
						"ERC165": [
							1997
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"GetBalance": [
							3182
						],
						"IConnected": [
							3223
						],
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"NFTMarketplace": [
							4345
						],
						"Ownable": [
							147
						],
						"Strings": [
							1973
						]
					},
					"id": 4346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4346,
							"sourceUnit": 1326,
							"src": "107:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4346,
							"sourceUnit": 1587,
							"src": "165:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4346,
							"sourceUnit": 1719,
							"src": "244:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4346,
							"sourceUnit": 148,
							"src": "297:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GetBalance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3182,
							"linearizedBaseContracts": [
								3182
							],
							"name": "GetBalance",
							"nameLocation": "361:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 3181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "388:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "_addrr",
												"nameLocation": "406:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "398:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:16:17"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "442:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "437:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "437:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:14:17"
									},
									"scope": 3182,
									"src": "379:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4346,
							"src": "351:102:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IConnected",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3223,
							"linearizedBaseContracts": [
								3223
							],
							"name": "IConnected",
							"nameLocation": "465:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IConnected.NFT",
									"id": 3197,
									"members": [
										{
											"constant": false,
											"id": 3184,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "605:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "597:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "597:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3186,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "634:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "626:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3185,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "626:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3188,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "657:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "649:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "649:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3190,
											"mutability": "mutable",
											"name": "minted",
											"nameLocation": "677:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "672:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3189,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "672:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3192,
											"mutability": "mutable",
											"name": "artist",
											"nameLocation": "701:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "693:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3191,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "693:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3194,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "724:3:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "717:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3193,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "717:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3196,
											"mutability": "mutable",
											"name": "mintTime",
											"nameLocation": "742:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 3197,
											"src": "737:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3195,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "737:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "583:3:17",
									"nodeType": "StructDefinition",
									"scope": 3223,
									"src": "576:181:17",
									"visibility": "public"
								},
								{
									"functionSelector": "6e0cee09",
									"id": 3206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenId",
									"nameLocation": "868:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3199,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "890:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "882:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "899:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "894:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "916:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "908:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:42:17"
									},
									"returnParameters": {
										"id": 3205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:17"
									},
									"scope": 3223,
									"src": "859:74:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f1537686",
									"id": 3215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "1007:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1026:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "1018:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:18:17"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "1058:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$3197_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IConnected.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3211,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3210,
															"name": "NFT",
															"nameLocations": [
																"1058:3:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3197,
															"src": "1058:3:17"
														},
														"referencedDeclaration": 3197,
														"src": "1058:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3197_storage_ptr",
															"typeString": "struct IConnected.NFT"
														}
													},
													"id": 3212,
													"nodeType": "ArrayTypeName",
													"src": "1058:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3197_storage_$dyn_storage_ptr",
														"typeString": "struct IConnected.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:15:17"
									},
									"scope": 3223,
									"src": "998:75:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8ad91345",
									"id": 3222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenUri",
									"nameLocation": "1087:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1104:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "1099:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:15:17"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "1136:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1136:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:15:17"
									},
									"scope": 3223,
									"src": "1078:73:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4346,
							"src": "455:699:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3224,
										"name": "Ownable",
										"nameLocations": [
											"1182:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1182:7:17"
									},
									"id": 3225,
									"nodeType": "InheritanceSpecifier",
									"src": "1182:7:17"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4345,
							"linearizedBaseContracts": [
								4345,
								147,
								1644
							],
							"name": "NFTMarketplace",
							"nameLocation": "1164:14:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3229,
									"libraryName": {
										"id": 3226,
										"name": "Counters",
										"nameLocations": [
											"1203:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1718,
										"src": "1203:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "1197:36:17",
									"typeName": {
										"id": 3228,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3227,
											"name": "Counters.Counter",
											"nameLocations": [
												"1216:8:17",
												"1225:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1650,
											"src": "1216:16:17"
										},
										"referencedDeclaration": 1650,
										"src": "1216:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3232,
									"mutability": "mutable",
									"name": "_itemIds",
									"nameLocation": "1263:8:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1238:33:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1650_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3231,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3230,
											"name": "Counters.Counter",
											"nameLocations": [
												"1238:8:17",
												"1247:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1650,
											"src": "1238:16:17"
										},
										"referencedDeclaration": 1650,
										"src": "1238:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3235,
									"mutability": "mutable",
									"name": "_itemsSold",
									"nameLocation": "1302:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1277:35:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1650_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3234,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3233,
											"name": "Counters.Counter",
											"nameLocations": [
												"1277:8:17",
												"1286:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1650,
											"src": "1277:16:17"
										},
										"referencedDeclaration": 1650,
										"src": "1277:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3237,
									"mutability": "mutable",
									"name": "totalVolume",
									"nameLocation": "1323:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1318:16:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3236,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1318:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3239,
									"mutability": "mutable",
									"name": "artistFeePerAge",
									"nameLocation": "1345:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1340:20:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3238,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1340:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3241,
									"mutability": "mutable",
									"name": "sellerFeePerAge",
									"nameLocation": "1371:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1366:20:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3240,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1366:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3243,
									"mutability": "mutable",
									"name": "buyerFeePerAge",
									"nameLocation": "1397:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1392:19:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3242,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1392:4:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3245,
									"mutability": "mutable",
									"name": "soldCount",
									"nameLocation": "1425:9:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1417:17:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1417:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3248,
									"mutability": "mutable",
									"name": "FatCats",
									"nameLocation": "1448:7:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1440:59:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3246,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1440:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835463331663038386330643639324646313333626433623131623932334634453162453939453942",
										"id": 3247,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1457:42:17",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5F31f088c0d692FF133bd3b11b923F4E1bE99E9B"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3251,
									"mutability": "mutable",
									"name": "FatLeopards",
									"nameLocation": "1513:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1505:63:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3249,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1505:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845324342416463333235304463393031353936453163444646413737386663333133313632323437",
										"id": 3250,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1526:42:17",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE2CBAdc3250Dc901596E1cDFFA778fc313162247"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3254,
									"mutability": "mutable",
									"name": "FatTigers",
									"nameLocation": "1582:9:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1574:61:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3252,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1574:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835373264443733344631303638433145446131334530623635354243323237623331414438663732",
										"id": 3253,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1593:42:17",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x572dD734F1068C1EDa13E0b655BC227b31AD8f72"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3257,
									"mutability": "mutable",
									"name": "FatKittens",
									"nameLocation": "1649:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "1641:62:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1641:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845353333663339393531334638456434344437453132453435386435333246653730303543463465",
										"id": 3256,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:42:17",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xE533f399513F8Ed44D7E12E458d532Fe7005CF4e"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "1760:201:17",
										"statements": [
											{
												"expression": {
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3266,
															"name": "memberShipPer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3346,
															"src": "1766:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
																"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
															}
														},
														"id": 3269,
														"indexExpression": {
															"expression": {
																"id": 3267,
																"name": "memberShip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3305,
																"src": "1780:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_memberShip_$3305_$",
																	"typeString": "type(enum NFTMarketplace.memberShip)"
																}
															},
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1791:4:17",
															"memberName": "Gold",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3301,
															"src": "1780:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_memberShip_$3305",
																"typeString": "enum NFTMarketplace.memberShip"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1766:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1799:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1766:34:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3272,
												"nodeType": "ExpressionStatement",
												"src": "1766:34:17"
											},
											{
												"expression": {
													"id": 3278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3273,
															"name": "memberShipPer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3346,
															"src": "1806:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
																"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
															}
														},
														"id": 3276,
														"indexExpression": {
															"expression": {
																"id": 3274,
																"name": "memberShip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3305,
																"src": "1820:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_memberShip_$3305_$",
																	"typeString": "type(enum NFTMarketplace.memberShip)"
																}
															},
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1831:6:17",
															"memberName": "Silver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3302,
															"src": "1820:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_memberShip_$3305",
																"typeString": "enum NFTMarketplace.memberShip"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1806:32:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 3277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1841:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1806:36:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3279,
												"nodeType": "ExpressionStatement",
												"src": "1806:36:17"
											},
											{
												"expression": {
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3280,
															"name": "memberShipPer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3346,
															"src": "1848:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
																"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
															}
														},
														"id": 3283,
														"indexExpression": {
															"expression": {
																"id": 3281,
																"name": "memberShip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3305,
																"src": "1862:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_memberShip_$3305_$",
																	"typeString": "type(enum NFTMarketplace.memberShip)"
																}
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1873:6:17",
															"memberName": "Bronze",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3303,
															"src": "1862:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_memberShip_$3305",
																"typeString": "enum NFTMarketplace.memberShip"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1848:32:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 3284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1883:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1848:36:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3286,
												"nodeType": "ExpressionStatement",
												"src": "1848:36:17"
											},
											{
												"expression": {
													"id": 3292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3287,
															"name": "memberShipPer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3346,
															"src": "1890:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
																"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
															}
														},
														"id": 3290,
														"indexExpression": {
															"expression": {
																"id": 3288,
																"name": "memberShip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3305,
																"src": "1904:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_memberShip_$3305_$",
																	"typeString": "type(enum NFTMarketplace.memberShip)"
																}
															},
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1915:8:17",
															"memberName": "Standard",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3304,
															"src": "1904:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_memberShip_$3305",
																"typeString": "enum NFTMarketplace.memberShip"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1890:34:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 3291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1927:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1890:38:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3293,
												"nodeType": "ExpressionStatement",
												"src": "1890:38:17"
											},
											{
												"expression": {
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3294,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3259,
														"src": "1934:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3295,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1942:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1946:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1942:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1934:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "1934:18:17"
											}
										]
									},
									"id": 3300,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 3262,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1749:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1753:6:17",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1749:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3264,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3261,
												"name": "Ownable",
												"nameLocations": [
													"1741:7:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1741:7:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1741:19:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3259,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1734:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "1726:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:15:17"
									},
									"returnParameters": {
										"id": 3265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:17"
									},
									"scope": 4345,
									"src": "1714:247:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.memberShip",
									"id": 3305,
									"members": [
										{
											"id": 3301,
											"name": "Gold",
											"nameLocation": "1984:4:17",
											"nodeType": "EnumValue",
											"src": "1984:4:17"
										},
										{
											"id": 3302,
											"name": "Silver",
											"nameLocation": "1990:6:17",
											"nodeType": "EnumValue",
											"src": "1990:6:17"
										},
										{
											"id": 3303,
											"name": "Bronze",
											"nameLocation": "1998:6:17",
											"nodeType": "EnumValue",
											"src": "1998:6:17"
										},
										{
											"id": 3304,
											"name": "Standard",
											"nameLocation": "2006:8:17",
											"nodeType": "EnumValue",
											"src": "2006:8:17"
										}
									],
									"name": "memberShip",
									"nameLocation": "1973:10:17",
									"nodeType": "EnumDefinition",
									"src": "1968:47:17"
								},
								{
									"canonicalName": "NFTMarketplace.NFTlist",
									"id": 3326,
									"members": [
										{
											"constant": false,
											"id": 3307,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "2055:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2047:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3306,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2047:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3309,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "2084:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2076:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3308,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2076:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3311,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "2108:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2100:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3310,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2100:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3313,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "2131:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2123:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2123:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3315,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "2154:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2146:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3314,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2146:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3317,
											"mutability": "mutable",
											"name": "listed",
											"nameLocation": "2174:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2169:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3316,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2169:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3319,
											"mutability": "mutable",
											"name": "artist",
											"nameLocation": "2198:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2190:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3318,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2190:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3321,
											"mutability": "mutable",
											"name": "artistFeePerAge",
											"nameLocation": "2219:15:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2214:20:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3320,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2214:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3323,
											"mutability": "mutable",
											"name": "sellerFeePerAge",
											"nameLocation": "2249:15:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2244:20:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3322,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2244:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3325,
											"mutability": "mutable",
											"name": "buyerFeePerAge",
											"nameLocation": "2279:14:17",
											"nodeType": "VariableDeclaration",
											"scope": 3326,
											"src": "2274:19:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3324,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2274:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTlist",
									"nameLocation": "2029:7:17",
									"nodeType": "StructDefinition",
									"scope": 4345,
									"src": "2022:279:17",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.tokenAddress",
									"id": 3331,
									"members": [
										{
											"constant": false,
											"id": 3328,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "2344:15:17",
											"nodeType": "VariableDeclaration",
											"scope": 3331,
											"src": "2336:23:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3327,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2336:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3330,
											"mutability": "mutable",
											"name": "TokenId",
											"nameLocation": "2374:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3331,
											"src": "2369:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3329,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2369:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "tokenAddress",
									"nameLocation": "2313:12:17",
									"nodeType": "StructDefinition",
									"scope": 4345,
									"src": "2306:82:17",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.VolumeData",
									"id": 3336,
									"members": [
										{
											"constant": false,
											"id": 3333,
											"mutability": "mutable",
											"name": "_price",
											"nameLocation": "2425:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3336,
											"src": "2420:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3332,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2420:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3335,
											"mutability": "mutable",
											"name": "_time",
											"nameLocation": "2446:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3336,
											"src": "2441:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3334,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2441:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VolumeData",
									"nameLocation": "2400:10:17",
									"nodeType": "StructDefinition",
									"scope": 4345,
									"src": "2393:65:17",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.commissionData",
									"id": 3341,
									"members": [
										{
											"constant": false,
											"id": 3338,
											"mutability": "mutable",
											"name": "totalCommission",
											"nameLocation": "2498:15:17",
											"nodeType": "VariableDeclaration",
											"scope": 3341,
											"src": "2493:20:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3337,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2493:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3340,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "2527:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 3341,
											"src": "2522:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3339,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2522:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "commissionData",
									"nameLocation": "2470:14:17",
									"nodeType": "StructDefinition",
									"scope": 4345,
									"src": "2463:81:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b50c0d20",
									"id": 3346,
									"mutability": "mutable",
									"name": "memberShipPer",
									"nameLocation": "2586:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "2550:49:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
										"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
									},
									"typeName": {
										"id": 3345,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3343,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3342,
												"name": "memberShip",
												"nameLocations": [
													"2559:10:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3305,
												"src": "2559:10:17"
											},
											"referencedDeclaration": 3305,
											"src": "2559:10:17",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_memberShip_$3305",
												"typeString": "enum NFTMarketplace.memberShip"
											}
										},
										"nodeType": "Mapping",
										"src": "2550:28:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
											"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3344,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2573:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMarketplace.ListedNftTokenId",
									"id": 3354,
									"members": [
										{
											"constant": false,
											"id": 3349,
											"mutability": "mutable",
											"name": "listedData",
											"nameLocation": "2734:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 3354,
											"src": "2726:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTlist_$3326_storage_ptr",
												"typeString": "struct NFTMarketplace.NFTlist"
											},
											"typeName": {
												"id": 3348,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3347,
													"name": "NFTlist",
													"nameLocations": [
														"2726:7:17"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3326,
													"src": "2726:7:17"
												},
												"referencedDeclaration": 3326,
												"src": "2726:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NFTlist_$3326_storage_ptr",
													"typeString": "struct NFTMarketplace.NFTlist"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3351,
											"mutability": "mutable",
											"name": "Index",
											"nameLocation": "2813:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3354,
											"src": "2808:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3350,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2808:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3353,
											"mutability": "mutable",
											"name": "uriData",
											"nameLocation": "2887:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3354,
											"src": "2880:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3352,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2880:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ListedNftTokenId",
									"nameLocation": "2699:16:17",
									"nodeType": "StructDefinition",
									"scope": 4345,
									"src": "2692:247:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f31109",
									"id": 3361,
									"mutability": "mutable",
									"name": "_items",
									"nameLocation": "3019:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "2944:81:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist))"
									},
									"typeName": {
										"id": 3360,
										"keyName": "mintContractAddress",
										"keyNameLocation": "2960:19:17",
										"keyType": {
											"id": 3355,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2952:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2944:67:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3359,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3356,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2991:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2982:28:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
												"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3358,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3357,
													"name": "NFTlist",
													"nameLocations": [
														"3002:7:17"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3326,
													"src": "3002:7:17"
												},
												"referencedDeclaration": 3326,
												"src": "3002:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NFTlist_$3326_storage_ptr",
													"typeString": "struct NFTMarketplace.NFTlist"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc4bc9c8",
									"id": 3366,
									"mutability": "mutable",
									"name": "Index",
									"nameLocation": "3068:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "3031:42:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress)"
									},
									"typeName": {
										"id": 3365,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3362,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3039:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3031:29:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3364,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3363,
												"name": "tokenAddress",
												"nameLocations": [
													"3047:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3331,
												"src": "3047:12:17"
											},
											"referencedDeclaration": 3331,
											"src": "3047:12:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_tokenAddress_$3331_storage_ptr",
												"typeString": "struct NFTMarketplace.tokenAddress"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "752cd654",
									"id": 3371,
									"mutability": "mutable",
									"name": "Volume",
									"nameLocation": "3114:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "3079:41:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VolumeData_$3336_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.VolumeData)"
									},
									"typeName": {
										"id": 3370,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3367,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3087:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3079:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VolumeData_$3336_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.VolumeData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3369,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3368,
												"name": "VolumeData",
												"nameLocations": [
													"3095:10:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3336,
												"src": "3095:10:17"
											},
											"referencedDeclaration": 3336,
											"src": "3095:10:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VolumeData_$3336_storage_ptr",
												"typeString": "struct NFTMarketplace.VolumeData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1065cf73",
									"id": 3376,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "3166:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "3127:49:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_commissionData_$3341_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.commissionData)"
									},
									"typeName": {
										"id": 3375,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3372,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3135:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3127:31:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_commissionData_$3341_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.commissionData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3374,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3373,
												"name": "commissionData",
												"nameLocations": [
													"3143:14:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3341,
												"src": "3143:14:17"
											},
											"referencedDeclaration": 3341,
											"src": "3143:14:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_commissionData_$3341_storage_ptr",
												"typeString": "struct NFTMarketplace.commissionData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3529280b",
									"id": 3380,
									"mutability": "mutable",
									"name": "Sales",
									"nameLocation": "3211:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 4345,
									"src": "3182:34:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3379,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3377,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3190:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3182:21:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3378,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3198:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a8",
									"id": 3390,
									"name": "ItemCreated",
									"nameLocation": "3230:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3382,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "3258:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3242:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3384,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3282:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3266:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3266:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3386,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "3298:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3291:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3291:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3311:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3303:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:76:17"
									},
									"src": "3224:94:17"
								},
								{
									"anonymous": false,
									"eventSelector": "a574c741071bb18f51fa88c17aeefec514bebf670ca22a3736fba6504ecbb763",
									"id": 3398,
									"name": "ItemSold",
									"nameLocation": "3329:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3392,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "3354:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "3338:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3338:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3394,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "3378:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "3362:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3396,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3393:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "3385:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3337:62:17"
									},
									"src": "3323:77:17"
								},
								{
									"anonymous": false,
									"eventSelector": "62af98dbc3627e85c5eb929b032d3ce3d6c376652d71b4cca6162a16ef099114",
									"id": 3408,
									"name": "NFTListed",
									"nameLocation": "3462:9:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3480:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "3472:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3402,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "3497:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "3489:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3404,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3513:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "3505:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3406,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3528:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "3520:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:63:17"
									},
									"src": "3456:79:17"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafad85dec201c2e73b6a2bef6351129304a624ea8720ecd04cd7f04d83bc39",
									"id": 3420,
									"name": "NFTSold",
									"nameLocation": "3583:7:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3599:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "3591:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3412,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "3616:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "3608:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3414,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3632:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "3624:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3416,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3647:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "3639:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3639:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3418,
												"indexed": false,
												"mutability": "mutable",
												"name": "SoldTime",
												"nameLocation": "3659:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "3654:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3654:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:78:17"
									},
									"src": "3577:92:17"
								},
								{
									"anonymous": false,
									"eventSelector": "7bd3aa7d673767f759ebf216e7f6c12844986c661ae6e0f1d988cf7eb7394d1d",
									"id": 3426,
									"name": "Fee",
									"nameLocation": "3732:3:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3422,
												"indexed": false,
												"mutability": "mutable",
												"name": "ArtistAddress",
												"nameLocation": "3744:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "3736:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3424,
												"indexed": false,
												"mutability": "mutable",
												"name": "ArtistFee",
												"nameLocation": "3764:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "3759:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3759:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3735:39:17"
									},
									"src": "3726:49:17"
								},
								{
									"anonymous": false,
									"eventSelector": "fb0451e2371b977db14ce8db0bd62262e6ff8fe4b5960280928ba94e02443603",
									"id": 3436,
									"name": "NFTCancel",
									"nameLocation": "3830:9:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3848:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "3840:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3430,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "3865:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "3857:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3857:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3432,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3881:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "3873:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3896:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "3888:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3839:63:17"
									},
									"src": "3824:79:17"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "4024:569:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3449,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "4034:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4043:9:17",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1676,
														"src": "4034:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1650_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3453,
												"nodeType": "ExpressionStatement",
												"src": "4034:20:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3454,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "4064:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3456,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4073:7:17",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "4064:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:18:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3458,
												"nodeType": "ExpressionStatement",
												"src": "4064:18:17"
											},
											{
												"expression": {
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3459,
																"name": "_items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3361,
																"src": "4092:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																}
															},
															"id": 3462,
															"indexExpression": {
																"id": 3460,
																"name": "mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3438,
																"src": "4099:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4092:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
															}
														},
														"id": 3463,
														"indexExpression": {
															"id": 3461,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "4113:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4092:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
															"typeString": "struct NFTMarketplace.NFTlist storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3465,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3440,
																"src": "4133:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3466,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4142:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4146:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4142:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3470,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4161:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																			"typeString": "contract NFTMarketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																			"typeString": "contract NFTMarketplace"
																		}
																	],
																	"id": 3469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4153:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4153:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4153:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3472,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3444,
																"src": "4168:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3473,
																			"name": "_items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3361,
																			"src": "4174:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																			}
																		},
																		"id": 3475,
																		"indexExpression": {
																			"id": 3474,
																			"name": "mintContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3438,
																			"src": "4181:12:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4174:20:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																		}
																	},
																	"id": 3477,
																	"indexExpression": {
																		"id": 3476,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3440,
																		"src": "4195:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4174:30:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																		"typeString": "struct NFTMarketplace.NFTlist storage ref"
																	}
																},
																"id": 3478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4205:5:17",
																"memberName": "count",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3315,
																"src": "4174:36:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4212:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 3480,
																"name": "artist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3446,
																"src": "4219:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3481,
																"name": "artistFeePerAge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3239,
																"src": "4227:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3482,
																"name": "sellerFeePerAge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3241,
																"src": "4243:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3483,
																"name": "buyerFeePerAge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3243,
																"src": "4259:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3464,
															"name": "NFTlist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3326,
															"src": "4124:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFTlist_$3326_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.NFTlist storage pointer)"
															}
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4124:150:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTlist_$3326_memory_ptr",
															"typeString": "struct NFTMarketplace.NFTlist memory"
														}
													},
													"src": "4092:182:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
														"typeString": "struct NFTMarketplace.NFTlist storage ref"
													}
												},
												"id": 3486,
												"nodeType": "ExpressionStatement",
												"src": "4092:182:17"
											},
											{
												"expression": {
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3487,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "4284:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 3491,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3488,
																	"name": "_itemIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3232,
																	"src": "4290:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3489,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4299:7:17",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "4290:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4290:18:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4284:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3493,
																"name": "mintContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3438,
																"src": "4325:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3494,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3440,
																"src": "4338:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3492,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "4312:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_tokenAddress_$3331_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.tokenAddress storage pointer)"
															}
														},
														"id": 3495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4312:36:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_memory_ptr",
															"typeString": "struct NFTMarketplace.tokenAddress memory"
														}
													},
													"src": "4284:64:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
														"typeString": "struct NFTMarketplace.tokenAddress storage ref"
													}
												},
												"id": 3497,
												"nodeType": "ExpressionStatement",
												"src": "4284:64:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4392:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4396:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4392:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3506,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4411:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4403:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4403:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4403:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3508,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3440,
															"src": "4417:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3499,
																	"name": "mintContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3438,
																	"src": "4365:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3498,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "4358:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1325_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 3500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4358:20:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1325",
																"typeString": "contract ERC721"
															}
														},
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4379:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 633,
														"src": "4358:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4358:68:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3510,
												"nodeType": "ExpressionStatement",
												"src": "4358:68:17"
											},
											{
												"expression": {
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3511,
															"name": "Volume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "4436:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VolumeData_$3336_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.VolumeData storage ref)"
															}
														},
														"id": 3513,
														"indexExpression": {
															"id": 3512,
															"name": "totalVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3237,
															"src": "4443:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4436:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VolumeData_$3336_storage",
															"typeString": "struct NFTMarketplace.VolumeData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3515,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3444,
																"src": "4469:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3516,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4477:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4483:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4477:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3514,
															"name": "VolumeData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3336,
															"src": "4458:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_VolumeData_$3336_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.VolumeData storage pointer)"
															}
														},
														"id": 3518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4458:35:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VolumeData_$3336_memory_ptr",
															"typeString": "struct NFTMarketplace.VolumeData memory"
														}
													},
													"src": "4436:57:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VolumeData_$3336_storage",
														"typeString": "struct NFTMarketplace.VolumeData storage ref"
													}
												},
												"id": 3520,
												"nodeType": "ExpressionStatement",
												"src": "4436:57:17"
											},
											{
												"expression": {
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4503:13:17",
													"subExpression": {
														"id": 3521,
														"name": "totalVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "4503:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3523,
												"nodeType": "ExpressionStatement",
												"src": "4503:13:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3525,
																	"name": "_itemIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3232,
																	"src": "4543:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3526,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4552:7:17",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "4543:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4543:18:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4563:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4567:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4563:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3530,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "4575:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3531,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3444,
															"src": "4580:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3524,
														"name": "ItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "4531:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256)"
														}
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3533,
												"nodeType": "EmitStatement",
												"src": "4526:60:17"
											}
										]
									},
									"functionSelector": "7c7ce62d",
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listItem",
									"nameLocation": "3919:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "mintContract",
												"nameLocation": "3937:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "3929:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3957:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "3952:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3952:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "3981:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "3967:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3967:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3994:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "3986:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "artist",
												"nameLocation": "4009:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "4001:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4001:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3927:89:17"
									},
									"returnParameters": {
										"id": 3448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4024:0:17"
									},
									"scope": 4345,
									"src": "3910:683:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3914,
										"nodeType": "Block",
										"src": "4663:2833:17",
										"statements": [
											{
												"assignments": [
													3544
												],
												"declarations": [
													{
														"constant": false,
														"id": 3544,
														"mutability": "mutable",
														"name": "contractAddress",
														"nameLocation": "4682:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "4674:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4674:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3549,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3545,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "4700:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 3547,
														"indexExpression": {
															"id": 3546,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3537,
															"src": "4706:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4700:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4717:15:17",
													"memberName": "contractAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3328,
													"src": "4700:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4674:58:17"
											},
											{
												"assignments": [
													3551
												],
												"declarations": [
													{
														"constant": false,
														"id": 3551,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "4747:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "4742:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3550,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4742:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3556,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3552,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "4757:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 3554,
														"indexExpression": {
															"id": 3553,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3537,
															"src": "4763:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4757:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4774:7:17",
													"memberName": "TokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3330,
													"src": "4757:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4742:39:17"
											},
											{
												"assignments": [
													3558
												],
												"declarations": [
													{
														"constant": false,
														"id": 3558,
														"mutability": "mutable",
														"name": "memberPerAgeCal",
														"nameLocation": "4796:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "4791:20:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3557,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4791:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3572,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3559,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "4814:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3561,
																			"indexExpression": {
																				"id": 3560,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "4821:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4814:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3563,
																		"indexExpression": {
																			"id": 3562,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "4838:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4814:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3564,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4847:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3313,
																	"src": "4814:38:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3565,
																		"name": "memberShipPer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3346,
																		"src": "4855:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_memberShip_$3305_$_t_uint256_$",
																			"typeString": "mapping(enum NFTMarketplace.memberShip => uint256)"
																		}
																	},
																	"id": 3567,
																	"indexExpression": {
																		"id": 3566,
																		"name": "choice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3540,
																		"src": "4869:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_memberShip_$3305",
																			"typeString": "enum NFTMarketplace.memberShip"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4855:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4814:62:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3569,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4813:64:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4880:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4813:70:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4791:92:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3574,
																			"name": "_items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3361,
																			"src": "4902:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																			}
																		},
																		"id": 3576,
																		"indexExpression": {
																			"id": 3575,
																			"name": "contractAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3544,
																			"src": "4909:15:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4902:23:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																		}
																	},
																	"id": 3578,
																	"indexExpression": {
																		"id": 3577,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3551,
																		"src": "4926:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4902:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																		"typeString": "struct NFTMarketplace.NFTlist storage ref"
																	}
																},
																"id": 3579,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4935:6:17",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3309,
																"src": "4902:39:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 3580,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4945:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4949:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4945:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4902:53:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207468652053656c6c6572",
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4957:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb4ae68fd82aad3273b6e6f859ee08040821d0ef6a6b11ab6713d6ae053aeb7",
																"typeString": "literal_string \"Not the Seller\""
															},
															"value": "Not the Seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb4ae68fd82aad3273b6e6f859ee08040821d0ef6a6b11ab6713d6ae053aeb7",
																"typeString": "literal_string \"Not the Seller\""
															}
														],
														"id": 3573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4894:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4894:80:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "4894:80:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3587,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4992:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4996:5:17",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4992:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 3589,
																						"name": "_items",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3361,
																						"src": "5007:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																							"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																						}
																					},
																					"id": 3591,
																					"indexExpression": {
																						"id": 3590,
																						"name": "contractAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3544,
																						"src": "5014:15:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5007:23:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																					}
																				},
																				"id": 3593,
																				"indexExpression": {
																					"id": 3592,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3551,
																					"src": "5031:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5007:32:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																					"typeString": "struct NFTMarketplace.NFTlist storage ref"
																				}
																			},
																			"id": 3594,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5040:5:17",
																			"memberName": "price",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3313,
																			"src": "5007:38:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 3595,
																			"name": "memberPerAgeCal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3558,
																			"src": "5048:15:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5007:56:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5006:58:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:72:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207072696365",
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5066:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bc50a72ea0d4ce02c3dc44dccae2f0a8d893bf130dff93bc3a242cb2f0b1fa0",
																"typeString": "literal_string \"Not enough price\""
															},
															"value": "Not enough price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bc50a72ea0d4ce02c3dc44dccae2f0a8d893bf130dff93bc3a242cb2f0b1fa0",
																"typeString": "literal_string \"Not enough price\""
															}
														],
														"id": 3586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4984:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4984:101:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "4984:101:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3608,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5140:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 3607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5132:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5132:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3610,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5146:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5150:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5146:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3612,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3551,
															"src": "5157:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3603,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "5102:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3602,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5095:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1325_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 3604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1325",
																"typeString": "contract ERC721"
															}
														},
														"id": 3605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5119:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 633,
														"src": "5095:36:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:70:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3614,
												"nodeType": "ExpressionStatement",
												"src": "5095:70:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3615,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "5414:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 3617,
																"indexExpression": {
																	"id": 3616,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "5421:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5414:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 3619,
															"indexExpression": {
																"id": 3618,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3551,
																"src": "5438:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5414:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 3620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5447:5:17",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3315,
														"src": "5414:38:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5456:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5414:43:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3656,
												"nodeType": "IfStatement",
												"src": "5411:302:17",
												"trueBody": {
													"id": 3655,
													"nodeType": "Block",
													"src": "5458:255:17",
													"statements": [
														{
															"expression": {
																"id": 3635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3623,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5476:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3626,
																			"indexExpression": {
																				"id": 3624,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5483:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5476:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3627,
																		"indexExpression": {
																			"id": 3625,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5500:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5476:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3628,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5509:6:17",
																	"memberName": "artist",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3319,
																	"src": "5476:39:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3629,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5517:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3631,
																			"indexExpression": {
																				"id": 3630,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5524:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5517:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3633,
																		"indexExpression": {
																			"id": 3632,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5541:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5517:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3634,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5550:6:17",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3309,
																	"src": "5517:39:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5476:80:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3636,
															"nodeType": "ExpressionStatement",
															"src": "5476:80:17"
														},
														{
															"expression": {
																"id": 3644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3637,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5574:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3640,
																			"indexExpression": {
																				"id": 3638,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5581:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5574:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3641,
																		"indexExpression": {
																			"id": 3639,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5598:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5574:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3642,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5607:15:17",
																	"memberName": "artistFeePerAge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3321,
																	"src": "5574:48:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3835",
																	"id": 3643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5625:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_85_by_1",
																		"typeString": "int_const 85"
																	},
																	"value": "85"
																},
																"src": "5574:53:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3645,
															"nodeType": "ExpressionStatement",
															"src": "5574:53:17"
														},
														{
															"expression": {
																"id": 3653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3646,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5645:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3649,
																			"indexExpression": {
																				"id": 3647,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5652:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5645:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3650,
																		"indexExpression": {
																			"id": 3648,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5669:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5645:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3651,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5678:14:17",
																	"memberName": "buyerFeePerAge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3325,
																	"src": "5645:47:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3135",
																	"id": 3652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5694:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"src": "5645:51:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3654,
															"nodeType": "ExpressionStatement",
															"src": "5645:51:17"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3657,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "5729:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 3659,
																"indexExpression": {
																	"id": 3658,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "5736:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5729:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 3661,
															"indexExpression": {
																"id": 3660,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3551,
																"src": "5753:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5729:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 3662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5762:5:17",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3315,
														"src": "5729:38:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5729:42:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3693,
												"nodeType": "IfStatement",
												"src": "5726:269:17",
												"trueBody": {
													"id": 3692,
													"nodeType": "Block",
													"src": "5772:223:17",
													"statements": [
														{
															"expression": {
																"id": 3672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3665,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5791:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3668,
																			"indexExpression": {
																				"id": 3666,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5798:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5791:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3669,
																		"indexExpression": {
																			"id": 3667,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5815:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5791:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3670,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5824:15:17",
																	"memberName": "artistFeePerAge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3321,
																	"src": "5791:48:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "35",
																	"id": 3671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5842:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "5791:52:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3673,
															"nodeType": "ExpressionStatement",
															"src": "5791:52:17"
														},
														{
															"expression": {
																"id": 3681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3674,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5861:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3677,
																			"indexExpression": {
																				"id": 3675,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5868:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5861:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3678,
																		"indexExpression": {
																			"id": 3676,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5885:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5861:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3679,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5894:15:17",
																	"memberName": "sellerFeePerAge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3323,
																	"src": "5861:48:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3935",
																	"id": 3680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5910:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_95_by_1",
																		"typeString": "int_const 95"
																	},
																	"value": "95"
																},
																"src": "5861:51:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3682,
															"nodeType": "ExpressionStatement",
															"src": "5861:51:17"
														},
														{
															"expression": {
																"id": 3690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3683,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "5930:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3686,
																			"indexExpression": {
																				"id": 3684,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "5937:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5930:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3687,
																		"indexExpression": {
																			"id": 3685,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "5954:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5930:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3688,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5963:14:17",
																	"memberName": "buyerFeePerAge",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3325,
																	"src": "5930:47:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "35",
																	"id": 3689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5979:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "5930:50:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3691,
															"nodeType": "ExpressionStatement",
															"src": "5930:50:17"
														}
													]
												}
											},
											{
												"assignments": [
													3695
												],
												"declarations": [
													{
														"constant": false,
														"id": 3695,
														"mutability": "mutable",
														"name": "buyerFeeCul",
														"nameLocation": "6018:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "6013:16:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3694,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6013:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3713,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3696,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "6034:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3701,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3697,
																						"name": "Index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3366,
																						"src": "6041:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																						}
																					},
																					"id": 3699,
																					"indexExpression": {
																						"id": 3698,
																						"name": "listIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3537,
																						"src": "6047:9:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6041:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																						"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																					}
																				},
																				"id": 3700,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6058:15:17",
																				"memberName": "contractAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3328,
																				"src": "6041:32:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6034:40:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3706,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3702,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "6075:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 3704,
																				"indexExpression": {
																					"id": 3703,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3537,
																					"src": "6081:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6075:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 3705,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6092:7:17",
																			"memberName": "TokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3330,
																			"src": "6075:24:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6034:66:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3707,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6101:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3313,
																	"src": "6034:72:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3708,
																	"name": "buyerFeePerAge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3243,
																	"src": "6109:14:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6034:89:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3710,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6033:91:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 3711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6127:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "6033:98:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6013:118:17"
											},
											{
												"assignments": [
													3715
												],
												"declarations": [
													{
														"constant": false,
														"id": 3715,
														"mutability": "mutable",
														"name": "sellerFeeCul",
														"nameLocation": "6146:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "6141:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3714,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6141:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3733,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3716,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "6162:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3721,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3717,
																						"name": "Index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3366,
																						"src": "6169:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																						}
																					},
																					"id": 3719,
																					"indexExpression": {
																						"id": 3718,
																						"name": "listIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3537,
																						"src": "6175:9:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6169:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																						"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																					}
																				},
																				"id": 3720,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6186:15:17",
																				"memberName": "contractAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3328,
																				"src": "6169:32:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6162:40:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3726,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3722,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "6203:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 3724,
																				"indexExpression": {
																					"id": 3723,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3537,
																					"src": "6209:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6203:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 3725,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6220:7:17",
																			"memberName": "TokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3330,
																			"src": "6203:24:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6162:66:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3727,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6229:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3313,
																	"src": "6162:72:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3728,
																	"name": "sellerFeePerAge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3241,
																	"src": "6237:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6162:90:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3730,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6161:92:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 3731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6256:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "6161:99:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6141:119:17"
											},
											{
												"assignments": [
													3735
												],
												"declarations": [
													{
														"constant": false,
														"id": 3735,
														"mutability": "mutable",
														"name": "artistFeePer",
														"nameLocation": "6275:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "6270:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3734,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6270:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3748,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 3736,
																"name": "_items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3361,
																"src": "6290:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																}
															},
															"id": 3741,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3737,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "6297:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 3739,
																	"indexExpression": {
																		"id": 3738,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3537,
																		"src": "6303:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6297:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 3740,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6314:15:17",
																"memberName": "contractAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3328,
																"src": "6297:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6290:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
															}
														},
														"id": 3746,
														"indexExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3742,
																	"name": "Index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3366,
																	"src": "6331:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																	}
																},
																"id": 3744,
																"indexExpression": {
																	"id": 3743,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3537,
																	"src": "6337:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6331:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																	"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																}
															},
															"id": 3745,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6348:7:17",
															"memberName": "TokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3330,
															"src": "6331:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6290:66:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
															"typeString": "struct NFTMarketplace.NFTlist storage ref"
														}
													},
													"id": 3747,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6357:15:17",
													"memberName": "artistFeePerAge",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3321,
													"src": "6290:82:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6270:102:17"
											},
											{
												"assignments": [
													3750
												],
												"declarations": [
													{
														"constant": false,
														"id": 3750,
														"mutability": "mutable",
														"name": "artistFee",
														"nameLocation": "6387:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "6382:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3749,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6382:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3762,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3751,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "6400:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3753,
																			"indexExpression": {
																				"id": 3752,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "6407:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6400:23:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3755,
																		"indexExpression": {
																			"id": 3754,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3551,
																			"src": "6424:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6400:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3756,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6433:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3313,
																	"src": "6400:38:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3757,
																	"name": "artistFeePer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3735,
																	"src": "6441:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6400:53:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3759,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6399:55:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6457:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6399:61:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6382:78:17"
											},
											{
												"assignments": [
													3764
												],
												"declarations": [
													{
														"constant": false,
														"id": 3764,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "6475:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 3914,
														"src": "6470:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3763,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6470:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3778,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3765,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "6490:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 3767,
																"indexExpression": {
																	"id": 3766,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "6497:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6490:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 3769,
															"indexExpression": {
																"id": 3768,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3551,
																"src": "6514:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6490:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 3770,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6523:5:17",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3313,
														"src": "6490:38:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3771,
																		"name": "artistFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3750,
																		"src": "6532:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3772,
																		"name": "buyerFeeCul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3695,
																		"src": "6544:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6532:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3774,
																	"name": "sellerFeeCul",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3715,
																	"src": "6558:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6532:38:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6531:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6490:81:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6470:101:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3795,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3764,
															"src": "6674:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3781,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "6590:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3786,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3782,
																						"name": "Index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3366,
																						"src": "6597:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																						}
																					},
																					"id": 3784,
																					"indexExpression": {
																						"id": 3783,
																						"name": "listIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3537,
																						"src": "6603:9:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6597:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																						"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																					}
																				},
																				"id": 3785,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6614:15:17",
																				"memberName": "contractAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3328,
																				"src": "6597:32:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6590:40:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3791,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3787,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "6631:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 3789,
																				"indexExpression": {
																					"id": 3788,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3537,
																					"src": "6637:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6631:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 3790,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6648:7:17",
																			"memberName": "TokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3330,
																			"src": "6631:24:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6590:66:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3792,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6657:6:17",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3309,
																	"src": "6590:73:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6582:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3779,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6582:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6582:82:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6665:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6582:91:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6582:105:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3797,
												"nodeType": "ExpressionStatement",
												"src": "6582:105:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3814,
															"name": "artistFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3750,
															"src": "6790:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3800,
																				"name": "_items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3361,
																				"src": "6706:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																				}
																			},
																			"id": 3805,
																			"indexExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3801,
																						"name": "Index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3366,
																						"src": "6713:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																							"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																						}
																					},
																					"id": 3803,
																					"indexExpression": {
																						"id": 3802,
																						"name": "listIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3537,
																						"src": "6719:9:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6713:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																						"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																					}
																				},
																				"id": 3804,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6730:15:17",
																				"memberName": "contractAddress",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3328,
																				"src": "6713:32:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6706:40:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																			}
																		},
																		"id": 3810,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3806,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "6747:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 3808,
																				"indexExpression": {
																					"id": 3807,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3537,
																					"src": "6753:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6747:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 3809,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6764:7:17",
																			"memberName": "TokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3330,
																			"src": "6747:24:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6706:66:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																			"typeString": "struct NFTMarketplace.NFTlist storage ref"
																		}
																	},
																	"id": 3811,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6773:6:17",
																	"memberName": "artist",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3319,
																	"src": "6706:73:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6697:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6697:9:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6697:83:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6781:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6697:92:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6697:103:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3816,
												"nodeType": "ExpressionStatement",
												"src": "6697:103:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3823,
															"name": "buyerFeeCul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3695,
															"src": "6836:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3819,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "6818:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6818:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6810:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6810:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6810:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6827:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6810:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6810:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3825,
												"nodeType": "ExpressionStatement",
												"src": "6810:38:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3832,
															"name": "memberPerAgeCal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3558,
															"src": "6884:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3828,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "6866:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6866:7:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6858:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6858:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6858:16:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6875:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6858:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3834,
												"nodeType": "ExpressionStatement",
												"src": "6858:42:17"
											},
											{
												"expression": {
													"id": 3842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3835,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "6910:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 3838,
																"indexExpression": {
																	"id": 3836,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "6917:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6910:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 3839,
															"indexExpression": {
																"id": 3837,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3551,
																"src": "6934:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6910:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 3840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6943:6:17",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3317,
														"src": "6910:39:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6952:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6910:47:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3843,
												"nodeType": "ExpressionStatement",
												"src": "6910:47:17"
											},
											{
												"expression": {
													"id": 3850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7024:40:17",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3844,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "7024:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 3847,
																"indexExpression": {
																	"id": 3845,
																	"name": "contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3544,
																	"src": "7031:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7024:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 3848,
															"indexExpression": {
																"id": 3846,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3551,
																"src": "7048:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7024:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 3849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7057:5:17",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3315,
														"src": "7024:38:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3851,
												"nodeType": "ExpressionStatement",
												"src": "7024:40:17"
											},
											{
												"expression": {
													"id": 3860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3852,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "7075:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 3854,
														"indexExpression": {
															"id": 3853,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3537,
															"src": "7081:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7075:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3855,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "7093:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 3859,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3856,
																	"name": "_itemIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3232,
																	"src": "7099:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3857,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7108:7:17",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "7099:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7099:18:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7093:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"src": "7075:43:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
														"typeString": "struct NFTMarketplace.tokenAddress storage ref"
													}
												},
												"id": 3861,
												"nodeType": "ExpressionStatement",
												"src": "7075:43:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3862,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "7128:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7137:9:17",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1704,
														"src": "7128:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1650_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3866,
												"nodeType": "ExpressionStatement",
												"src": "7128:20:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3868,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "7167:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 3873,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3869,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "7174:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 3871,
																			"indexExpression": {
																				"id": 3870,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3537,
																				"src": "7180:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7174:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 3872,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7191:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "7174:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7167:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 3878,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3874,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "7208:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 3876,
																		"indexExpression": {
																			"id": 3875,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3537,
																			"src": "7214:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7208:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 3877,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7225:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "7208:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7167:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 3879,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7234:6:17",
															"memberName": "artist",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3319,
															"src": "7167:73:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3880,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "7241:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 3885,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3881,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "7248:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 3883,
																			"indexExpression": {
																				"id": 3882,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3537,
																				"src": "7254:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7248:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 3884,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7265:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "7248:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7241:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 3890,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3886,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "7282:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 3888,
																		"indexExpression": {
																			"id": 3887,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3537,
																			"src": "7288:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7282:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 3889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7299:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "7282:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7241:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 3891,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7308:15:17",
															"memberName": "artistFeePerAge",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3321,
															"src": "7241:82:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3867,
														"name": "Fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3426,
														"src": "7163:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7163:161:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3893,
												"nodeType": "EmitStatement",
												"src": "7158:166:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3895,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "7347:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 3897,
																	"indexExpression": {
																		"id": 3896,
																		"name": "contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3544,
																		"src": "7354:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7347:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 3899,
																"indexExpression": {
																	"id": 3898,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3551,
																	"src": "7371:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7347:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 3900,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7380:7:17",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3307,
															"src": "7347:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3901,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "7398:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 3903,
																	"indexExpression": {
																		"id": 3902,
																		"name": "contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3544,
																		"src": "7405:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7398:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 3905,
																"indexExpression": {
																	"id": 3904,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3551,
																	"src": "7422:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7398:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 3906,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7431:6:17",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3309,
															"src": "7398:39:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3907,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7447:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7451:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7447:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3909,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3764,
															"src": "7459:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3910,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7473:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7479:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7473:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3894,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3420,
														"src": "7339:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256)"
														}
													},
													"id": 3912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7339:150:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3913,
												"nodeType": "EmitStatement",
												"src": "7334:155:17"
											}
										]
									},
									"functionSelector": "62590604",
									"id": 3915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Buy",
									"nameLocation": "4609:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "4618:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3915,
												"src": "4613:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4613:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "4640:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3915,
												"src": "4629:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_memberShip_$3305",
													"typeString": "enum NFTMarketplace.memberShip"
												},
												"typeName": {
													"id": 3539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3538,
														"name": "memberShip",
														"nameLocations": [
															"4629:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3305,
														"src": "4629:10:17"
													},
													"referencedDeclaration": 3305,
													"src": "4629:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_memberShip_$3305",
														"typeString": "enum NFTMarketplace.memberShip"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4612:35:17"
									},
									"returnParameters": {
										"id": 3542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4663:0:17"
									},
									"scope": 4345,
									"src": "4600:2896:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4032,
										"nodeType": "Block",
										"src": "7656:769:17",
										"statements": [
											{
												"assignments": [
													3929
												],
												"declarations": [
													{
														"constant": false,
														"id": 3929,
														"mutability": "mutable",
														"name": "tokenIdOne",
														"nameLocation": "7681:10:17",
														"nodeType": "VariableDeclaration",
														"scope": 4032,
														"src": "7676:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3928,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7676:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3936,
												"initialValue": {
													"arguments": [
														{
															"id": 3934,
															"name": "userAddrr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "7724:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3931,
																	"name": "FatCats",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3248,
																	"src": "7705:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3930,
																"name": "GetBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3182,
																"src": "7694:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GetBalance_$3182_$",
																	"typeString": "type(contract GetBalance)"
																}
															},
															"id": 3932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7694:19:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GetBalance_$3182",
																"typeString": "contract GetBalance"
															}
														},
														"id": 3933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7714:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3181,
														"src": "7694:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7694:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7676:58:17"
											},
											{
												"assignments": [
													3938
												],
												"declarations": [
													{
														"constant": false,
														"id": 3938,
														"mutability": "mutable",
														"name": "tokenIdTwo",
														"nameLocation": "7749:10:17",
														"nodeType": "VariableDeclaration",
														"scope": 4032,
														"src": "7744:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3937,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7744:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3945,
												"initialValue": {
													"arguments": [
														{
															"id": 3943,
															"name": "userAddrr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "7796:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3940,
																	"name": "FatLeopards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3251,
																	"src": "7773:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3939,
																"name": "GetBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3182,
																"src": "7762:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GetBalance_$3182_$",
																	"typeString": "type(contract GetBalance)"
																}
															},
															"id": 3941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7762:23:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GetBalance_$3182",
																"typeString": "contract GetBalance"
															}
														},
														"id": 3942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7786:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3181,
														"src": "7762:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7744:62:17"
											},
											{
												"assignments": [
													3947
												],
												"declarations": [
													{
														"constant": false,
														"id": 3947,
														"mutability": "mutable",
														"name": "tokenIdThree",
														"nameLocation": "7821:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 4032,
														"src": "7816:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3946,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7816:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3954,
												"initialValue": {
													"arguments": [
														{
															"id": 3952,
															"name": "userAddrr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "7868:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3949,
																	"name": "FatTigers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3254,
																	"src": "7847:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3948,
																"name": "GetBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3182,
																"src": "7836:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GetBalance_$3182_$",
																	"typeString": "type(contract GetBalance)"
																}
															},
															"id": 3950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7836:21:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GetBalance_$3182",
																"typeString": "contract GetBalance"
															}
														},
														"id": 3951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7858:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3181,
														"src": "7836:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7816:62:17"
											},
											{
												"assignments": [
													3956
												],
												"declarations": [
													{
														"constant": false,
														"id": 3956,
														"mutability": "mutable",
														"name": "tokenIdFour",
														"nameLocation": "7893:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 4032,
														"src": "7888:16:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3955,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7888:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3963,
												"initialValue": {
													"arguments": [
														{
															"id": 3961,
															"name": "userAddrr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3917,
															"src": "7940:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3958,
																	"name": "FatKittens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3257,
																	"src": "7918:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3957,
																"name": "GetBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3182,
																"src": "7907:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GetBalance_$3182_$",
																	"typeString": "type(contract GetBalance)"
																}
															},
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7907:22:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GetBalance_$3182",
																"typeString": "contract GetBalance"
															}
														},
														"id": 3960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7930:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3181,
														"src": "7907:32:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:43:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7888:62:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3964,
																	"name": "tokenIdOne",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3929,
																	"src": "7973:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7986:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7973:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3967,
																	"name": "tokenIdTwo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3938,
																	"src": "7991:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8004:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7991:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7973:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3971,
																"name": "tokenIdThree",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3947,
																"src": "8009:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8024:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8009:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7973:52:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3975,
															"name": "tokenIdFour",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3956,
															"src": "8029:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8043:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8029:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7973:71:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3986,
																	"name": "tokenIdTwo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3938,
																	"src": "8113:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8126:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8113:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3989,
																	"name": "tokenIdThree",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3947,
																	"src": "8131:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8146:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8131:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8113:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3993,
																"name": "tokenIdFour",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3956,
																"src": "8151:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8165:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8151:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8113:53:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4004,
																	"name": "tokenIdThree",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3947,
																	"src": "8236:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8251:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8236:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4007,
																	"name": "tokenIdFour",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3956,
																	"src": "8256:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8270:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8256:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8236:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4018,
																	"name": "tokenIdFour",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3956,
																	"src": "8342:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 4019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8356:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8342:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4028,
															"nodeType": "IfStatement",
															"src": "8338:81:17",
															"trueBody": {
																"id": 4027,
																"nodeType": "Block",
																"src": "8359:60:17",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "66616c7365",
																					"id": 4021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8382:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "66616c7365",
																					"id": 4022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8389:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "66616c7365",
																					"id": 4023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8396:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "74727565",
																					"id": 4024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8403:4:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				}
																			],
																			"id": 4025,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8380:28:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
																				"typeString": "tuple(bool,bool,bool,bool)"
																			}
																		},
																		"functionReturnParameters": 3927,
																		"id": 4026,
																		"nodeType": "Return",
																		"src": "8373:35:17"
																	}
																]
															}
														},
														"id": 4029,
														"nodeType": "IfStatement",
														"src": "8232:187:17",
														"trueBody": {
															"id": 4017,
															"nodeType": "Block",
															"src": "8273:59:17",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"hexValue": "66616c7365",
																				"id": 4011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8296:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 4012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8303:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			{
																				"hexValue": "74727565",
																				"id": 4013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8310:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			{
																				"hexValue": "74727565",
																				"id": 4014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"id": 4015,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8294:27:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
																			"typeString": "tuple(bool,bool,bool,bool)"
																		}
																	},
																	"functionReturnParameters": 3927,
																	"id": 4016,
																	"nodeType": "Return",
																	"src": "8287:34:17"
																}
															]
														}
													},
													"id": 4030,
													"nodeType": "IfStatement",
													"src": "8109:310:17",
													"trueBody": {
														"id": 4003,
														"nodeType": "Block",
														"src": "8168:58:17",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"hexValue": "66616c7365",
																			"id": 3997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8191:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		{
																			"hexValue": "74727565",
																			"id": 3998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8198:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"hexValue": "74727565",
																			"id": 3999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8204:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"hexValue": "74727565",
																			"id": 4000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8210:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"id": 4001,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8189:26:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
																		"typeString": "tuple(bool,bool,bool,bool)"
																	}
																},
																"functionReturnParameters": 3927,
																"id": 4002,
																"nodeType": "Return",
																"src": "8182:33:17"
															}
														]
													}
												},
												"id": 4031,
												"nodeType": "IfStatement",
												"src": "7969:450:17",
												"trueBody": {
													"id": 3985,
													"nodeType": "Block",
													"src": "8046:57:17",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 3979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8069:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8075:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8081:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8087:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 3983,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8067:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
																	"typeString": "tuple(bool,bool,bool,bool)"
																}
															},
															"functionReturnParameters": 3927,
															"id": 3984,
															"nodeType": "Return",
															"src": "8060:32:17"
														}
													]
												}
											}
										]
									},
									"functionSelector": "03147f39",
									"id": 4033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkBalanceOf",
									"nameLocation": "7511:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3917,
												"mutability": "mutable",
												"name": "userAddrr",
												"nameLocation": "7535:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 4033,
												"src": "7527:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7527:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7526:19:17"
									},
									"returnParameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3920,
												"mutability": "mutable",
												"name": "isGoldMember",
												"nameLocation": "7578:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 4033,
												"src": "7573:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7573:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3922,
												"mutability": "mutable",
												"name": "isSilverMember",
												"nameLocation": "7597:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 4033,
												"src": "7592:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7592:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3924,
												"mutability": "mutable",
												"name": "isBronzeMember",
												"nameLocation": "7618:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 4033,
												"src": "7613:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7613:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "isStandardMember",
												"nameLocation": "7639:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 4033,
												"src": "7634:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7634:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7566:90:17"
									},
									"scope": 4345,
									"src": "7502:923:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4090,
										"nodeType": "Block",
										"src": "8485:341:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4041,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "8504:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4046,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4042,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "8511:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4044,
																			"indexExpression": {
																				"id": 4043,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "8517:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8511:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4045,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8528:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "8511:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8504:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4051,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4047,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "8545:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4049,
																		"indexExpression": {
																			"id": 4048,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4035,
																			"src": "8551:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8545:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4050,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8562:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "8545:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8504:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4052,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8571:6:17",
															"memberName": "listed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3317,
															"src": "8504:73:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204974656d206e6f74206c697374656420",
															"id": 4053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8578:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a",
																"typeString": "literal_string \"This Item not listed \""
															},
															"value": "This Item not listed "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a",
																"typeString": "literal_string \"This Item not listed \""
															}
														],
														"id": 4040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8496:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8496:106:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4055,
												"nodeType": "ExpressionStatement",
												"src": "8496:106:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4057,
																			"name": "_items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3361,
																			"src": "8620:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																			}
																		},
																		"id": 4062,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4058,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "8627:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 4060,
																				"indexExpression": {
																					"id": 4059,
																					"name": "listIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4035,
																					"src": "8633:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8627:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 4061,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8644:15:17",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3328,
																			"src": "8627:32:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8620:40:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																		}
																	},
																	"id": 4067,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4063,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "8661:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4065,
																			"indexExpression": {
																				"id": 4064,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4035,
																				"src": "8667:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8661:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4066,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8678:7:17",
																		"memberName": "TokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3330,
																		"src": "8661:24:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8620:67:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																		"typeString": "struct NFTMarketplace.NFTlist storage ref"
																	}
																},
																"id": 4068,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8688:6:17",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3309,
																"src": "8620:74:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 4069,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8698:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8702:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8698:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8620:88:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74204f776e6572",
															"id": 4072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8709:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a92904ff54443fb52d8ac13713ea139ff614ee79b65883763b05d732a0ae5363",
																"typeString": "literal_string \"You are not Owner\""
															},
															"value": "You are not Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a92904ff54443fb52d8ac13713ea139ff614ee79b65883763b05d732a0ae5363",
																"typeString": "literal_string \"You are not Owner\""
															}
														],
														"id": 4056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:117:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4074,
												"nodeType": "ExpressionStatement",
												"src": "8612:117:17"
											},
											{
												"expression": {
													"id": 4088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4075,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "8739:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 4084,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4076,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "8746:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4078,
																		"indexExpression": {
																			"id": 4077,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4035,
																			"src": "8752:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8746:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4079,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8763:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "8746:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8739:40:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 4085,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4080,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "8780:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 4082,
																	"indexExpression": {
																		"id": 4081,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4035,
																		"src": "8786:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8780:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 4083,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8797:7:17",
																"memberName": "TokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3330,
																"src": "8780:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8739:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 4086,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8806:5:17",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3313,
														"src": "8739:72:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4087,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4037,
														"src": "8814:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8739:80:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4089,
												"nodeType": "ExpressionStatement",
												"src": "8739:80:17"
											}
										]
									},
									"functionSelector": "6081a0dd",
									"id": 4091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "editList",
									"nameLocation": "8441:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4035,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "8455:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "8450:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4034,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8450:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4037,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "8471:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "8466:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4036,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8466:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8449:28:17"
									},
									"returnParameters": {
										"id": 4039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8485:0:17"
									},
									"scope": 4345,
									"src": "8432:394:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4253,
										"nodeType": "Block",
										"src": "8882:1012:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4097,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "8901:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4102,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4098,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "8908:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4100,
																			"indexExpression": {
																				"id": 4099,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4093,
																				"src": "8914:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8908:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4101,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8925:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "8908:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8901:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4107,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4103,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "8942:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4105,
																		"indexExpression": {
																			"id": 4104,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "8948:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8942:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8959:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "8942:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8901:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4108,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8968:6:17",
															"memberName": "listed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3317,
															"src": "8901:73:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204974656d206e6f74206c697374656420",
															"id": 4109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8975:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a",
																"typeString": "literal_string \"This Item not listed \""
															},
															"value": "This Item not listed "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77cc7c32f038212fdc9bdd7f9bed48ce100a2d09380335e0741173e1c469628a",
																"typeString": "literal_string \"This Item not listed \""
															}
														],
														"id": 4096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8893:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8893:106:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4111,
												"nodeType": "ExpressionStatement",
												"src": "8893:106:17"
											},
											{
												"expression": {
													"id": 4136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4112,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "9009:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 4121,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4113,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9016:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4115,
																		"indexExpression": {
																			"id": 4114,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9022:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9016:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4116,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9033:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "9016:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9009:40:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 4122,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4117,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "9050:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 4119,
																	"indexExpression": {
																		"id": 4118,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4093,
																		"src": "9056:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9050:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 4120,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9067:7:17",
																"memberName": "TokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3330,
																"src": "9050:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9009:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 4123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9076:5:17",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3311,
														"src": "9009:72:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4124,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "9083:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 4129,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4125,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9090:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4127,
																		"indexExpression": {
																			"id": 4126,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9096:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9090:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9107:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "9090:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9083:40:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 4134,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4130,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "9124:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 4132,
																	"indexExpression": {
																		"id": 4131,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4093,
																		"src": "9130:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9124:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 4133,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9141:7:17",
																"memberName": "TokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3330,
																"src": "9124:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9083:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 4135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9150:6:17",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3309,
														"src": "9083:73:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9009:147:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4137,
												"nodeType": "ExpressionStatement",
												"src": "9009:147:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4147,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9228:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarketplace_$4345",
																		"typeString": "contract NFTMarketplace"
																	}
																],
																"id": 4146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 4148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9220:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4149,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "9234:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4154,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4150,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "9241:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4152,
																			"indexExpression": {
																				"id": 4151,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4093,
																				"src": "9247:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9241:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4153,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9258:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "9241:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9234:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4159,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4155,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9275:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4157,
																		"indexExpression": {
																			"id": 4156,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9281:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9275:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4158,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9292:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "9275:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9234:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4160,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9301:6:17",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3309,
															"src": "9234:73:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4161,
																	"name": "Index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3366,
																	"src": "9308:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																	}
																},
																"id": 4163,
																"indexExpression": {
																	"id": 4162,
																	"name": "listIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4093,
																	"src": "9314:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9308:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																	"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																}
															},
															"id": 4164,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9325:7:17",
															"memberName": "TokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3330,
															"src": "9308:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 4139,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9173:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4141,
																		"indexExpression": {
																			"id": 4140,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9179:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9173:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4142,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9190:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "9173:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4138,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "9166:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1325_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9166:40:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1325",
																"typeString": "contract ERC721"
															}
														},
														"id": 4144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9207:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 633,
														"src": "9166:53:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9166:167:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4166,
												"nodeType": "ExpressionStatement",
												"src": "9166:167:17"
											},
											{
												"expression": {
													"id": 4180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4167,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "9343:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 4176,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4168,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9350:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4170,
																		"indexExpression": {
																			"id": 4169,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9356:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9350:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4171,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9367:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "9350:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9343:40:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 4177,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4172,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "9384:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 4174,
																	"indexExpression": {
																		"id": 4173,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4093,
																		"src": "9390:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9384:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 4175,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9401:7:17",
																"memberName": "TokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3330,
																"src": "9384:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9343:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 4178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9410:6:17",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3317,
														"src": "9343:73:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 4179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9419:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9343:81:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4181,
												"nodeType": "ExpressionStatement",
												"src": "9343:81:17"
											},
											{
												"expression": {
													"id": 4195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 4182,
																	"name": "_items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3361,
																	"src": "9434:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																	}
																},
																"id": 4191,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4183,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9441:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4185,
																		"indexExpression": {
																			"id": 4184,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9447:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9441:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9458:15:17",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3328,
																	"src": "9441:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9434:40:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																}
															},
															"id": 4192,
															"indexExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 4187,
																		"name": "Index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "9475:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																		}
																	},
																	"id": 4189,
																	"indexExpression": {
																		"id": 4188,
																		"name": "listIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4093,
																		"src": "9481:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9475:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																		"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																	}
																},
																"id": 4190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9492:7:17",
																"memberName": "TokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3330,
																"src": "9475:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9434:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																"typeString": "struct NFTMarketplace.NFTlist storage ref"
															}
														},
														"id": 4193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9501:5:17",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3315,
														"src": "9434:72:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4194,
														"name": "listIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4093,
														"src": "9509:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9434:84:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4196,
												"nodeType": "ExpressionStatement",
												"src": "9434:84:17"
											},
											{
												"expression": {
													"id": 4205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4197,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "9528:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 4199,
														"indexExpression": {
															"id": 4198,
															"name": "listIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4093,
															"src": "9534:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9528:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 4200,
															"name": "Index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "9547:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
															}
														},
														"id": 4204,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4201,
																	"name": "_itemIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3232,
																	"src": "9553:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4202,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9562:7:17",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "9553:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9553:18:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9547:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
															"typeString": "struct NFTMarketplace.tokenAddress storage ref"
														}
													},
													"src": "9528:44:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
														"typeString": "struct NFTMarketplace.tokenAddress storage ref"
													}
												},
												"id": 4206,
												"nodeType": "ExpressionStatement",
												"src": "9528:44:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4207,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "9582:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9591:9:17",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1704,
														"src": "9582:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1650_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9582:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4211,
												"nodeType": "ExpressionStatement",
												"src": "9582:20:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4213,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "9627:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4218,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4214,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "9634:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4216,
																			"indexExpression": {
																				"id": 4215,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4093,
																				"src": "9640:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9634:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4217,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9651:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "9634:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9627:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4223,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4219,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9668:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4221,
																		"indexExpression": {
																			"id": 4220,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9674:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9668:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4222,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9685:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "9668:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9627:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9694:7:17",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3307,
															"src": "9627:74:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4225,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "9711:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4230,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4226,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "9718:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4228,
																			"indexExpression": {
																				"id": 4227,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4093,
																				"src": "9724:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9718:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4229,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9735:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "9718:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9711:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4235,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4231,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9752:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4233,
																		"indexExpression": {
																			"id": 4232,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9758:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9752:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4234,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9769:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "9752:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9711:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4236,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9778:6:17",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3309,
															"src": "9711:73:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 4237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9794:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9798:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9794:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4239,
																		"name": "_items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3361,
																		"src": "9814:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																		}
																	},
																	"id": 4244,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4240,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "9821:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4242,
																			"indexExpression": {
																				"id": 4241,
																				"name": "listIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4093,
																				"src": "9827:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9821:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4243,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9838:15:17",
																		"memberName": "contractAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3328,
																		"src": "9821:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9814:40:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																	}
																},
																"id": 4249,
																"indexExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 4245,
																			"name": "Index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3366,
																			"src": "9855:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																			}
																		},
																		"id": 4247,
																		"indexExpression": {
																			"id": 4246,
																			"name": "listIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4093,
																			"src": "9861:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9855:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																			"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																		}
																	},
																	"id": 4248,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9872:7:17",
																	"memberName": "TokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3330,
																	"src": "9855:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9814:66:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																	"typeString": "struct NFTMarketplace.NFTlist storage ref"
																}
															},
															"id": 4250,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9881:5:17",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3313,
															"src": "9814:72:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4212,
														"name": "NFTCancel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3436,
														"src": "9617:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256)"
														}
													},
													"id": 4251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9617:270:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4252,
												"nodeType": "EmitStatement",
												"src": "9612:275:17"
											}
										]
									},
									"functionSelector": "9f5e6fd9",
									"id": 4254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CancleListForSale",
									"nameLocation": "8841:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4093,
												"mutability": "mutable",
												"name": "listIndex",
												"nameLocation": "8864:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 4254,
												"src": "8859:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4092,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8859:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8858:16:17"
									},
									"returnParameters": {
										"id": 4095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8882:0:17"
									},
									"scope": 4345,
									"src": "8832:1062:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4343,
										"nodeType": "Block",
										"src": "9976:508:17",
										"statements": [
											{
												"assignments": [
													4262
												],
												"declarations": [
													{
														"constant": false,
														"id": 4262,
														"mutability": "mutable",
														"name": "listNftCount",
														"nameLocation": "9988:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 4343,
														"src": "9983:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4261,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9983:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4264,
												"initialValue": {
													"hexValue": "30",
													"id": 4263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10003:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9983:21:17"
											},
											{
												"assignments": [
													4269
												],
												"declarations": [
													{
														"constant": false,
														"id": 4269,
														"mutability": "mutable",
														"name": "getNFTtokenid",
														"nameLocation": "10036:13:17",
														"nodeType": "VariableDeclaration",
														"scope": 4343,
														"src": "10010:39:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarketplace.ListedNftTokenId[]"
														},
														"typeName": {
															"baseType": {
																"id": 4267,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4266,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"10010:16:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3354,
																	"src": "10010:16:17"
																},
																"referencedDeclaration": 3354,
																"src": "10010:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_storage_ptr",
																	"typeString": "struct NFTMarketplace.ListedNftTokenId"
																}
															},
															"id": 4268,
															"nodeType": "ArrayTypeName",
															"src": "10010:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.ListedNftTokenId[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4278,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4274,
																	"name": "_itemIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3232,
																	"src": "10075:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4275,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10084:7:17",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1662,
																"src": "10075:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10075:18:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10052:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarketplace.ListedNftTokenId memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 4271,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 4270,
																	"name": "ListedNftTokenId",
																	"nameLocations": [
																		"10056:16:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3354,
																	"src": "10056:16:17"
																},
																"referencedDeclaration": 3354,
																"src": "10056:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_storage_ptr",
																	"typeString": "struct NFTMarketplace.ListedNftTokenId"
																}
															},
															"id": 4272,
															"nodeType": "ArrayTypeName",
															"src": "10056:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarketplace.ListedNftTokenId[]"
															}
														}
													},
													"id": 4277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10052:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.ListedNftTokenId memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10010:84:17"
											},
											{
												"body": {
													"id": 4339,
													"nodeType": "Block",
													"src": "10152:300:17",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4291,
																			"name": "_items",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3361,
																			"src": "10167:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																			}
																		},
																		"id": 4296,
																		"indexExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 4292,
																					"name": "Index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3366,
																					"src": "10174:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																					}
																				},
																				"id": 4294,
																				"indexExpression": {
																					"id": 4293,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4280,
																					"src": "10180:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10174:8:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																					"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																				}
																			},
																			"id": 4295,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10183:15:17",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3328,
																			"src": "10174:24:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10167:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																			"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																		}
																	},
																	"id": 4301,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 4297,
																				"name": "Index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3366,
																				"src": "10200:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																				}
																			},
																			"id": 4299,
																			"indexExpression": {
																				"id": 4298,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4280,
																				"src": "10206:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10200:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																				"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																			}
																		},
																		"id": 4300,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10209:7:17",
																		"memberName": "TokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3330,
																		"src": "10200:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10167:50:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																		"typeString": "struct NFTMarketplace.NFTlist storage ref"
																	}
																},
																"id": 4302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10218:6:17",
																"memberName": "listed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3317,
																"src": "10167:57:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4338,
															"nodeType": "IfStatement",
															"src": "10163:283:17",
															"trueBody": {
																"id": 4337,
																"nodeType": "Block",
																"src": "10226:220:17",
																"statements": [
																	{
																		"expression": {
																			"id": 4332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 4303,
																					"name": "getNFTtokenid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4269,
																					"src": "10240:13:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarketplace.ListedNftTokenId memory[] memory"
																					}
																				},
																				"id": 4305,
																				"indexExpression": {
																					"id": 4304,
																					"name": "listNftCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4262,
																					"src": "10254:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10240:27:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_memory_ptr",
																					"typeString": "struct NFTMarketplace.ListedNftTokenId memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"baseExpression": {
																								"id": 4307,
																								"name": "_items",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3361,
																								"src": "10287:6:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$_$",
																									"typeString": "mapping(address => mapping(uint256 => struct NFTMarketplace.NFTlist storage ref))"
																								}
																							},
																							"id": 4312,
																							"indexExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 4308,
																										"name": "Index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3366,
																										"src": "10294:5:17",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																											"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																										}
																									},
																									"id": 4310,
																									"indexExpression": {
																										"id": 4309,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4280,
																										"src": "10300:1:17",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10294:8:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																										"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																									}
																								},
																								"id": 4311,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10303:15:17",
																								"memberName": "contractAddress",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3328,
																								"src": "10294:24:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "10287:32:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTlist_$3326_storage_$",
																								"typeString": "mapping(uint256 => struct NFTMarketplace.NFTlist storage ref)"
																							}
																						},
																						"id": 4317,
																						"indexExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 4313,
																									"name": "Index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3366,
																									"src": "10320:5:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																										"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																									}
																								},
																								"id": 4315,
																								"indexExpression": {
																									"id": 4314,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4280,
																									"src": "10326:1:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10320:8:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																									"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																								}
																							},
																							"id": 4316,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10329:7:17",
																							"memberName": "TokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3330,
																							"src": "10320:16:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10287:50:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																							"typeString": "struct NFTMarketplace.NFTlist storage ref"
																						}
																					},
																					{
																						"id": 4318,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4280,
																						"src": "10338:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 4326,
																										"name": "Index",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3366,
																										"src": "10389:5:17",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																											"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																										}
																									},
																									"id": 4328,
																									"indexExpression": {
																										"id": 4327,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4280,
																										"src": "10395:1:17",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10389:8:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																										"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																									}
																								},
																								"id": 4329,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10398:7:17",
																								"memberName": "TokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3330,
																								"src": "10389:16:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 4320,
																												"name": "Index",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3366,
																												"src": "10351:5:17",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenAddress_$3331_storage_$",
																													"typeString": "mapping(uint256 => struct NFTMarketplace.tokenAddress storage ref)"
																												}
																											},
																											"id": 4322,
																											"indexExpression": {
																												"id": 4321,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4280,
																												"src": "10357:1:17",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "10351:8:17",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_tokenAddress_$3331_storage",
																												"typeString": "struct NFTMarketplace.tokenAddress storage ref"
																											}
																										},
																										"id": 4323,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10360:15:17",
																										"memberName": "contractAddress",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3328,
																										"src": "10351:24:17",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 4319,
																									"name": "IConnected",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3223,
																									"src": "10340:10:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IConnected_$3223_$",
																										"typeString": "type(contract IConnected)"
																									}
																								},
																								"id": 4324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10340:36:17",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IConnected_$3223",
																									"typeString": "contract IConnected"
																								}
																							},
																							"id": 4325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10377:11:17",
																							"memberName": "getTokenUri",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3222,
																							"src": "10340:48:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256) view external returns (string memory)"
																							}
																						},
																						"id": 4330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10340:66:17",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_struct$_NFTlist_$3326_storage",
																							"typeString": "struct NFTMarketplace.NFTlist storage ref"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 4306,
																					"name": "ListedNftTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3354,
																					"src": "10270:16:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_ListedNftTokenId_$3354_storage_ptr_$",
																						"typeString": "type(struct NFTMarketplace.ListedNftTokenId storage pointer)"
																					}
																				},
																				"id": 4331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10270:137:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_memory_ptr",
																					"typeString": "struct NFTMarketplace.ListedNftTokenId memory"
																				}
																			},
																			"src": "10240:167:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_memory_ptr",
																				"typeString": "struct NFTMarketplace.ListedNftTokenId memory"
																			}
																		},
																		"id": 4333,
																		"nodeType": "ExpressionStatement",
																		"src": "10240:167:17"
																	},
																	{
																		"expression": {
																			"id": 4335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "10421:14:17",
																			"subExpression": {
																				"id": 4334,
																				"name": "listNftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4262,
																				"src": "10421:12:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4336,
																		"nodeType": "ExpressionStatement",
																		"src": "10421:14:17"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4283,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4280,
														"src": "10122:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4284,
																"name": "_itemIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3232,
																"src": "10127:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1650_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 4285,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10136:7:17",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "10127:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 4286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10127:18:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10122:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4340,
												"initializationExpression": {
													"assignments": [
														4280
													],
													"declarations": [
														{
															"constant": false,
															"id": 4280,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10115:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 4340,
															"src": "10110:6:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4279,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10110:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 4282,
													"initialValue": {
														"hexValue": "31",
														"id": 4281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10119:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10110:10:17"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 4289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10147:3:17",
														"subExpression": {
															"id": 4288,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4280,
															"src": "10147:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4290,
													"nodeType": "ExpressionStatement",
													"src": "10147:3:17"
												},
												"nodeType": "ForStatement",
												"src": "10105:347:17"
											},
											{
												"expression": {
													"id": 4341,
													"name": "getNFTtokenid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4269,
													"src": "10464:13:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarketplace.ListedNftTokenId memory[] memory"
													}
												},
												"functionReturnParameters": 4260,
												"id": 4342,
												"nodeType": "Return",
												"src": "10457:20:17"
											}
										]
									},
									"functionSelector": "95ce4a3b",
									"id": 4344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllListedNfts",
									"nameLocation": "9909:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9925:2:17"
									},
									"returnParameters": {
										"id": 4260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4344,
												"src": "9949:25:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarketplace.ListedNftTokenId[]"
												},
												"typeName": {
													"baseType": {
														"id": 4257,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 4256,
															"name": "ListedNftTokenId",
															"nameLocations": [
																"9949:16:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3354,
															"src": "9949:16:17"
														},
														"referencedDeclaration": 3354,
														"src": "9949:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ListedNftTokenId_$3354_storage_ptr",
															"typeString": "struct NFTMarketplace.ListedNftTokenId"
														}
													},
													"id": 4258,
													"nodeType": "ArrayTypeName",
													"src": "9949:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ListedNftTokenId_$3354_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarketplace.ListedNftTokenId[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9948:27:17"
									},
									"scope": 4345,
									"src": "9900:584:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4346,
							"src": "1155:9332:17",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								3390,
								3398,
								3408,
								3420,
								3426,
								3436
							]
						}
					],
					"src": "81:10406:17"
				},
				"id": 17
			}
		}
	}
}