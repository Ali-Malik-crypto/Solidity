{
	"id": "ec64b72f6f2e3b54c4a136674793a122",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract TimeVillageToken is ERC20, ERC20Burnable, Pausable, Ownable,ReentrancyGuard {\n  AggregatorV3Interface public priceFeed;\n    using Counters for Counters.Counter;\n    Counters.Counter private numberOfTransactions;\n    using SafeERC20 for IERC20;\n    bool public IsClaim;\n    address AddminAddress;\n    address USDT;\n    address immutable UsdcContract;\n\n    struct userRecord{\n        address user;\n        uint amount;\n        uint currency;\n        uint cost;\n        bool claim;\n        currency choice;\n        \n    }\n\n    struct userDetail{\n        uint price;\n        uint amount;\n        uint time;\n        address user;\n        address contractAddress;\n        \n    }\n\n    mapping (address => mapping(uint => userRecord)) public TokenRecord;\n    mapping (address => mapping(address => userDetail)) public TokenRecords;\n    mapping (currency => uint) _currencyCoice;\n    mapping (address =>uint) public NumberOfBuying;\n    enum currency{USDT, BNB}\n\n\n    constructor(address _UsdcContract, address ownerAddress) ERC20(\"Time Village Token\", \"TVT\") Ownable(ownerAddress){\n    _mint(msg.sender, 2500000000 * 10 ** decimals());\n    // priceFeed = AggregatorV3Interface(0x5fb1616F78dA7aFC9FF79e0371741a747D2a7F22);\n    UsdcContract = _UsdcContract;\n    }\n\n    //ADMIN START\n\n    function AdminAddToken(uint _amount) public onlyOwner{\n        IERC20(address(this)).safeTransferFrom(msg.sender, address(this) ,_amount);\n    }\n\n    // END\n\n    function buyTokens(uint256 _amount,   currency choice) public nonReentrant {\n        // (, int256 answer, , , ) = priceFeed.latestRoundData();\n        uint256 currencyinUSDT = 1;\n        uint currencyinBNB = 317;\n        uint cost;\n        _currencyCoice[currency.USDT] = 0;\n        _currencyCoice[currency.BNB] = 1;\n        numberOfTransactions.increment();\n        if(_currencyCoice[choice] ==  0){ \n            cost  = (_amount* currencyinUSDT);\n        }\n\n        if(_currencyCoice[choice] ==  1){ \n            cost  = (_amount* currencyinBNB);\n        }\n        NumberOfBuying[msg.sender]++;\n        uint currentTransactionCount = NumberOfBuying[msg.sender];\n        TokenRecord[msg.sender][currentTransactionCount] = userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice);\n        // IERC20(address(this)).transfer(address(this),_amount);\n        TokenRecords[address(this)][msg.sender] = userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this));\n        IERC20(UsdcContract).safeTransferFrom(msg.sender, owner() ,cost);\n\n    }\n\n\n\n    function Claim(address owner, uint _amount) public {\n        require(TokenRecords[address(this)][owner].time + 10 <= block.timestamp, \"Current time exceed\");\n        require(TokenRecords[address(this)][owner].amount == _amount, \"Amount not match\");\n        IERC20(address(this)).transfer(owner, _amount);\n        TokenRecords[address(this)][owner].amount = 0;\n    }\n\n\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n    // function _beforeTokenTransfer(address from, address to, uint256 amount)\n    //     internal\n    //     whenNotPaused\n    //     override\n    // {\n    //     super._beforeTokenTransfer(from, to, amount);\n    // }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 348,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 449,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EQ PUSH21 0xD0F036666C1A9C4DAF464C4FDFF54A3AC1F642298F 0xBB CREATE2 DUP11 CALLDATACOPY PUSH4 0xB121A364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "751:5018:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 EQ PUSH21 0xD0F036666C1A9C4DAF464C4FDFF54A3AC1F642298F 0xBB CREATE2 DUP11 CALLDATACOPY PUSH4 0xB121A364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "751:5018:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f91474d0f036666c1a9c4daf464c4fdff54a3ac1f642298fbbf58a3763b121a364736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLER PUSH21 0x870D60E717CE6A98F3E0BCC2F212AE3C9B4AB4024B 0xE4 0xE4 PUSH9 0xCDBF267EC564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLER PUSH21 0x870D60E717CE6A98F3E0BCC2F212AE3C9B4AB4024B 0xE4 0xE4 PUSH9 0xCDBF267EC564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "195:6066:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220853374870d60e717ce6a98f3e0bcc2f212ae3c9b4ab4024be4e468cdbf267ec564736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol": {
				"TimeVillageToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_UsdcContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ownerAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "AdminAddToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IsClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "NumberOfBuying",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "TokenRecord",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "claim",
									"type": "bool"
								},
								{
									"internalType": "enum TimeVillageToken.currency",
									"name": "choice",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "TokenRecords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "enum TimeVillageToken.currency",
									"name": "choice",
									"type": "uint8"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":558:3804  contract TimeVillageToken is ERC20, ERC20Burnable, Pausable, Ownable,ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1525:1819  constructor(address _UsdcContract, address ownerAddress) ERC20(\"Time Village Token\", \"TVT\") Ownable(ownerAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1625:1637  ownerAddress */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x71, 0x2a34b6b2902b34b63630b3b2902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x151595)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3281:3332   */\n  mstore\n    /* \"#utility.yul\":3254:3272   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_18:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1644:1692  _mint(msg.sender, 2500000000 * 10 ** decimals()) */\n  tag_22\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1650:1660  msg.sender */\n  caller\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1675:1691  10 ** decimals() */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1675:1677  10 */\n  0x0a\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1675:1691  10 ** decimals() */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1662:1691  2500000000 * 10 ** decimals() */\n  tag_27\n  swap1\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1662:1672  2500000000 */\n  0x9502f900\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1662:1691  2500000000 * 10 ** decimals() */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1644:1649  _mint */\n  tag_29\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1644:1692  _mint(msg.sender, 2500000000 * 10 ** decimals()) */\n  jump\t// in\ntag_22:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1784:1812  UsdcContract = _UsdcContract */\n  and\n  0x80\n  mstore\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":558:3804  contract TimeVillageToken is ERC20, ERC20Burnable, Pausable, Ownable,ReentrancyGuard {... */\n  jump(tag_59)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3281:3332   */\n  mstore\n    /* \"#utility.yul\":3254:3272   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  tag_16\n    /* \"#utility.yul\":3135:3338   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_42\n  swap1\n  pop\n  jump\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5430:5462   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5412:5463   */\n  mstore\n    /* \"#utility.yul\":5479:5497   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5472:5506   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5522:5540   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5515:5549   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5385:5403   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_16\n    /* \"#utility.yul\":5210:5555   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_47)\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_48\n  swap2\n    /* \"#utility.yul\":5706:5731   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5694:5696   */\n  0x20\n    /* \"#utility.yul\":5679:5697   */\n  add\n  swap1\n    /* \"#utility.yul\":5560:5737   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_50:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_61:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_63:\n    /* \"#utility.yul\":375:415   */\n  tag_64\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_50\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_65\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_50\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:621   */\ntag_51:\n    /* \"#utility.yul\":555:565   */\n  0x4e487b71\n    /* \"#utility.yul\":550:553   */\n  0xe0\n    /* \"#utility.yul\":546:566   */\n  shl\n    /* \"#utility.yul\":543:544   */\n  0x00\n    /* \"#utility.yul\":536:567   */\n  mstore\n    /* \"#utility.yul\":586:590   */\n  0x41\n    /* \"#utility.yul\":583:584   */\n  0x04\n    /* \"#utility.yul\":576:591   */\n  mstore\n    /* \"#utility.yul\":610:614   */\n  0x24\n    /* \"#utility.yul\":607:608   */\n  0x00\n    /* \"#utility.yul\":600:615   */\n  revert\n    /* \"#utility.yul\":626:1006   */\ntag_52:\n    /* \"#utility.yul\":705:706   */\n  0x01\n    /* \"#utility.yul\":701:713   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":748:760   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":769:830   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":823:827   */\n  0x7f\n    /* \"#utility.yul\":815:821   */\n  dup3\n    /* \"#utility.yul\":811:828   */\n  and\n    /* \"#utility.yul\":801:828   */\n  swap2\n  pop\n    /* \"#utility.yul\":769:830   */\ntag_68:\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":868:874   */\n  dup3\n    /* \"#utility.yul\":865:879   */\n  lt\n    /* \"#utility.yul\":845:863   */\n  dup2\n    /* \"#utility.yul\":842:880   */\n  sub\n    /* \"#utility.yul\":839:1000   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":922:932   */\n  0x4e487b71\n    /* \"#utility.yul\":917:920   */\n  0xe0\n    /* \"#utility.yul\":913:933   */\n  shl\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":903:934   */\n  mstore\n    /* \"#utility.yul\":957:961   */\n  0x22\n    /* \"#utility.yul\":954:955   */\n  0x04\n    /* \"#utility.yul\":947:962   */\n  mstore\n    /* \"#utility.yul\":985:989   */\n  0x24\n    /* \"#utility.yul\":982:983   */\n  0x00\n    /* \"#utility.yul\":975:990   */\n  revert\n    /* \"#utility.yul\":839:1000   */\ntag_69:\n  pop\n    /* \"#utility.yul\":626:1006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1137:1655   */\ntag_54:\n    /* \"#utility.yul\":1239:1241   */\n  0x1f\n    /* \"#utility.yul\":1234:1237   */\n  dup3\n    /* \"#utility.yul\":1231:1242   */\n  gt\n    /* \"#utility.yul\":1228:1649   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1275:1280   */\n  dup1\n    /* \"#utility.yul\":1272:1273   */\n  0x00\n    /* \"#utility.yul\":1265:1281   */\n  mstore\n    /* \"#utility.yul\":1319:1323   */\n  0x20\n    /* \"#utility.yul\":1316:1317   */\n  0x00\n    /* \"#utility.yul\":1306:1324   */\n  keccak256\n    /* \"#utility.yul\":1389:1391   */\n  0x1f\n    /* \"#utility.yul\":1377:1387   */\n  dup5\n    /* \"#utility.yul\":1373:1392   */\n  add\n    /* \"#utility.yul\":1370:1371   */\n  0x05\n    /* \"#utility.yul\":1366:1393   */\n  shr\n    /* \"#utility.yul\":1360:1364   */\n  dup2\n    /* \"#utility.yul\":1356:1394   */\n  add\n    /* \"#utility.yul\":1425:1429   */\n  0x20\n    /* \"#utility.yul\":1413:1423   */\n  dup6\n    /* \"#utility.yul\":1410:1430   */\n  lt\n    /* \"#utility.yul\":1407:1454   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":1448:1452   */\n  dup1\n    /* \"#utility.yul\":1407:1454   */\ntag_73:\n    /* \"#utility.yul\":1503:1505   */\n  0x1f\n    /* \"#utility.yul\":1498:1501   */\n  dup5\n    /* \"#utility.yul\":1494:1506   */\n  add\n    /* \"#utility.yul\":1491:1492   */\n  0x05\n    /* \"#utility.yul\":1487:1507   */\n  shr\n    /* \"#utility.yul\":1481:1485   */\n  dup3\n    /* \"#utility.yul\":1477:1508   */\n  add\n    /* \"#utility.yul\":1467:1508   */\n  swap2\n  pop\n    /* \"#utility.yul\":1558:1639   */\ntag_74:\n    /* \"#utility.yul\":1576:1578   */\n  dup2\n    /* \"#utility.yul\":1569:1574   */\n  dup2\n    /* \"#utility.yul\":1566:1579   */\n  lt\n    /* \"#utility.yul\":1558:1639   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1635:1636   */\n  0x00\n    /* \"#utility.yul\":1621:1637   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1602:1603   */\n  0x01\n    /* \"#utility.yul\":1591:1604   */\n  add\n    /* \"#utility.yul\":1558:1639   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":1562:1565   */\n  pop\n  pop\n    /* \"#utility.yul\":1228:1649   */\ntag_72:\n    /* \"#utility.yul\":1137:1655   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1831:3130   */\ntag_11:\n    /* \"#utility.yul\":1951:1961   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1973:2003   */\n  dup2\n  gt\n    /* \"#utility.yul\":1970:2026   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2006:2024   */\n  tag_80\n  tag_51\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2035:2132   */\n  tag_81\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2085:2123   */\n  tag_82\n    /* \"#utility.yul\":2117:2121   */\n  dup5\n    /* \"#utility.yul\":2111:2122   */\n  sload\n    /* \"#utility.yul\":2085:2123   */\n  tag_52\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2079:2083   */\n  dup5\n    /* \"#utility.yul\":2035:2132   */\n  tag_54\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2212:2214   */\n  0x1f\n    /* \"#utility.yul\":2201:2215   */\n  dup3\n  gt\n    /* \"#utility.yul\":2229:2230   */\n  0x01\n    /* \"#utility.yul\":2224:2873   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2917:2918   */\n  0x00\n    /* \"#utility.yul\":2934:2940   */\n  dup4\n    /* \"#utility.yul\":2931:3020   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":2986:3005   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2980:3006   */\n  mload\n    /* \"#utility.yul\":2931:3020   */\ntag_85:\n  not(0x00)\n    /* \"#utility.yul\":1788:1789   */\n  0x03\n    /* \"#utility.yul\":1784:1795   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1780:1804   */\n  shr\n    /* \"#utility.yul\":1776:1805   */\n  not\n    /* \"#utility.yul\":1766:1806   */\n  and\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1808:1819   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1763:1820   */\n  or\n    /* \"#utility.yul\":3033:3114   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2194:3124   */\n  jump(tag_76)\n    /* \"#utility.yul\":2224:2873   */\ntag_84:\n    /* \"#utility.yul\":1084:1085   */\n  0x00\n    /* \"#utility.yul\":1077:1091   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1121:1125   */\n  0x20\n    /* \"#utility.yul\":1108:1126   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2260:2280   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2378:2600   */\ntag_88:\n    /* \"#utility.yul\":2392:2399   */\n  dup3\n    /* \"#utility.yul\":2389:2390   */\n  dup2\n    /* \"#utility.yul\":2386:2400   */\n  lt\n    /* \"#utility.yul\":2378:2600   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2474:2493   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2468:2494   */\n  mload\n    /* \"#utility.yul\":2453:2495   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2581:2585   */\n  0x20\n    /* \"#utility.yul\":2566:2586   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2534:2535   */\n  0x01\n    /* \"#utility.yul\":2522:2536   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2408:2420   */\n  add\n    /* \"#utility.yul\":2378:2600   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":2382:2385   */\n  pop\n    /* \"#utility.yul\":2628:2634   */\n  dup5\n    /* \"#utility.yul\":2619:2626   */\n  dup3\n    /* \"#utility.yul\":2616:2635   */\n  lt\n    /* \"#utility.yul\":2613:2814   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2689:2708   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2683:2709   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2772:2773   */\n  0x03\n    /* \"#utility.yul\":2768:2782   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2787   */\n  0xf8\n    /* \"#utility.yul\":2764:2788   */\n  and\n    /* \"#utility.yul\":2760:2797   */\n  shr\n    /* \"#utility.yul\":2756:2798   */\n  not\n    /* \"#utility.yul\":2741:2799   */\n  and\n    /* \"#utility.yul\":2726:2800   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2613:2814   */\ntag_91:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2860:2861   */\n  0x01\n    /* \"#utility.yul\":2844:2858   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2840:2862   */\n  add\n    /* \"#utility.yul\":2827:2863   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1831:3130   */\n  jump\t// out\n    /* \"#utility.yul\":3343:3470   */\ntag_56:\n    /* \"#utility.yul\":3404:3414   */\n  0x4e487b71\n    /* \"#utility.yul\":3399:3402   */\n  0xe0\n    /* \"#utility.yul\":3395:3415   */\n  shl\n    /* \"#utility.yul\":3392:3393   */\n  0x00\n    /* \"#utility.yul\":3385:3416   */\n  mstore\n    /* \"#utility.yul\":3435:3439   */\n  0x11\n    /* \"#utility.yul\":3432:3433   */\n  0x04\n    /* \"#utility.yul\":3425:3440   */\n  mstore\n    /* \"#utility.yul\":3459:3463   */\n  0x24\n    /* \"#utility.yul\":3456:3457   */\n  0x00\n    /* \"#utility.yul\":3449:3464   */\n  revert\n    /* \"#utility.yul\":3475:3850   */\ntag_57:\n    /* \"#utility.yul\":3563:3564   */\n  0x01\n    /* \"#utility.yul\":3581:3586   */\n  dup2\n    /* \"#utility.yul\":3595:3844   */\ntag_95:\n    /* \"#utility.yul\":3616:3617   */\n  0x01\n    /* \"#utility.yul\":3606:3614   */\n  dup5\n    /* \"#utility.yul\":3603:3618   */\n  gt\n    /* \"#utility.yul\":3595:3844   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3666:3670   */\n  dup1\n    /* \"#utility.yul\":3661:3664   */\n  dup6\n    /* \"#utility.yul\":3657:3671   */\n  div\n    /* \"#utility.yul\":3651:3655   */\n  dup2\n    /* \"#utility.yul\":3648:3672   */\n  gt\n    /* \"#utility.yul\":3645:3695   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3675:3693   */\n  tag_99\n  tag_56\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3715:3723   */\n  dup5\n    /* \"#utility.yul\":3711:3727   */\n  and\n    /* \"#utility.yul\":3708:3757   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3739:3755   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":3708:3757   */\ntag_100:\n    /* \"#utility.yul\":3822:3823   */\n  0x01\n    /* \"#utility.yul\":3818:3834   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":3778:3793   */\n  dup1\n  mul\n    /* \"#utility.yul\":3595:3844   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":3475:3850   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3855:4757   */\ntag_58:\n    /* \"#utility.yul\":3904:3909   */\n  0x00\n    /* \"#utility.yul\":3934:3942   */\n  dup3\n    /* \"#utility.yul\":3924:4004   */\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":3975:3976   */\n  0x01\n    /* \"#utility.yul\":3989:3994   */\n  jump(tag_101)\n    /* \"#utility.yul\":3924:4004   */\ntag_102:\n    /* \"#utility.yul\":4023:4027   */\n  dup2\n    /* \"#utility.yul\":4013:4089   */\n  tag_103\n  jumpi\n  pop\n    /* \"#utility.yul\":4060:4061   */\n  0x00\n    /* \"#utility.yul\":4074:4079   */\n  jump(tag_101)\n    /* \"#utility.yul\":4013:4089   */\ntag_103:\n    /* \"#utility.yul\":4105:4109   */\n  dup2\n    /* \"#utility.yul\":4123:4124   */\n  0x01\n    /* \"#utility.yul\":4118:4177   */\n  dup2\n  eq\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4191:4192   */\n  0x02\n    /* \"#utility.yul\":4186:4360   */\n  dup2\n  eq\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4098:4360   */\n  jump(tag_104)\n    /* \"#utility.yul\":4118:4177   */\ntag_105:\n    /* \"#utility.yul\":4148:4149   */\n  0x01\n    /* \"#utility.yul\":4139:4149   */\n  swap2\n  pop\n    /* \"#utility.yul\":4162:4167   */\n  pop\n  jump(tag_101)\n    /* \"#utility.yul\":4186:4360   */\ntag_106:\n    /* \"#utility.yul\":4223:4226   */\n  0xff\n    /* \"#utility.yul\":4213:4221   */\n  dup5\n    /* \"#utility.yul\":4210:4227   */\n  gt\n    /* \"#utility.yul\":4207:4250   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4230:4248   */\n  tag_108\n  tag_56\n  jump\t// in\ntag_108:\n  pop\n  pop\n    /* \"#utility.yul\":4286:4287   */\n  0x01\n    /* \"#utility.yul\":4272:4288   */\n  dup3\n  shl\n    /* \"#utility.yul\":4345:4350   */\n  jump(tag_101)\n    /* \"#utility.yul\":4098:4360   */\ntag_104:\n  pop\n    /* \"#utility.yul\":4444:4446   */\n  0x20\n    /* \"#utility.yul\":4434:4442   */\n  dup4\n    /* \"#utility.yul\":4431:4447   */\n  lt\n    /* \"#utility.yul\":4425:4428   */\n  0x0133\n    /* \"#utility.yul\":4419:4423   */\n  dup4\n    /* \"#utility.yul\":4416:4429   */\n  lt\n    /* \"#utility.yul\":4412:4448   */\n  and\n    /* \"#utility.yul\":4406:4408   */\n  0x4e\n    /* \"#utility.yul\":4396:4404   */\n  dup5\n    /* \"#utility.yul\":4393:4409   */\n  lt\n    /* \"#utility.yul\":4388:4390   */\n  0x0b\n    /* \"#utility.yul\":4382:4386   */\n  dup5\n    /* \"#utility.yul\":4379:4391   */\n  lt\n    /* \"#utility.yul\":4375:4410   */\n  and\n    /* \"#utility.yul\":4372:4449   */\n  or\n    /* \"#utility.yul\":4369:4572   */\n  iszero\n  tag_109\n  jumpi\n  pop\n    /* \"#utility.yul\":4481:4500   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4557:4562   */\n  jump(tag_101)\n    /* \"#utility.yul\":4369:4572   */\ntag_109:\n    /* \"#utility.yul\":4604:4646   */\n  tag_110\n  not(0x00)\n    /* \"#utility.yul\":4629:4637   */\n  dup5\n    /* \"#utility.yul\":4623:4627   */\n  dup5\n    /* \"#utility.yul\":4604:4646   */\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4682:4688   */\n  dup1\n    /* \"#utility.yul\":4678:4679   */\n  0x00\n    /* \"#utility.yul\":4674:4680   */\n  not\n    /* \"#utility.yul\":4670:4689   */\n  div\n    /* \"#utility.yul\":4661:4668   */\n  dup3\n    /* \"#utility.yul\":4658:4690   */\n  gt\n    /* \"#utility.yul\":4655:4713   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4693:4711   */\n  tag_112\n  tag_56\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4731:4751   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3855:4757   */\ntag_101:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4762:4902   */\ntag_26:\n    /* \"#utility.yul\":4820:4825   */\n  0x00\n    /* \"#utility.yul\":4849:4896   */\n  tag_114\n    /* \"#utility.yul\":4890:4894   */\n  0xff\n    /* \"#utility.yul\":4880:4888   */\n  dup5\n    /* \"#utility.yul\":4876:4895   */\n  and\n    /* \"#utility.yul\":4870:4874   */\n  dup4\n    /* \"#utility.yul\":4849:4896   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4840:4896   */\n  swap4\n    /* \"#utility.yul\":4762:4902   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4907:5075   */\ntag_28:\n    /* \"#utility.yul\":4980:4989   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5011:5020   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5028:5043   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5022:5044   */\n  dup5\n  eq\n    /* \"#utility.yul\":5008:5045   */\n  or\n    /* \"#utility.yul\":4998:5069   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5049:5067   */\n  tag_101\n  tag_56\n  jump\t// in\n    /* \"#utility.yul\":5080:5205   */\ntag_41:\n    /* \"#utility.yul\":5145:5154   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5166:5176   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5163:5199   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5179:5197   */\n  tag_101\n  tag_56\n  jump\t// in\n    /* \"#utility.yul\":5560:5737   */\ntag_59:\n    /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":558:3804  contract TimeVillageToken is ERC20, ERC20Burnable, Pausable, Ownable,ReentrancyGuard {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x93ad96917475117018167204867bb7b7d508b38811a18e6cdc5a086e50cc1943\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":558:3804  contract TimeVillageToken is ERC20, ERC20Burnable, Pausable, Ownable,ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc0cd40ee\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc0cd40ee\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcec90fe7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa3c50cfd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8d3ce8a5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x47cee97c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x584707eb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x02ab3fed\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1442:1488  mapping (address =>uint) public NumberOfBuying */\n    tag_3:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1442:1488  mapping (address =>uint) public NumberOfBuying */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1691:1705   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1684:1706   */\n      iszero\n        /* \"#utility.yul\":1666:1707   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1639:1657   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_36\n        /* \"#utility.yul\":1526:1713   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_32)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_42\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":2239:2275   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2227:2229   */\n      0x20\n        /* \"#utility.yul\":2212:2230   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_36\n        /* \"#utility.yul\":2097:2281   */\n      jump\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3520:3583  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_60\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3083:3448  function Claim(address owner, uint _amount) public {... */\n    tag_11:\n      tag_60\n      tag_67\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1245:1312  mapping (address => mapping(uint => userRecord)) public TokenRecord */\n    tag_12:\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_70:\n      0x0b\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup7\n      jump\n    tag_69:\n      mload(0x40)\n      tag_36\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_42)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_60\n      tag_82\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":647:685  AggregatorV3Interface public priceFeed */\n    tag_16:\n      sload(0x07)\n      tag_83\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_83:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3581:3613   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3563:3614   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3551:3553   */\n      0x20\n        /* \"#utility.yul\":3536:3554   */\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":647:685  AggregatorV3Interface public priceFeed */\n      tag_36\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_17:\n      tag_60\n      tag_88\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3456:3515  function pause() public onlyOwner {... */\n    tag_18:\n      tag_60\n      tag_91\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2006:3075  function buyTokens(uint256 _amount,   currency choice) public nonReentrant {... */\n    tag_19:\n      tag_60\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_83)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_38\n      tag_101\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":815:834  bool public IsClaim */\n    tag_22:\n      sload(0x09)\n      tag_42\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_42\n      tag_107\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1844:1988  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_24:\n      tag_60\n      tag_111\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1318:1389  mapping (address => mapping(address => userDetail)) public TokenRecords */\n    tag_25:\n      tag_113\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      0x0c\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap2\n      and\n      dup6\n      jump\n    tag_113:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4751:4776   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":4807:4809   */\n      0x20\n        /* \"#utility.yul\":4792:4810   */\n      dup7\n      add\n        /* \"#utility.yul\":4785:4819   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":4835:4853   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":4828:4862   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4898:4930   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4893:4895   */\n      0x60\n        /* \"#utility.yul\":4878:4896   */\n      dup5\n      add\n        /* \"#utility.yul\":4871:4931   */\n      mstore\n        /* \"#utility.yul\":4968:5000   */\n      and\n        /* \"#utility.yul\":4962:4965   */\n      0x80\n        /* \"#utility.yul\":4947:4966   */\n      dup3\n      add\n        /* \"#utility.yul\":4940:5001   */\n      mstore\n        /* \"#utility.yul\":4738:4741   */\n      0xa0\n        /* \"#utility.yul\":4723:4742   */\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1318:1389  mapping (address => mapping(address => userDetail)) public TokenRecords */\n      tag_36\n        /* \"#utility.yul\":4492:5007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_32\n      tag_120\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_60\n      tag_124\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_128\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_133:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_139:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3520:3583  function unpause() public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3566:3576  _unpause() */\n      tag_150\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3566:3574  _unpause */\n      tag_151\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3566:3576  _unpause() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3520:3583  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3083:3448  function Claim(address owner, uint _amount) public {... */\n    tag_68:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3173:3177  this */\n      address\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3179  TokenRecords[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3164  TokenRecords */\n      0x0c\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3179  TokenRecords[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3186  TokenRecords[address(this)][owner] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3191  TokenRecords[address(this)][owner].time */\n      0x02\n      add\n      sload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3200:3215  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3196  TokenRecords[address(this)][owner].time + 10 */\n      tag_157\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3194:3196  10 */\n      0x0a\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3196  TokenRecords[address(this)][owner].time + 10 */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3152:3215  TokenRecords[address(this)][owner].time + 10 <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3144:3239  require(TokenRecords[address(this)][owner].time + 10 <= block.timestamp, \"Current time exceed\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5861:5863   */\n      0x20\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3144:3239  require(TokenRecords[address(this)][owner].time + 10 <= block.timestamp, \"Current time exceed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5843:5864   */\n      mstore\n        /* \"#utility.yul\":5900:5902   */\n      0x13\n        /* \"#utility.yul\":5880:5898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5873:5903   */\n      mstore\n      shl(0x6a, 0x10dd5c9c995b9d081d1a5b5948195e18d95959)\n        /* \"#utility.yul\":5919:5937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5912:5961   */\n      mstore\n        /* \"#utility.yul\":5978:5996   */\n      0x64\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3144:3239  require(TokenRecords[address(this)][owner].time + 10 <= block.timestamp, \"Current time exceed\") */\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3278:3282  this */\n      address\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3284  TokenRecords[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3269  TokenRecords */\n      0x0c\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3284  TokenRecords[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3291  TokenRecords[address(this)][owner] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3298  TokenRecords[address(this)][owner].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3257:3309  TokenRecords[address(this)][owner].amount == _amount */\n      dup2\n      eq\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3249:3330  require(TokenRecords[address(this)][owner].amount == _amount, \"Amount not match\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3249:3330  require(TokenRecords[address(this)][owner].amount == _amount, \"Amount not match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6191:6212   */\n      mstore\n        /* \"#utility.yul\":6248:6250   */\n      0x10\n        /* \"#utility.yul\":6228:6246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6221:6251   */\n      mstore\n      shl(0x83, 0x082dadeeadce840dcdee840dac2e8c6d)\n        /* \"#utility.yul\":6267:6285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6260:6306   */\n      mstore\n        /* \"#utility.yul\":6323:6341   */\n      0x64\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3249:3330  require(TokenRecords[address(this)][owner].amount == _amount, \"Amount not match\") */\n      tag_160\n        /* \"#utility.yul\":6007:6347   */\n      jump\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3249:3330  require(TokenRecords[address(this)][owner].amount == _amount, \"Amount not match\") */\n    tag_162:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3340:3386  IERC20(address(this)).transfer(owner, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6544:6576   */\n      dup4\n      and\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3340:3386  IERC20(address(this)).transfer(owner, _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6526:6577   */\n      mstore\n        /* \"#utility.yul\":6593:6611   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6586:6620   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3355:3359  this */\n      address\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3340:3370  IERC20(address(this)).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":6499:6517   */\n      0x44\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3340:3386  IERC20(address(this)).transfer(owner, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n      pop\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3417:3421  this */\n      address\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3440:3441  0 */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3423  TokenRecords[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3408  TokenRecords */\n      0x0c\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3423  TokenRecords[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3430  TokenRecords[address(this)][owner] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3437  TokenRecords[address(this)][owner].amount */\n      0x01\n      add\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3396:3441  TokenRecords[address(this)][owner].amount = 0 */\n      sstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3083:3448  function Claim(address owner, uint _amount) public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3456:3515  function pause() public onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3500:3508  _pause() */\n      tag_150\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3500:3506  _pause */\n      tag_186\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3500:3508  _pause() */\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2006:3075  function buyTokens(uint256 _amount,   currency choice) public nonReentrant {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2246:2260  _currencyCoice */\n      0x0d\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2246:2275  _currencyCoice[currency.USDT] */\n      0x20\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2157:2179  uint256 currencyinUSDT */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2246:2275  _currencyCoice[currency.USDT] */\n      0x81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2246:2279  _currencyCoice[currency.USDT] = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2182:2183  1 */\n      0x01\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2289:2317  _currencyCoice[currency.BNB] */\n      dup1\n      dup3\n      mstore\n      0xfd54ff1ed53f34a900b24c5ba64f85761163b5d82d98a47b9bd80e45466993c5\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2289:2321  _currencyCoice[currency.BNB] = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2331:2351  numberOfTransactions */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2182:2183  1 */\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2214:2217  317 */\n      0x013d\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2376:2390  _currencyCoice */\n      0x0d\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2376:2398  _currencyCoice[choice] */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2391:2397  choice */\n      dup6\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2376:2398  _currencyCoice[choice] */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_203\n      tag_193\n      jump\t// in\n    tag_203:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_205\n      jumpi\n      tag_205\n      tag_193\n      jump\t// in\n    tag_205:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2403:2404  0 */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2376:2404  _currencyCoice[choice] ==  0 */\n      sub\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2373:2464  if(_currencyCoice[choice] ==  0){ ... */\n      tag_206\n      jumpi\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2429:2452  _amount* currencyinUSDT */\n      tag_207\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2438:2452  currencyinUSDT */\n      dup4\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2429:2436  _amount */\n      dup7\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2429:2452  _amount* currencyinUSDT */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2420:2453  cost  = (_amount* currencyinUSDT) */\n      swap1\n      pop\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2373:2464  if(_currencyCoice[choice] ==  0){ ... */\n    tag_206:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2477:2491  _currencyCoice */\n      0x0d\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2477:2499  _currencyCoice[choice] */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2492:2498  choice */\n      dup6\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2477:2499  _currencyCoice[choice] */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_210\n      tag_193\n      jump\t// in\n    tag_210:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_212\n      tag_193\n      jump\t// in\n    tag_212:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2504:2505  1 */\n      0x01\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2477:2505  _currencyCoice[choice] ==  1 */\n      sub\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2474:2564  if(_currencyCoice[choice] ==  1){ ... */\n      tag_213\n      jumpi\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2530:2552  _amount* currencyinBNB */\n      tag_214\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2539:2552  currencyinBNB */\n      dup3\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2530:2537  _amount */\n      dup7\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2530:2552  _amount* currencyinBNB */\n      tag_208\n      jump\t// in\n    tag_214:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2521:2553  cost  = (_amount* currencyinBNB) */\n      swap1\n      pop\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2474:2564  if(_currencyCoice[choice] ==  1){ ... */\n    tag_213:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2588:2598  msg.sender */\n      caller\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2573:2599  NumberOfBuying[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2573:2587  NumberOfBuying */\n      0x0e\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2573:2599  NumberOfBuying[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2573:2601  NumberOfBuying[msg.sender]++ */\n      dup1\n      sload\n      swap2\n      tag_215\n      dup4\n      tag_216\n      jump\t// in\n    tag_215:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2657:2667  msg.sender */\n      caller\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2611:2639  uint currentTransactionCount */\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2642:2668  NumberOfBuying[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2642:2656  NumberOfBuying */\n      0x0e\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2642:2668  NumberOfBuying[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2729:2796  userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      swap4\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2783:2787  true */\n      0x01\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2729:2796  userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      0x80\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2642:2668  NumberOfBuying[msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2729:2796  userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      swap1\n      0xa0\n      dup3\n      add\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2789:2795  choice */\n      dup8\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2729:2796  userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_218\n      tag_193\n      jump\t// in\n    tag_218:\n      swap1\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2690:2700  msg.sender */\n      caller\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2701  TokenRecord[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2689  TokenRecord */\n      0x0b\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2701  TokenRecord[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2726  TokenRecord[msg.sender][currentTransactionCount] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2796  TokenRecord[msg.sender][currentTransactionCount] = userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      dup4\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      dup2\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      dup4\n      or\n      dup3\n      sstore\n      0xa0\n      dup7\n      add\n      mload\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2726  TokenRecord[msg.sender][currentTransactionCount] */\n      swap4\n      swap5\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2678:2796  TokenRecord[msg.sender][currentTransactionCount] = userRecord(msg.sender, _amount, currencyinUSDT, cost, true, choice) */\n      swap2\n      swap3\n      not(0xffff)\n      swap1\n      swap2\n      and\n      not(0xff00)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      0x0100\n      swap1\n      dup5\n      swap1\n      dup2\n      gt\n      iszero\n      tag_220\n      jumpi\n      tag_220\n      tag_193\n      jump\t// in\n    tag_220:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2914:2993  userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this)) */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup7\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup11\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2950:2965  block.timestamp */\n      timestamp\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2914:2993  userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this)) */\n      dup4\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2967:2977  msg.sender */\n      caller\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2914:2993  userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this)) */\n      0x60\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2987:2991  this */\n      address\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2914:2993  userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this)) */\n      0x80\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n      0x00\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2872:2899  TokenRecords[address(this)] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2872:2884  TokenRecords */\n      0x0c\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2872:2899  TokenRecords[address(this)] */\n      dup8\n      mstore\n      dup9\n      dup3\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2872:2911  TokenRecords[address(this)][msg.sender] */\n      dup5\n      dup4\n      mstore\n      swap1\n      swap7\n      mstore\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2872:2993  TokenRecords[address(this)][msg.sender] = userDetail(currencyinUSDT, _amount, block.timestamp, msg.sender, address(this)) */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      swap3\n      mload\n      0x03\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap2\n      sstore\n      swap2\n      mload\n      0x04\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap3\n      dup2\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3003:3067  IERC20(UsdcContract).safeTransferFrom(msg.sender, owner() ,cost) */\n      tag_221\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x0100\n      swap1\n      div\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3010:3022  UsdcContract */\n      immutable(\"0x93ad96917475117018167204867bb7b7d508b38811a18e6cdc5a086e50cc1943\")\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3003:3040  IERC20(UsdcContract).safeTransferFrom */\n      and\n      swap2\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3003:3067  IERC20(UsdcContract).safeTransferFrom(msg.sender, owner() ,cost) */\n      swap1\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3062:3066  cost */\n      dup6\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3003:3040  IERC20(UsdcContract).safeTransferFrom */\n      tag_223\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":3003:3067  IERC20(UsdcContract).safeTransferFrom(msg.sender, owner() ,cost) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":2081:3075  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1844:1988  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1907:1981  IERC20(address(this)).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      tag_153\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1966:1970  this */\n      address\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1946:1956  msg.sender */\n      caller\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1966:1970  this */\n      dup2\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1973:1980  _amount */\n      dup5\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1907:1945  IERC20(address(this)).safeTransferFrom */\n      tag_223\n        /* \"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":1907:1981  IERC20(address(this)).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7446:7478   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7428:7479   */\n      mstore\n        /* \"#utility.yul\":7495:7513   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7488:7522   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7538:7556   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7531:7565   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7401:7419   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_160\n        /* \"#utility.yul\":7226:7571   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_272\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_273\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_275:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3581:3613   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3563:3614   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3551:3553   */\n      0x20\n        /* \"#utility.yul\":3536:3554   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_283\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7778:7780   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7760:7781   */\n      mstore\n        /* \"#utility.yul\":7817:7819   */\n      0x1f\n        /* \"#utility.yul\":7797:7815   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7790:7820   */\n      mstore\n        /* \"#utility.yul\":7856:7889   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7836:7854   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7829:7890   */\n      mstore\n        /* \"#utility.yul\":7907:7925   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_160\n        /* \"#utility.yul\":7576:7931   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_289:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8156:8188   */\n      dup6\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8138:8189   */\n      mstore\n        /* \"#utility.yul\":8225:8257   */\n      dup5\n      and\n        /* \"#utility.yul\":8205:8223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8198:8258   */\n      mstore\n        /* \"#utility.yul\":8274:8292   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8267:8301   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8111:8129   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_257\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_305\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_308\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_308:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_309\n      swap1\n      pop\n      jump\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7446:7478   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7428:7479   */\n      mstore\n        /* \"#utility.yul\":7495:7513   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7488:7522   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7538:7556   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7531:7565   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7401:7419   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_160\n        /* \"#utility.yul\":7226:7571   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_310:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_313)\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_314\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8514:8516   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8496:8517   */\n      mstore\n        /* \"#utility.yul\":8553:8555   */\n      0x14\n        /* \"#utility.yul\":8533:8551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8526:8556   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8572:8590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8565:8615   */\n      mstore\n        /* \"#utility.yul\":8632:8650   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_160\n        /* \"#utility.yul\":8312:8656   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8863:8865   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8845:8866   */\n      mstore\n        /* \"#utility.yul\":8902:8904   */\n      0x10\n        /* \"#utility.yul\":8882:8900   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8875:8905   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8921:8939   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8914:8960   */\n      mstore\n        /* \"#utility.yul\":8977:8995   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_160\n        /* \"#utility.yul\":8661:9001   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_326\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_328\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_329\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3581:3613   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_342\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_341)\n    tag_342:\n      0x60\n      swap2\n      pop\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_139)\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3581:3613   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3563:3614   */\n      mstore\n        /* \"#utility.yul\":3536:3554   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_160\n        /* \"#utility.yul\":3389:3620   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_351:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_139)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_356:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_361:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_34:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_363:\n        /* \"#utility.yul\":343:372   */\n      tag_139\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":565:815   */\n    tag_357:\n        /* \"#utility.yul\":650:651   */\n      0x00\n        /* \"#utility.yul\":660:773   */\n    tag_367:\n        /* \"#utility.yul\":674:680   */\n      dup4\n        /* \"#utility.yul\":671:672   */\n      dup2\n        /* \"#utility.yul\":668:681   */\n      lt\n        /* \"#utility.yul\":660:773   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":750:761   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":744:762   */\n      mload\n        /* \"#utility.yul\":731:742   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":724:763   */\n      mstore\n        /* \"#utility.yul\":696:698   */\n      0x20\n        /* \"#utility.yul\":689:699   */\n      add\n        /* \"#utility.yul\":660:773   */\n      jump(tag_367)\n    tag_369:\n      pop\n      pop\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":789:805   */\n      swap2\n      add\n        /* \"#utility.yul\":782:809   */\n      mstore\n        /* \"#utility.yul\":565:815   */\n      jump\t// out\n        /* \"#utility.yul\":820:1216   */\n    tag_41:\n        /* \"#utility.yul\":969:971   */\n      0x20\n        /* \"#utility.yul\":958:967   */\n      dup2\n        /* \"#utility.yul\":951:972   */\n      mstore\n        /* \"#utility.yul\":932:936   */\n      0x00\n        /* \"#utility.yul\":1001:1007   */\n      dup3\n        /* \"#utility.yul\":995:1008   */\n      mload\n        /* \"#utility.yul\":1044:1050   */\n      dup1\n        /* \"#utility.yul\":1039:1041   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup5\n        /* \"#utility.yul\":1024:1042   */\n      add\n        /* \"#utility.yul\":1017:1051   */\n      mstore\n        /* \"#utility.yul\":1060:1139   */\n      tag_371\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1127:1129   */\n      0x40\n        /* \"#utility.yul\":1116:1125   */\n      dup6\n        /* \"#utility.yul\":1112:1130   */\n      add\n        /* \"#utility.yul\":1107:1109   */\n      0x20\n        /* \"#utility.yul\":1099:1105   */\n      dup8\n        /* \"#utility.yul\":1095:1110   */\n      add\n        /* \"#utility.yul\":1060:1139   */\n      tag_357\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1200:1202   */\n      0x1f\n        /* \"#utility.yul\":1179:1194   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1175:1204   */\n      and\n        /* \"#utility.yul\":1160:1205   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1207:1209   */\n      0x40\n        /* \"#utility.yul\":1156:1210   */\n      add\n      swap3\n        /* \"#utility.yul\":820:1216   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1221:1521   */\n    tag_44:\n        /* \"#utility.yul\":1289:1295   */\n      0x00\n        /* \"#utility.yul\":1297:1303   */\n      dup1\n        /* \"#utility.yul\":1350:1352   */\n      0x40\n        /* \"#utility.yul\":1338:1347   */\n      dup4\n        /* \"#utility.yul\":1329:1336   */\n      dup6\n        /* \"#utility.yul\":1325:1348   */\n      sub\n        /* \"#utility.yul\":1321:1353   */\n      slt\n        /* \"#utility.yul\":1318:1370   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1363:1364   */\n      dup1\n        /* \"#utility.yul\":1356:1368   */\n      revert\n        /* \"#utility.yul\":1318:1370   */\n    tag_373:\n        /* \"#utility.yul\":1389:1418   */\n      tag_374\n        /* \"#utility.yul\":1408:1417   */\n      dup4\n        /* \"#utility.yul\":1389:1418   */\n      tag_356\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1379:1418   */\n      swap5\n        /* \"#utility.yul\":1487:1489   */\n      0x20\n        /* \"#utility.yul\":1472:1490   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1459:1491   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1221:1521   */\n      jump\t// out\n        /* \"#utility.yul\":1718:2092   */\n    tag_53:\n        /* \"#utility.yul\":1795:1801   */\n      0x00\n        /* \"#utility.yul\":1803:1809   */\n      dup1\n        /* \"#utility.yul\":1811:1817   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x60\n        /* \"#utility.yul\":1852:1861   */\n      dup5\n        /* \"#utility.yul\":1843:1850   */\n      dup7\n        /* \"#utility.yul\":1839:1862   */\n      sub\n        /* \"#utility.yul\":1835:1867   */\n      slt\n        /* \"#utility.yul\":1832:1884   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1877:1878   */\n      dup1\n        /* \"#utility.yul\":1870:1882   */\n      revert\n        /* \"#utility.yul\":1832:1884   */\n    tag_377:\n        /* \"#utility.yul\":1903:1932   */\n      tag_378\n        /* \"#utility.yul\":1922:1931   */\n      dup5\n        /* \"#utility.yul\":1903:1932   */\n      tag_356\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1893:1932   */\n      swap3\n      pop\n        /* \"#utility.yul\":1951:1989   */\n      tag_379\n        /* \"#utility.yul\":1985:1987   */\n      0x20\n        /* \"#utility.yul\":1974:1983   */\n      dup6\n        /* \"#utility.yul\":1970:1988   */\n      add\n        /* \"#utility.yul\":1951:1989   */\n      tag_356\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1718:2092   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1941:1989   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2058:2060   */\n      0x40\n        /* \"#utility.yul\":2043:2061   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2030:2062   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1718:2092   */\n      jump\t// out\n        /* \"#utility.yul\":2286:2512   */\n    tag_64:\n        /* \"#utility.yul\":2345:2351   */\n      0x00\n        /* \"#utility.yul\":2398:2400   */\n      0x20\n        /* \"#utility.yul\":2386:2395   */\n      dup3\n        /* \"#utility.yul\":2377:2384   */\n      dup5\n        /* \"#utility.yul\":2373:2396   */\n      sub\n        /* \"#utility.yul\":2369:2401   */\n      slt\n        /* \"#utility.yul\":2366:2418   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2414:2415   */\n      0x00\n        /* \"#utility.yul\":2411:2412   */\n      dup1\n        /* \"#utility.yul\":2404:2416   */\n      revert\n        /* \"#utility.yul\":2366:2418   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":2459:2482   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2286:2512   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2517:2644   */\n    tag_193:\n        /* \"#utility.yul\":2578:2588   */\n      0x4e487b71\n        /* \"#utility.yul\":2573:2576   */\n      0xe0\n        /* \"#utility.yul\":2569:2589   */\n      shl\n        /* \"#utility.yul\":2566:2567   */\n      0x00\n        /* \"#utility.yul\":2559:2590   */\n      mstore\n        /* \"#utility.yul\":2609:2613   */\n      0x21\n        /* \"#utility.yul\":2606:2607   */\n      0x04\n        /* \"#utility.yul\":2599:2614   */\n      mstore\n        /* \"#utility.yul\":2633:2637   */\n      0x24\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2623:2638   */\n      revert\n        /* \"#utility.yul\":2649:3384   */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2959:2991   */\n      dup8\n      and\n        /* \"#utility.yul\":2941:2992   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3023:3025   */\n      0x20\n        /* \"#utility.yul\":3008:3026   */\n      dup2\n      add\n        /* \"#utility.yul\":3001:3035   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":3066:3068   */\n      0x40\n        /* \"#utility.yul\":3051:3069   */\n      dup2\n      add\n        /* \"#utility.yul\":3044:3078   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":3109:3111   */\n      0x60\n        /* \"#utility.yul\":3094:3112   */\n      dup2\n      add\n        /* \"#utility.yul\":3087:3121   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3165:3179   */\n      dup3\n      iszero\n        /* \"#utility.yul\":3158:3180   */\n      iszero\n        /* \"#utility.yul\":3152:3155   */\n      0x80\n        /* \"#utility.yul\":3137:3156   */\n      dup3\n      add\n        /* \"#utility.yul\":3130:3181   */\n      mstore\n        /* \"#utility.yul\":2928:2931   */\n      0xc0\n        /* \"#utility.yul\":2913:2932   */\n      dup2\n      add\n        /* \"#utility.yul\":3211:3212   */\n      0x02\n        /* \"#utility.yul\":3200:3213   */\n      dup4\n      lt\n        /* \"#utility.yul\":3190:3334   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3256:3266   */\n      0x4e487b71\n        /* \"#utility.yul\":3251:3254   */\n      0xe0\n        /* \"#utility.yul\":3247:3267   */\n      shl\n        /* \"#utility.yul\":3244:3245   */\n      0x00\n        /* \"#utility.yul\":3237:3268   */\n      mstore\n        /* \"#utility.yul\":3291:3295   */\n      0x21\n        /* \"#utility.yul\":3288:3289   */\n      0x04\n        /* \"#utility.yul\":3281:3296   */\n      mstore\n        /* \"#utility.yul\":3319:3323   */\n      0x24\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3309:3324   */\n      revert\n        /* \"#utility.yul\":3190:3334   */\n    tag_385:\n        /* \"#utility.yul\":3371:3377   */\n      dup3\n        /* \"#utility.yul\":3365:3368   */\n      0xa0\n        /* \"#utility.yul\":3354:3363   */\n      dup4\n        /* \"#utility.yul\":3350:3369   */\n      add\n        /* \"#utility.yul\":3343:3378   */\n      mstore\n        /* \"#utility.yul\":2649:3384   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3625:4014   */\n    tag_94:\n        /* \"#utility.yul\":3706:3712   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup1\n        /* \"#utility.yul\":3767:3769   */\n      0x40\n        /* \"#utility.yul\":3755:3764   */\n      dup4\n        /* \"#utility.yul\":3746:3753   */\n      dup6\n        /* \"#utility.yul\":3742:3765   */\n      sub\n        /* \"#utility.yul\":3738:3770   */\n      slt\n        /* \"#utility.yul\":3735:3787   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3783:3784   */\n      0x00\n        /* \"#utility.yul\":3780:3781   */\n      dup1\n        /* \"#utility.yul\":3773:3785   */\n      revert\n        /* \"#utility.yul\":3735:3787   */\n    tag_388:\n        /* \"#utility.yul\":3828:3851   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3927:3929   */\n      0x20\n        /* \"#utility.yul\":3912:3930   */\n      dup4\n      add\n        /* \"#utility.yul\":3899:3931   */\n      calldataload\n        /* \"#utility.yul\":3962:3963   */\n      0x02\n        /* \"#utility.yul\":3950:3964   */\n      dup2\n      lt\n        /* \"#utility.yul\":3940:3982   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3975:3976   */\n      dup1\n        /* \"#utility.yul\":3968:3980   */\n      revert\n        /* \"#utility.yul\":3940:3982   */\n    tag_389:\n        /* \"#utility.yul\":4001:4008   */\n      dup1\n        /* \"#utility.yul\":3991:4008   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3625:4014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4227:4487   */\n    tag_115:\n        /* \"#utility.yul\":4295:4301   */\n      0x00\n        /* \"#utility.yul\":4303:4309   */\n      dup1\n        /* \"#utility.yul\":4356:4358   */\n      0x40\n        /* \"#utility.yul\":4344:4353   */\n      dup4\n        /* \"#utility.yul\":4335:4342   */\n      dup6\n        /* \"#utility.yul\":4331:4354   */\n      sub\n        /* \"#utility.yul\":4327:4359   */\n      slt\n        /* \"#utility.yul\":4324:4376   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4324:4376   */\n    tag_392:\n        /* \"#utility.yul\":4395:4424   */\n      tag_393\n        /* \"#utility.yul\":4414:4423   */\n      dup4\n        /* \"#utility.yul\":4395:4424   */\n      tag_356\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4385:4424   */\n      swap2\n      pop\n        /* \"#utility.yul\":4443:4481   */\n      tag_394\n        /* \"#utility.yul\":4477:4479   */\n      0x20\n        /* \"#utility.yul\":4466:4475   */\n      dup5\n        /* \"#utility.yul\":4462:4480   */\n      add\n        /* \"#utility.yul\":4443:4481   */\n      tag_356\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4433:4481   */\n      swap1\n      pop\n        /* \"#utility.yul\":4227:4487   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5012:5392   */\n    tag_128:\n        /* \"#utility.yul\":5091:5092   */\n      0x01\n        /* \"#utility.yul\":5087:5099   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5134:5146   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5155:5216   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5209:5213   */\n      0x7f\n        /* \"#utility.yul\":5201:5207   */\n      dup3\n        /* \"#utility.yul\":5197:5214   */\n      and\n        /* \"#utility.yul\":5187:5214   */\n      swap2\n      pop\n        /* \"#utility.yul\":5155:5216   */\n    tag_397:\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5251:5265   */\n      lt\n        /* \"#utility.yul\":5231:5249   */\n      dup2\n        /* \"#utility.yul\":5228:5266   */\n      sub\n        /* \"#utility.yul\":5225:5386   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5308:5318   */\n      0x4e487b71\n        /* \"#utility.yul\":5303:5306   */\n      0xe0\n        /* \"#utility.yul\":5299:5319   */\n      shl\n        /* \"#utility.yul\":5296:5297   */\n      0x00\n        /* \"#utility.yul\":5289:5320   */\n      mstore\n        /* \"#utility.yul\":5343:5347   */\n      0x22\n        /* \"#utility.yul\":5340:5341   */\n      0x04\n        /* \"#utility.yul\":5333:5348   */\n      mstore\n        /* \"#utility.yul\":5371:5375   */\n      0x24\n        /* \"#utility.yul\":5368:5369   */\n      0x00\n        /* \"#utility.yul\":5361:5376   */\n      revert\n        /* \"#utility.yul\":5225:5386   */\n    tag_398:\n      pop\n        /* \"#utility.yul\":5012:5392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5397:5524   */\n    tag_358:\n        /* \"#utility.yul\":5458:5468   */\n      0x4e487b71\n        /* \"#utility.yul\":5453:5456   */\n      0xe0\n        /* \"#utility.yul\":5449:5469   */\n      shl\n        /* \"#utility.yul\":5446:5447   */\n      0x00\n        /* \"#utility.yul\":5439:5470   */\n      mstore\n        /* \"#utility.yul\":5489:5493   */\n      0x11\n        /* \"#utility.yul\":5486:5487   */\n      0x04\n        /* \"#utility.yul\":5479:5494   */\n      mstore\n        /* \"#utility.yul\":5513:5517   */\n      0x24\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5503:5518   */\n      revert\n        /* \"#utility.yul\":5529:5654   */\n    tag_158:\n        /* \"#utility.yul\":5594:5603   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5615:5625   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5612:5648   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5628:5646   */\n      tag_133\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":6631:6908   */\n    tag_170:\n        /* \"#utility.yul\":6698:6704   */\n      0x00\n        /* \"#utility.yul\":6751:6753   */\n      0x20\n        /* \"#utility.yul\":6739:6748   */\n      dup3\n        /* \"#utility.yul\":6730:6737   */\n      dup5\n        /* \"#utility.yul\":6726:6749   */\n      sub\n        /* \"#utility.yul\":6722:6754   */\n      slt\n        /* \"#utility.yul\":6719:6771   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6767:6768   */\n      0x00\n        /* \"#utility.yul\":6764:6765   */\n      dup1\n        /* \"#utility.yul\":6757:6769   */\n      revert\n        /* \"#utility.yul\":6719:6771   */\n    tag_407:\n        /* \"#utility.yul\":6799:6808   */\n      dup2\n        /* \"#utility.yul\":6793:6809   */\n      mload\n        /* \"#utility.yul\":6852:6857   */\n      dup1\n        /* \"#utility.yul\":6845:6858   */\n      iszero\n        /* \"#utility.yul\":6838:6859   */\n      iszero\n        /* \"#utility.yul\":6831:6836   */\n      dup2\n        /* \"#utility.yul\":6828:6860   */\n      eq\n        /* \"#utility.yul\":6818:6878   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":6874:6875   */\n      0x00\n        /* \"#utility.yul\":6871:6872   */\n      dup1\n        /* \"#utility.yul\":6864:6876   */\n      revert\n        /* \"#utility.yul\":6913:7081   */\n    tag_208:\n        /* \"#utility.yul\":6986:6995   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7017:7026   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7034:7049   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7028:7050   */\n      dup5\n      eq\n        /* \"#utility.yul\":7014:7051   */\n      or\n        /* \"#utility.yul\":7004:7075   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":7055:7073   */\n      tag_133\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":7086:7221   */\n    tag_216:\n        /* \"#utility.yul\":7125:7128   */\n      0x00\n        /* \"#utility.yul\":7146:7163   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7143:7186   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":7166:7184   */\n      tag_414\n      tag_358\n      jump\t// in\n    tag_414:\n      pop\n        /* \"#utility.yul\":7213:7214   */\n      0x01\n        /* \"#utility.yul\":7202:7215   */\n      add\n      swap1\n        /* \"#utility.yul\":7086:7221   */\n      jump\t// out\n        /* \"#utility.yul\":9006:9293   */\n    tag_339:\n        /* \"#utility.yul\":9135:9138   */\n      0x00\n        /* \"#utility.yul\":9173:9179   */\n      dup3\n        /* \"#utility.yul\":9167:9180   */\n      mload\n        /* \"#utility.yul\":9189:9255   */\n      tag_421\n        /* \"#utility.yul\":9248:9254   */\n      dup2\n        /* \"#utility.yul\":9243:9246   */\n      dup5\n        /* \"#utility.yul\":9236:9240   */\n      0x20\n        /* \"#utility.yul\":9228:9234   */\n      dup8\n        /* \"#utility.yul\":9224:9241   */\n      add\n        /* \"#utility.yul\":9189:9255   */\n      tag_357\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9271:9287   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9006:9293   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205049776f4c986580ec88732a8f9a98540482d1273ffc6b7394a5fe20f423095564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1974": {
									"entryPoint": null,
									"id": 1974,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_555": {
									"entryPoint": null,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_858": {
									"entryPoint": 365,
									"id": 858,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 275,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_825": {
									"entryPoint": 423,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_582": {
									"entryPoint": null,
									"id": 582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5739:15",
										"nodeType": "YulBlock",
										"src": "0:5739:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:15",
													"nodeType": "YulBlock",
													"src": "74:117:15",
													"statements": [
														{
															"nativeSrc": "84:22:15",
															"nodeType": "YulAssignment",
															"src": "84:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:15"
																},
																"nativeSrc": "93:13:15",
																"nodeType": "YulFunctionCall",
																"src": "93:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:15",
																"nodeType": "YulBlock",
																"src": "169:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:15",
																					"nodeType": "YulLiteral",
																					"src": "178:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:15",
																					"nodeType": "YulLiteral",
																					"src": "181:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:15"
																			},
																			"nativeSrc": "171:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:15"
																		},
																		"nativeSrc": "171:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:15",
																										"nodeType": "YulLiteral",
																										"src": "154:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:15",
																										"nodeType": "YulLiteral",
																										"src": "159:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:15"
																								},
																								"nativeSrc": "150:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:15",
																								"nodeType": "YulLiteral",
																								"src": "163:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:15"
																						},
																						"nativeSrc": "146:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:15"
																				},
																				"nativeSrc": "135:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:15"
																		},
																		"nativeSrc": "125:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:15"
																},
																"nativeSrc": "118:50:15",
																"nodeType": "YulFunctionCall",
																"src": "118:50:15"
															},
															"nativeSrc": "115:70:15",
															"nodeType": "YulIf",
															"src": "115:70:15"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:15",
														"nodeType": "YulTypedName",
														"src": "53:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:15",
														"nodeType": "YulTypedName",
														"src": "64:5:15",
														"type": ""
													}
												],
												"src": "14:177:15"
											},
											{
												"body": {
													"nativeSrc": "294:195:15",
													"nodeType": "YulBlock",
													"src": "294:195:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:15",
																"nodeType": "YulBlock",
																"src": "340:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:15",
																					"nodeType": "YulLiteral",
																					"src": "349:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:15",
																					"nodeType": "YulLiteral",
																					"src": "352:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:15"
																			},
																			"nativeSrc": "342:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:15"
																		},
																		"nativeSrc": "342:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:15"
																		},
																		"nativeSrc": "311:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:15",
																		"nodeType": "YulLiteral",
																		"src": "336:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:15"
																},
																"nativeSrc": "307:32:15",
																"nodeType": "YulFunctionCall",
																"src": "307:32:15"
															},
															"nativeSrc": "304:52:15",
															"nodeType": "YulIf",
															"src": "304:52:15"
														},
														{
															"nativeSrc": "365:50:15",
															"nodeType": "YulAssignment",
															"src": "365:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:15"
																},
																"nativeSrc": "375:40:15",
																"nodeType": "YulFunctionCall",
																"src": "375:40:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:15"
																}
															]
														},
														{
															"nativeSrc": "424:59:15",
															"nodeType": "YulAssignment",
															"src": "424:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:15",
																				"nodeType": "YulLiteral",
																				"src": "479:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:15"
																		},
																		"nativeSrc": "464:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:15"
																},
																"nativeSrc": "434:49:15",
																"nodeType": "YulFunctionCall",
																"src": "434:49:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:15",
														"nodeType": "YulTypedName",
														"src": "252:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:15",
														"nodeType": "YulTypedName",
														"src": "263:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:15",
														"nodeType": "YulTypedName",
														"src": "275:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:15",
														"nodeType": "YulTypedName",
														"src": "283:6:15",
														"type": ""
													}
												],
												"src": "196:293:15"
											},
											{
												"body": {
													"nativeSrc": "526:95:15",
													"nodeType": "YulBlock",
													"src": "526:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "543:1:15",
																		"nodeType": "YulLiteral",
																		"src": "543:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "550:3:15",
																				"nodeType": "YulLiteral",
																				"src": "550:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:10:15",
																				"nodeType": "YulLiteral",
																				"src": "555:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "546:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:15"
																		},
																		"nativeSrc": "546:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "546:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "536:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:15"
																},
																"nativeSrc": "536:31:15",
																"nodeType": "YulFunctionCall",
																"src": "536:31:15"
															},
															"nativeSrc": "536:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "536:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "583:1:15",
																		"nodeType": "YulLiteral",
																		"src": "583:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:4:15",
																		"nodeType": "YulLiteral",
																		"src": "586:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "576:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:15"
																},
																"nativeSrc": "576:15:15",
																"nodeType": "YulFunctionCall",
																"src": "576:15:15"
															},
															"nativeSrc": "576:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "576:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "607:1:15",
																		"nodeType": "YulLiteral",
																		"src": "607:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "610:4:15",
																		"nodeType": "YulLiteral",
																		"src": "610:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "600:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "600:6:15"
																},
																"nativeSrc": "600:15:15",
																"nodeType": "YulFunctionCall",
																"src": "600:15:15"
															},
															"nativeSrc": "600:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "600:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "494:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "494:127:15"
											},
											{
												"body": {
													"nativeSrc": "681:325:15",
													"nodeType": "YulBlock",
													"src": "681:325:15",
													"statements": [
														{
															"nativeSrc": "691:22:15",
															"nodeType": "YulAssignment",
															"src": "691:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "705:1:15",
																		"nodeType": "YulLiteral",
																		"src": "705:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "708:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "708:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "701:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:15"
																},
																"nativeSrc": "701:12:15",
																"nodeType": "YulFunctionCall",
																"src": "701:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "691:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:15"
																}
															]
														},
														{
															"nativeSrc": "722:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "722:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "752:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "752:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "758:1:15",
																		"nodeType": "YulLiteral",
																		"src": "758:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "748:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:15"
																},
																"nativeSrc": "748:12:15",
																"nodeType": "YulFunctionCall",
																"src": "748:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "726:18:15",
																	"nodeType": "YulTypedName",
																	"src": "726:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "799:31:15",
																"nodeType": "YulBlock",
																"src": "799:31:15",
																"statements": [
																	{
																		"nativeSrc": "801:27:15",
																		"nodeType": "YulAssignment",
																		"src": "801:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "815:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "815:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "823:4:15",
																					"nodeType": "YulLiteral",
																					"src": "823:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "811:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "811:3:15"
																			},
																			"nativeSrc": "811:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "811:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "801:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "779:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "779:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "772:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:15"
																},
																"nativeSrc": "772:26:15",
																"nodeType": "YulFunctionCall",
																"src": "772:26:15"
															},
															"nativeSrc": "769:61:15",
															"nodeType": "YulIf",
															"src": "769:61:15"
														},
														{
															"body": {
																"nativeSrc": "889:111:15",
																"nodeType": "YulBlock",
																"src": "889:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:15",
																					"nodeType": "YulLiteral",
																					"src": "910:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "917:3:15",
																							"nodeType": "YulLiteral",
																							"src": "917:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "922:10:15",
																							"nodeType": "YulLiteral",
																							"src": "922:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "913:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "913:3:15"
																					},
																					"nativeSrc": "913:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "913:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			},
																			"nativeSrc": "903:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "903:31:15"
																		},
																		"nativeSrc": "903:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:15",
																					"nodeType": "YulLiteral",
																					"src": "954:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:4:15",
																					"nodeType": "YulLiteral",
																					"src": "957:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "947:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:15"
																			},
																			"nativeSrc": "947:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "947:15:15"
																		},
																		"nativeSrc": "947:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "982:1:15",
																					"nodeType": "YulLiteral",
																					"src": "982:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "985:4:15",
																					"nodeType": "YulLiteral",
																					"src": "985:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "975:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:15"
																			},
																			"nativeSrc": "975:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "975:15:15"
																		},
																		"nativeSrc": "975:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "845:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "845:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "868:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "876:2:15",
																				"nodeType": "YulLiteral",
																				"src": "876:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "865:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "865:2:15"
																		},
																		"nativeSrc": "865:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "865:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "842:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "842:2:15"
																},
																"nativeSrc": "842:38:15",
																"nodeType": "YulFunctionCall",
																"src": "842:38:15"
															},
															"nativeSrc": "839:161:15",
															"nodeType": "YulIf",
															"src": "839:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "626:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "661:4:15",
														"nodeType": "YulTypedName",
														"src": "661:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "670:6:15",
														"nodeType": "YulTypedName",
														"src": "670:6:15",
														"type": ""
													}
												],
												"src": "626:380:15"
											},
											{
												"body": {
													"nativeSrc": "1067:65:15",
													"nodeType": "YulBlock",
													"src": "1067:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1084:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1084:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1087:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1077:6:15"
																},
																"nativeSrc": "1077:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1077:14:15"
															},
															"nativeSrc": "1077:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "1077:14:15"
														},
														{
															"nativeSrc": "1100:26:15",
															"nodeType": "YulAssignment",
															"src": "1100:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1108:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1108:9:15"
																},
																"nativeSrc": "1108:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1108:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1100:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1011:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1050:3:15",
														"nodeType": "YulTypedName",
														"src": "1050:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1058:4:15",
														"nodeType": "YulTypedName",
														"src": "1058:4:15",
														"type": ""
													}
												],
												"src": "1011:121:15"
											},
											{
												"body": {
													"nativeSrc": "1218:437:15",
													"nodeType": "YulBlock",
													"src": "1218:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1251:398:15",
																"nodeType": "YulBlock",
																"src": "1251:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1272:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1275:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1275:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1265:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:15"
																			},
																			"nativeSrc": "1265:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1265:16:15"
																		},
																		"nativeSrc": "1265:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:16:15"
																	},
																	{
																		"nativeSrc": "1294:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1294:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1316:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1319:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1319:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1306:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:15"
																			},
																			"nativeSrc": "1306:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1306:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1298:4:15",
																				"nodeType": "YulTypedName",
																				"src": "1298:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1337:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1337:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1360:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1360:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1370:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1370:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1377:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "1377:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1389:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1389:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1373:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1373:3:15"
																							},
																							"nativeSrc": "1373:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1373:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1366:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1366:3:15"
																					},
																					"nativeSrc": "1366:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1366:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1356:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1356:3:15"
																			},
																			"nativeSrc": "1356:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1341:11:15",
																				"nodeType": "YulTypedName",
																				"src": "1341:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1431:23:15",
																			"nodeType": "YulBlock",
																			"src": "1431:23:15",
																			"statements": [
																				{
																					"nativeSrc": "1433:19:15",
																					"nodeType": "YulAssignment",
																					"src": "1433:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1448:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1448:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1433:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "1433:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1413:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "1413:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1425:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1410:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1410:2:15"
																			},
																			"nativeSrc": "1410:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:20:15"
																		},
																		"nativeSrc": "1407:47:15",
																		"nodeType": "YulIf",
																		"src": "1407:47:15"
																	},
																	{
																		"nativeSrc": "1467:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1467:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1481:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1481:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1491:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1491:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1498:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1498:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1503:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1503:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1494:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1494:3:15"
																							},
																							"nativeSrc": "1494:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1494:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1487:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1487:3:15"
																					},
																					"nativeSrc": "1487:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1487:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1477:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1477:3:15"
																			},
																			"nativeSrc": "1477:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1477:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1471:2:15",
																				"nodeType": "YulTypedName",
																				"src": "1471:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1521:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1521:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1534:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1534:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1525:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1525:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1619:20:15",
																			"nodeType": "YulBlock",
																			"src": "1619:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1628:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1628:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1635:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1635:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1621:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1621:6:15"
																						},
																						"nativeSrc": "1621:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1621:16:15"
																					},
																					"nativeSrc": "1621:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1621:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1569:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1569:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1576:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1576:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1566:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1566:2:15"
																			},
																			"nativeSrc": "1566:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1566:13:15"
																		},
																		"nativeSrc": "1558:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1580:26:15",
																			"nodeType": "YulBlock",
																			"src": "1580:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1582:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1582:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1595:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1595:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1602:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1602:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1591:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1591:3:15"
																						},
																						"nativeSrc": "1591:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1591:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1582:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1582:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1562:3:15",
																			"nodeType": "YulBlock",
																			"src": "1562:3:15",
																			"statements": []
																		},
																		"src": "1558:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1234:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1239:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1239:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1231:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:15"
																},
																"nativeSrc": "1231:11:15",
																"nodeType": "YulFunctionCall",
																"src": "1231:11:15"
															},
															"nativeSrc": "1228:421:15",
															"nodeType": "YulIf",
															"src": "1228:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1137:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1190:5:15",
														"nodeType": "YulTypedName",
														"src": "1190:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1197:3:15",
														"nodeType": "YulTypedName",
														"src": "1197:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1202:10:15",
														"nodeType": "YulTypedName",
														"src": "1202:10:15",
														"type": ""
													}
												],
												"src": "1137:518:15"
											},
											{
												"body": {
													"nativeSrc": "1745:81:15",
													"nodeType": "YulBlock",
													"src": "1745:81:15",
													"statements": [
														{
															"nativeSrc": "1755:65:15",
															"nodeType": "YulAssignment",
															"src": "1755:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1770:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1770:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1788:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1788:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1791:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1791:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1784:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1784:3:15"
																								},
																								"nativeSrc": "1784:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1784:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1801:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1801:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1797:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1797:3:15"
																								},
																								"nativeSrc": "1797:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1797:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1780:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:15"
																						},
																						"nativeSrc": "1780:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1776:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:15"
																				},
																				"nativeSrc": "1776:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1766:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:15"
																		},
																		"nativeSrc": "1766:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1815:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1815:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:15"
																		},
																		"nativeSrc": "1808:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1763:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:15"
																},
																"nativeSrc": "1763:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1763:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1755:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1755:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1660:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1722:4:15",
														"nodeType": "YulTypedName",
														"src": "1722:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1728:3:15",
														"nodeType": "YulTypedName",
														"src": "1728:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1736:4:15",
														"nodeType": "YulTypedName",
														"src": "1736:4:15",
														"type": ""
													}
												],
												"src": "1660:166:15"
											},
											{
												"body": {
													"nativeSrc": "1927:1203:15",
													"nodeType": "YulBlock",
													"src": "1927:1203:15",
													"statements": [
														{
															"nativeSrc": "1937:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1937:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1957:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1951:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1951:5:15"
																},
																"nativeSrc": "1951:10:15",
																"nodeType": "YulFunctionCall",
																"src": "1951:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1941:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1941:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:22:15",
																"nodeType": "YulBlock",
																"src": "2004:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2006:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2006:16:15"
																			},
																			"nativeSrc": "2006:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2006:18:15"
																		},
																		"nativeSrc": "2006:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2006:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1976:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1992:2:15",
																						"nodeType": "YulLiteral",
																						"src": "1992:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1996:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1996:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1988:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:15"
																				},
																				"nativeSrc": "1988:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1988:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2000:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:15"
																		},
																		"nativeSrc": "1984:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1973:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1973:2:15"
																},
																"nativeSrc": "1973:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1973:30:15"
															},
															"nativeSrc": "1970:56:15",
															"nodeType": "YulIf",
															"src": "1970:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2079:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2079:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2117:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2117:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2111:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2111:5:15"
																				},
																				"nativeSrc": "2111:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2085:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "2085:25:15"
																		},
																		"nativeSrc": "2085:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2125:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2035:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2035:43:15"
																},
																"nativeSrc": "2035:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2035:97:15"
															},
															"nativeSrc": "2035:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "2035:97:15"
														},
														{
															"nativeSrc": "2141:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2141:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2158:1:15",
																"nodeType": "YulLiteral",
																"src": "2158:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2145:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2145:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2168:17:15",
															"nodeType": "YulAssignment",
															"src": "2168:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2181:4:15",
																"nodeType": "YulLiteral",
																"src": "2181:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2168:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2168:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2231:642:15",
																		"nodeType": "YulBlock",
																		"src": "2231:642:15",
																		"statements": [
																			{
																				"nativeSrc": "2245:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2245:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2264:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2264:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2276:2:15",
																									"nodeType": "YulLiteral",
																									"src": "2276:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2272:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2272:3:15"
																							},
																							"nativeSrc": "2272:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2272:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2260:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:15"
																					},
																					"nativeSrc": "2260:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2249:7:15",
																						"nodeType": "YulTypedName",
																						"src": "2249:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2293:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2293:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2337:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2337:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2307:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "2307:29:15"
																					},
																					"nativeSrc": "2307:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2307:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2297:6:15",
																						"nodeType": "YulTypedName",
																						"src": "2297:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2355:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2355:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2364:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2359:1:15",
																						"nodeType": "YulTypedName",
																						"src": "2359:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2435:165:15",
																					"nodeType": "YulBlock",
																					"src": "2435:165:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2460:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2460:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2478:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "2478:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2483:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2483:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2474:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2474:3:15"
																												},
																												"nativeSrc": "2474:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2474:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2468:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "2468:5:15"
																										},
																										"nativeSrc": "2468:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2468:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2453:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2453:6:15"
																								},
																								"nativeSrc": "2453:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2453:42:15"
																							},
																							"nativeSrc": "2453:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2453:42:15"
																						},
																						{
																							"nativeSrc": "2512:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2512:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2526:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2526:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2534:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2534:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2522:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:15"
																								},
																								"nativeSrc": "2522:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2522:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2512:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2512:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2553:33:15",
																							"nodeType": "YulAssignment",
																							"src": "2553:33:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2570:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2570:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2581:4:15",
																										"nodeType": "YulLiteral",
																										"src": "2581:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2566:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:15"
																								},
																								"nativeSrc": "2566:20:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2566:20:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2553:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2553:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2389:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2389:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2392:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2392:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2386:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2386:2:15"
																					},
																					"nativeSrc": "2386:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2386:14:15"
																				},
																				"nativeSrc": "2378:222:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2401:21:15",
																					"nodeType": "YulBlock",
																					"src": "2401:21:15",
																					"statements": [
																						{
																							"nativeSrc": "2403:17:15",
																							"nodeType": "YulAssignment",
																							"src": "2403:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2412:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "2412:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2415:4:15",
																										"nodeType": "YulLiteral",
																										"src": "2415:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2408:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2408:3:15"
																								},
																								"nativeSrc": "2408:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2408:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2403:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2403:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2382:3:15",
																					"nodeType": "YulBlock",
																					"src": "2382:3:15",
																					"statements": []
																				},
																				"src": "2378:222:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2648:166:15",
																					"nodeType": "YulBlock",
																					"src": "2648:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2666:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2666:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2693:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2693:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2698:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2698:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2689:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2689:3:15"
																										},
																										"nativeSrc": "2689:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2689:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2683:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2683:5:15"
																								},
																								"nativeSrc": "2683:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2683:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2670:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2670:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2733:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2733:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2745:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2745:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2772:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "2772:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2775:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "2775:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2768:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "2768:3:15"
																																		},
																																		"nativeSrc": "2768:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2768:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2784:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2784:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2764:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2764:3:15"
																																},
																																"nativeSrc": "2764:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2764:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2794:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2794:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2790:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2790:3:15"
																																},
																																"nativeSrc": "2790:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2790:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2760:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "2760:3:15"
																														},
																														"nativeSrc": "2760:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "2760:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2756:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2756:3:15"
																												},
																												"nativeSrc": "2756:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2756:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2741:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:15"
																										},
																										"nativeSrc": "2741:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2726:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2726:6:15"
																								},
																								"nativeSrc": "2726:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2726:74:15"
																							},
																							"nativeSrc": "2726:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2726:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2619:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2619:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2628:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2628:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2616:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2616:2:15"
																					},
																					"nativeSrc": "2616:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2616:19:15"
																				},
																				"nativeSrc": "2613:201:15",
																				"nodeType": "YulIf",
																				"src": "2613:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2834:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2834:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2848:1:15",
																											"nodeType": "YulLiteral",
																											"src": "2848:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2851:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "2851:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2844:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "2844:3:15"
																									},
																									"nativeSrc": "2844:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "2844:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2860:1:15",
																									"nodeType": "YulLiteral",
																									"src": "2860:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2840:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2840:3:15"
																							},
																							"nativeSrc": "2840:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2840:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2827:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2827:6:15"
																					},
																					"nativeSrc": "2827:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2827:36:15"
																				},
																				"nativeSrc": "2827:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2827:36:15"
																			}
																		]
																	},
																	"nativeSrc": "2224:649:15",
																	"nodeType": "YulCase",
																	"src": "2224:649:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2229:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2229:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2890:234:15",
																		"nodeType": "YulBlock",
																		"src": "2890:234:15",
																		"statements": [
																			{
																				"nativeSrc": "2904:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2904:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2917:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2917:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2908:5:15",
																						"nodeType": "YulTypedName",
																						"src": "2908:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2953:67:15",
																					"nodeType": "YulBlock",
																					"src": "2953:67:15",
																					"statements": [
																						{
																							"nativeSrc": "2971:35:15",
																							"nodeType": "YulAssignment",
																							"src": "2971:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2990:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2990:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2995:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2995:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2986:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2986:3:15"
																										},
																										"nativeSrc": "2986:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2986:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2980:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2980:5:15"
																								},
																								"nativeSrc": "2980:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2980:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2971:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2971:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2934:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "2934:6:15"
																				},
																				"nativeSrc": "2931:89:15",
																				"nodeType": "YulIf",
																				"src": "2931:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3040:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3040:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3099:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3099:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3106:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "3106:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3046:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "3046:52:15"
																							},
																							"nativeSrc": "3046:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3046:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3033:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3033:6:15"
																					},
																					"nativeSrc": "3033:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3033:81:15"
																				},
																				"nativeSrc": "3033:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3033:81:15"
																			}
																		]
																	},
																	"nativeSrc": "2882:242:15",
																	"nodeType": "YulCase",
																	"src": "2882:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2204:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2201:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:15"
																},
																"nativeSrc": "2201:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2201:14:15"
															},
															"nativeSrc": "2194:930:15",
															"nodeType": "YulSwitch",
															"src": "2194:930:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1831:1299:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1912:4:15",
														"nodeType": "YulTypedName",
														"src": "1912:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1918:3:15",
														"nodeType": "YulTypedName",
														"src": "1918:3:15",
														"type": ""
													}
												],
												"src": "1831:1299:15"
											},
											{
												"body": {
													"nativeSrc": "3236:102:15",
													"nodeType": "YulBlock",
													"src": "3236:102:15",
													"statements": [
														{
															"nativeSrc": "3246:26:15",
															"nodeType": "YulAssignment",
															"src": "3246:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3269:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3254:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:15"
																},
																"nativeSrc": "3254:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3254:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3246:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3246:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3288:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3288:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3303:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3303:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3319:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3319:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3324:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3324:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3315:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3315:3:15"
																						},
																						"nativeSrc": "3315:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3315:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3328:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3328:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3311:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3311:3:15"
																				},
																				"nativeSrc": "3311:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3311:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3299:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:15"
																		},
																		"nativeSrc": "3299:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:15"
																},
																"nativeSrc": "3281:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3281:51:15"
															},
															"nativeSrc": "3281:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3281:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3135:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3205:9:15",
														"nodeType": "YulTypedName",
														"src": "3205:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3216:6:15",
														"nodeType": "YulTypedName",
														"src": "3216:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3227:4:15",
														"nodeType": "YulTypedName",
														"src": "3227:4:15",
														"type": ""
													}
												],
												"src": "3135:203:15"
											},
											{
												"body": {
													"nativeSrc": "3375:95:15",
													"nodeType": "YulBlock",
													"src": "3375:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3392:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3392:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3399:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3399:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3404:10:15",
																				"nodeType": "YulLiteral",
																				"src": "3404:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3395:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3395:3:15"
																		},
																		"nativeSrc": "3395:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3385:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3385:6:15"
																},
																"nativeSrc": "3385:31:15",
																"nodeType": "YulFunctionCall",
																"src": "3385:31:15"
															},
															"nativeSrc": "3385:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "3385:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3432:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3432:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3435:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3435:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3425:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3425:6:15"
																},
																"nativeSrc": "3425:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3425:15:15"
															},
															"nativeSrc": "3425:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3425:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3456:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3459:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3459:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3449:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:15"
																},
																"nativeSrc": "3449:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3449:15:15"
															},
															"nativeSrc": "3449:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "3449:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3343:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3343:127:15"
											},
											{
												"body": {
													"nativeSrc": "3544:306:15",
													"nodeType": "YulBlock",
													"src": "3544:306:15",
													"statements": [
														{
															"nativeSrc": "3554:10:15",
															"nodeType": "YulAssignment",
															"src": "3554:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3563:1:15",
																"nodeType": "YulLiteral",
																"src": "3563:1:15",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3554:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3554:5:15"
																}
															]
														},
														{
															"nativeSrc": "3573:13:15",
															"nodeType": "YulAssignment",
															"src": "3573:13:15",
															"value": {
																"name": "_base",
																"nativeSrc": "3581:5:15",
																"nodeType": "YulIdentifier",
																"src": "3581:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3573:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3573:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3631:213:15",
																"nodeType": "YulBlock",
																"src": "3631:213:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3673:22:15",
																			"nodeType": "YulBlock",
																			"src": "3673:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3675:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "3675:16:15"
																						},
																						"nativeSrc": "3675:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3675:18:15"
																					},
																					"nativeSrc": "3675:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "3675:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3651:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "3651:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "3661:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3666:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3666:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3657:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3657:3:15"
																					},
																					"nativeSrc": "3657:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3657:14:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3648:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3648:2:15"
																			},
																			"nativeSrc": "3648:24:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3648:24:15"
																		},
																		"nativeSrc": "3645:50:15",
																		"nodeType": "YulIf",
																		"src": "3645:50:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "3728:29:15",
																			"nodeType": "YulBlock",
																			"src": "3728:29:15",
																			"statements": [
																				{
																					"nativeSrc": "3730:25:15",
																					"nodeType": "YulAssignment",
																					"src": "3730:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3743:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "3743:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3750:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "3750:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3739:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3739:3:15"
																						},
																						"nativeSrc": "3739:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3739:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3730:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "3730:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3715:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "3715:8:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3725:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3725:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3711:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3711:3:15"
																			},
																			"nativeSrc": "3711:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3711:16:15"
																		},
																		"nativeSrc": "3708:49:15",
																		"nodeType": "YulIf",
																		"src": "3708:49:15"
																	},
																	{
																		"nativeSrc": "3770:23:15",
																		"nodeType": "YulAssignment",
																		"src": "3770:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3782:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "3782:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3788:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "3788:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3778:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3778:3:15"
																			},
																			"nativeSrc": "3778:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3778:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3770:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "3770:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3806:28:15",
																		"nodeType": "YulAssignment",
																		"src": "3806:28:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3822:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3822:1:15",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3825:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "3825:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3818:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3818:3:15"
																			},
																			"nativeSrc": "3818:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3818:16:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3806:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "3806:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3606:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "3606:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3616:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3616:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3603:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3603:2:15"
																},
																"nativeSrc": "3603:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3603:15:15"
															},
															"nativeSrc": "3595:249:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3619:3:15",
																"nodeType": "YulBlock",
																"src": "3619:3:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3599:3:15",
																"nodeType": "YulBlock",
																"src": "3599:3:15",
																"statements": []
															},
															"src": "3595:249:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3475:375:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3503:5:15",
														"nodeType": "YulTypedName",
														"src": "3503:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3510:8:15",
														"nodeType": "YulTypedName",
														"src": "3510:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "3520:3:15",
														"nodeType": "YulTypedName",
														"src": "3520:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3528:5:15",
														"nodeType": "YulTypedName",
														"src": "3528:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3535:4:15",
														"nodeType": "YulTypedName",
														"src": "3535:4:15",
														"type": ""
													}
												],
												"src": "3475:375:15"
											},
											{
												"body": {
													"nativeSrc": "3914:843:15",
													"nodeType": "YulBlock",
													"src": "3914:843:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3952:52:15",
																"nodeType": "YulBlock",
																"src": "3952:52:15",
																"statements": [
																	{
																		"nativeSrc": "3966:10:15",
																		"nodeType": "YulAssignment",
																		"src": "3966:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3975:1:15",
																			"nodeType": "YulLiteral",
																			"src": "3975:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3966:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3966:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3989:5:15",
																		"nodeType": "YulLeave",
																		"src": "3989:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3934:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "3934:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3927:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:15"
																},
																"nativeSrc": "3927:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3927:16:15"
															},
															"nativeSrc": "3924:80:15",
															"nodeType": "YulIf",
															"src": "3924:80:15"
														},
														{
															"body": {
																"nativeSrc": "4037:52:15",
																"nodeType": "YulBlock",
																"src": "4037:52:15",
																"statements": [
																	{
																		"nativeSrc": "4051:10:15",
																		"nodeType": "YulAssignment",
																		"src": "4051:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4060:1:15",
																			"nodeType": "YulLiteral",
																			"src": "4060:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4051:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4051:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4074:5:15",
																		"nodeType": "YulLeave",
																		"src": "4074:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4023:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4023:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4016:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:15"
																},
																"nativeSrc": "4016:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4016:12:15"
															},
															"nativeSrc": "4013:76:15",
															"nodeType": "YulIf",
															"src": "4013:76:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4125:52:15",
																		"nodeType": "YulBlock",
																		"src": "4125:52:15",
																		"statements": [
																			{
																				"nativeSrc": "4139:10:15",
																				"nodeType": "YulAssignment",
																				"src": "4139:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4148:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4139:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4139:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4162:5:15",
																				"nodeType": "YulLeave",
																				"src": "4162:5:15"
																			}
																		]
																	},
																	"nativeSrc": "4118:59:15",
																	"nodeType": "YulCase",
																	"src": "4118:59:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4123:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4123:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4193:167:15",
																		"nodeType": "YulBlock",
																		"src": "4193:167:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4228:22:15",
																					"nodeType": "YulBlock",
																					"src": "4228:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4230:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "4230:16:15"
																								},
																								"nativeSrc": "4230:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4230:18:15"
																							},
																							"nativeSrc": "4230:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4230:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4213:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "4213:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4223:3:15",
																							"nodeType": "YulLiteral",
																							"src": "4223:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4210:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4210:2:15"
																					},
																					"nativeSrc": "4210:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4210:17:15"
																				},
																				"nativeSrc": "4207:43:15",
																				"nodeType": "YulIf",
																				"src": "4207:43:15"
																			},
																			{
																				"nativeSrc": "4263:25:15",
																				"nodeType": "YulAssignment",
																				"src": "4263:25:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4276:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "4276:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4286:1:15",
																							"nodeType": "YulLiteral",
																							"src": "4286:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4272:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4272:3:15"
																					},
																					"nativeSrc": "4272:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4272:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4263:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4263:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4301:11:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4301:11:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4311:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4311:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "4305:2:15",
																						"nodeType": "YulTypedName",
																						"src": "4305:2:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4325:7:15",
																				"nodeType": "YulAssignment",
																				"src": "4325:7:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4331:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "4325:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4325:2:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4345:5:15",
																				"nodeType": "YulLeave",
																				"src": "4345:5:15"
																			}
																		]
																	},
																	"nativeSrc": "4186:174:15",
																	"nodeType": "YulCase",
																	"src": "4186:174:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4191:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4191:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4105:4:15",
																"nodeType": "YulIdentifier",
																"src": "4105:4:15"
															},
															"nativeSrc": "4098:262:15",
															"nodeType": "YulSwitch",
															"src": "4098:262:15"
														},
														{
															"body": {
																"nativeSrc": "4458:114:15",
																"nodeType": "YulBlock",
																"src": "4458:114:15",
																"statements": [
																	{
																		"nativeSrc": "4472:28:15",
																		"nodeType": "YulAssignment",
																		"src": "4472:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4485:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "4485:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4491:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "4491:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4481:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4481:3:15"
																			},
																			"nativeSrc": "4481:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4472:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4472:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4513:11:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4513:11:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4523:1:15",
																			"nodeType": "YulLiteral",
																			"src": "4523:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "4517:2:15",
																				"nodeType": "YulTypedName",
																				"src": "4517:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4537:7:15",
																		"nodeType": "YulAssignment",
																		"src": "4537:7:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4543:1:15",
																			"nodeType": "YulLiteral",
																			"src": "4543:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "4537:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "4537:2:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4557:5:15",
																		"nodeType": "YulLeave",
																		"src": "4557:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4382:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "4382:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4388:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4388:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4379:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4379:2:15"
																				},
																				"nativeSrc": "4379:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4379:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4396:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "4396:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4406:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4406:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4393:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4393:2:15"
																				},
																				"nativeSrc": "4393:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4393:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4375:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:15"
																		},
																		"nativeSrc": "4375:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4375:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4419:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "4419:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4425:3:15",
																						"nodeType": "YulLiteral",
																						"src": "4425:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4416:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4416:2:15"
																				},
																				"nativeSrc": "4416:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4416:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4434:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "4434:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4444:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4444:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4431:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4431:2:15"
																				},
																				"nativeSrc": "4431:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4431:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4412:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4412:3:15"
																		},
																		"nativeSrc": "4412:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4372:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4372:2:15"
																},
																"nativeSrc": "4372:77:15",
																"nodeType": "YulFunctionCall",
																"src": "4372:77:15"
															},
															"nativeSrc": "4369:203:15",
															"nodeType": "YulIf",
															"src": "4369:203:15"
														},
														{
															"nativeSrc": "4581:65:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4581:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4623:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4623:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4629:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "4629:8:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4643:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4643:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4639:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:15"
																		},
																		"nativeSrc": "4639:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4639:6:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4604:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4604:18:15"
																},
																"nativeSrc": "4604:42:15",
																"nodeType": "YulFunctionCall",
																"src": "4604:42:15"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4585:7:15",
																	"nodeType": "YulTypedName",
																	"src": "4585:7:15",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4594:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4594:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4691:22:15",
																"nodeType": "YulBlock",
																"src": "4691:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4693:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4693:16:15"
																			},
																			"nativeSrc": "4693:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4693:18:15"
																		},
																		"nativeSrc": "4693:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4693:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4661:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4661:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4678:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4678:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4674:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4674:3:15"
																				},
																				"nativeSrc": "4674:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4674:6:15"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4682:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4682:6:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4670:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:15"
																		},
																		"nativeSrc": "4670:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:19:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4658:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4658:2:15"
																},
																"nativeSrc": "4658:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4658:32:15"
															},
															"nativeSrc": "4655:58:15",
															"nodeType": "YulIf",
															"src": "4655:58:15"
														},
														{
															"nativeSrc": "4722:29:15",
															"nodeType": "YulAssignment",
															"src": "4722:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4735:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "4735:7:15"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4744:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4744:6:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4731:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4731:3:15"
																},
																"nativeSrc": "4731:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4731:20:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4722:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4722:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3855:902:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3885:4:15",
														"nodeType": "YulTypedName",
														"src": "3885:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3891:8:15",
														"nodeType": "YulTypedName",
														"src": "3891:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3904:5:15",
														"nodeType": "YulTypedName",
														"src": "3904:5:15",
														"type": ""
													}
												],
												"src": "3855:902:15"
											},
											{
												"body": {
													"nativeSrc": "4830:72:15",
													"nodeType": "YulBlock",
													"src": "4830:72:15",
													"statements": [
														{
															"nativeSrc": "4840:56:15",
															"nodeType": "YulAssignment",
															"src": "4840:56:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4870:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4870:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4880:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "4880:8:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4890:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4890:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4876:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:15"
																		},
																		"nativeSrc": "4876:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:19:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4849:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "4849:20:15"
																},
																"nativeSrc": "4849:47:15",
																"nodeType": "YulFunctionCall",
																"src": "4849:47:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4840:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4840:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4762:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4801:4:15",
														"nodeType": "YulTypedName",
														"src": "4801:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4807:8:15",
														"nodeType": "YulTypedName",
														"src": "4807:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4820:5:15",
														"nodeType": "YulTypedName",
														"src": "4820:5:15",
														"type": ""
													}
												],
												"src": "4762:140:15"
											},
											{
												"body": {
													"nativeSrc": "4959:116:15",
													"nodeType": "YulBlock",
													"src": "4959:116:15",
													"statements": [
														{
															"nativeSrc": "4969:20:15",
															"nodeType": "YulAssignment",
															"src": "4969:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4984:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4984:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4987:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4987:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4980:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:15"
																},
																"nativeSrc": "4980:9:15",
																"nodeType": "YulFunctionCall",
																"src": "4980:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4969:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "4969:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5047:22:15",
																"nodeType": "YulBlock",
																"src": "5047:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5049:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5049:16:15"
																			},
																			"nativeSrc": "5049:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5049:18:15"
																		},
																		"nativeSrc": "5049:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5049:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5018:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "5018:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5011:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5011:6:15"
																				},
																				"nativeSrc": "5011:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5011:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5025:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "5025:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5032:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "5032:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5041:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "5041:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5028:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5028:3:15"
																						},
																						"nativeSrc": "5028:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5028:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5022:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5022:2:15"
																				},
																				"nativeSrc": "5022:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5022:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5008:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5008:2:15"
																		},
																		"nativeSrc": "5008:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5008:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:15"
																},
																"nativeSrc": "5001:45:15",
																"nodeType": "YulFunctionCall",
																"src": "5001:45:15"
															},
															"nativeSrc": "4998:71:15",
															"nodeType": "YulIf",
															"src": "4998:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4907:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4938:1:15",
														"nodeType": "YulTypedName",
														"src": "4938:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4941:1:15",
														"nodeType": "YulTypedName",
														"src": "4941:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4947:7:15",
														"nodeType": "YulTypedName",
														"src": "4947:7:15",
														"type": ""
													}
												],
												"src": "4907:168:15"
											},
											{
												"body": {
													"nativeSrc": "5128:77:15",
													"nodeType": "YulBlock",
													"src": "5128:77:15",
													"statements": [
														{
															"nativeSrc": "5138:16:15",
															"nodeType": "YulAssignment",
															"src": "5138:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5149:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5149:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5152:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5152:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5145:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5145:3:15"
																},
																"nativeSrc": "5145:9:15",
																"nodeType": "YulFunctionCall",
																"src": "5145:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5138:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5138:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5177:22:15",
																"nodeType": "YulBlock",
																"src": "5177:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5179:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5179:16:15"
																			},
																			"nativeSrc": "5179:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5179:18:15"
																		},
																		"nativeSrc": "5179:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5179:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5169:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5169:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5172:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5172:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5166:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5166:2:15"
																},
																"nativeSrc": "5166:10:15",
																"nodeType": "YulFunctionCall",
																"src": "5166:10:15"
															},
															"nativeSrc": "5163:36:15",
															"nodeType": "YulIf",
															"src": "5163:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5080:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5111:1:15",
														"nodeType": "YulTypedName",
														"src": "5111:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5114:1:15",
														"nodeType": "YulTypedName",
														"src": "5114:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5120:3:15",
														"nodeType": "YulTypedName",
														"src": "5120:3:15",
														"type": ""
													}
												],
												"src": "5080:125:15"
											},
											{
												"body": {
													"nativeSrc": "5367:188:15",
													"nodeType": "YulBlock",
													"src": "5367:188:15",
													"statements": [
														{
															"nativeSrc": "5377:26:15",
															"nodeType": "YulAssignment",
															"src": "5377:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5389:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5389:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5400:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5400:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5385:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5385:3:15"
																},
																"nativeSrc": "5385:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5385:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5377:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5377:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5419:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5419:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5434:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5434:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5450:3:15",
																								"nodeType": "YulLiteral",
																								"src": "5450:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5455:1:15",
																								"nodeType": "YulLiteral",
																								"src": "5455:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5446:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5446:3:15"
																						},
																						"nativeSrc": "5446:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5446:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5459:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5459:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5442:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5442:3:15"
																				},
																				"nativeSrc": "5442:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5442:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5430:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5430:3:15"
																		},
																		"nativeSrc": "5430:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5430:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5412:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5412:6:15"
																},
																"nativeSrc": "5412:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5412:51:15"
															},
															"nativeSrc": "5412:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5412:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5483:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5494:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5494:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5479:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:15"
																		},
																		"nativeSrc": "5479:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5499:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5499:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5472:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:15"
																},
																"nativeSrc": "5472:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5472:34:15"
															},
															"nativeSrc": "5472:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5472:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5526:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5526:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5537:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5537:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5522:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5522:3:15"
																		},
																		"nativeSrc": "5522:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5522:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5542:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5542:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5515:6:15"
																},
																"nativeSrc": "5515:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5515:34:15"
															},
															"nativeSrc": "5515:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5515:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5210:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5320:9:15",
														"nodeType": "YulTypedName",
														"src": "5320:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5331:6:15",
														"nodeType": "YulTypedName",
														"src": "5331:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5339:6:15",
														"nodeType": "YulTypedName",
														"src": "5339:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5347:6:15",
														"nodeType": "YulTypedName",
														"src": "5347:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5358:4:15",
														"nodeType": "YulTypedName",
														"src": "5358:4:15",
														"type": ""
													}
												],
												"src": "5210:345:15"
											},
											{
												"body": {
													"nativeSrc": "5661:76:15",
													"nodeType": "YulBlock",
													"src": "5661:76:15",
													"statements": [
														{
															"nativeSrc": "5671:26:15",
															"nodeType": "YulAssignment",
															"src": "5671:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5683:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5683:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5694:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5694:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5679:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5679:3:15"
																},
																"nativeSrc": "5679:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5679:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5671:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5671:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5713:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5713:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5724:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5706:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:15"
																},
																"nativeSrc": "5706:25:15",
																"nodeType": "YulFunctionCall",
																"src": "5706:25:15"
															},
															"nativeSrc": "5706:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "5706:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5560:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5630:9:15",
														"nodeType": "YulTypedName",
														"src": "5630:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5641:6:15",
														"nodeType": "YulTypedName",
														"src": "5641:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5652:4:15",
														"nodeType": "YulTypedName",
														"src": "5652:4:15",
														"type": ""
													}
												],
												"src": "5560:177:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051611a23380380611a2383398101604081905261002f916102ed565b80604051806040016040528060128152602001712a34b6b2902b34b63630b3b2902a37b5b2b760711b8152506040518060400160405280600381526020016215159560ea1b815250816003908161008691906103bf565b50600461009382826103bf565b50506005805460ff19169055506001600160a01b0381166100cf57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100d881610113565b506001600655610101336100ee6012600a61057c565b6100fc90639502f900610592565b61016d565b506001600160a01b03166080526105bc565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101975760405163ec442f0560e01b8152600060048201526024016100c6565b6101a3600083836101a7565b5050565b6001600160a01b0383166101d25780600260008282546101c791906105a9565b909155506102449050565b6001600160a01b038316600090815260208190526040902054818110156102255760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100c6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166102605760028054829003905561027f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102c491815260200190565b60405180910390a3505050565b80516001600160a01b03811681146102e857600080fd5b919050565b6000806040838503121561030057600080fd5b610309836102d1565b9150610317602084016102d1565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061034a57607f821691505b60208210810361036a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103ba57806000526020600020601f840160051c810160208510156103975750805b601f840160051c820191505b818110156103b757600081556001016103a3565b50505b505050565b81516001600160401b038111156103d8576103d8610320565b6103ec816103e68454610336565b84610370565b6020601f82116001811461042057600083156104085750848201515b600019600385901b1c1916600184901b1784556103b7565b600084815260208120601f198516915b828110156104505787850151825560209485019460019092019101610430565b508482101561046e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156104ce578085048111156104b2576104b261047d565b60018416156104c057908102905b60019390931c928002610497565b935093915050565b6000826104e557506001610576565b816104f257506000610576565b816001811461050857600281146105125761052e565b6001915050610576565b60ff8411156105235761052361047d565b50506001821b610576565b5060208310610133831016604e8410600b8410161715610551575081810a610576565b61055e6000198484610493565b80600019048211156105725761057261047d565b0290505b92915050565b600061058b60ff8416836104d6565b9392505050565b80820281158282048414176105765761057661047d565b808201808211156105765761057661047d565b60805161144c6105d760003960006109d0015261144c6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de57806395d89b4111610097578063c0cd40ee11610071578063c0cd40ee14610380578063cec90fe714610393578063dd62ed3e1461041b578063f2fde38b1461045457600080fd5b806395d89b4114610358578063a3c50cfd14610360578063a9059cbb1461036d57600080fd5b8063715018a6146102e1578063741bef1a146102e957806379cc6790146103145780638456cb59146103275780638d3ce8a51461032f5780638da5cb5b1461034257600080fd5b80633f4ba83a116101305780633f4ba83a1461020d57806342966c681461021757806347cee97c1461022a578063584707eb1461023d5780635c975abb146102ad57806370a08231146102b857600080fd5b806302ab3fed1461017857806306fdde03146101ab578063095ea7b3146101c057806318160ddd146101e357806323b872dd146101eb578063313ce567146101fe575b600080fd5b61019861018636600461117a565b600e6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101b3610467565b6040516101a291906111b9565b6101d36101ce3660046111ec565b6104f9565b60405190151581526020016101a2565b600254610198565b6101d36101f9366004611216565b610513565b604051601281526020016101a2565b610215610539565b005b610215610225366004611253565b61054b565b6102156102383660046111ec565b610558565b61029b61024b3660046111ec565b600b602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919060ff8082169161010090041686565b6040516101a296959493929190611282565b60055460ff166101d3565b6101986102c636600461117a565b6001600160a01b031660009081526020819052604090205490565b6102156106dc565b6007546102fc906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b6102156103223660046111ec565b6106ee565b610215610707565b61021561033d3660046112de565b610717565b60055461010090046001600160a01b03166102fc565b6101b3610a06565b6009546101d39060ff1681565b6101d361037b3660046111ec565b610a15565b61021561038e366004611253565b610a23565b6103e76103a1366004611312565b600c602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401549293919290916001600160a01b03908116911685565b604080519586526020860194909452928401919091526001600160a01b03908116606084015216608082015260a0016101a2565b610198610429366004611312565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021561046236600461117a565b610a37565b60606003805461047690611345565b80601f01602080910402602001604051908101604052809291908181526020018280546104a290611345565b80156104ef5780601f106104c4576101008083540402835291602001916104ef565b820191906000526020600020905b8154815290600101906020018083116104d257829003601f168201915b5050505050905090565b600033610507818585610a72565b60019150505b92915050565b600033610521858285610a84565b61052c858585610b02565b60019150505b9392505050565b610541610b61565b610549610b94565b565b6105553382610be6565b50565b306000908152600c602090815260408083206001600160a01b0386168452909152902060020154429061058c90600a611395565b11156105d55760405162461bcd60e51b815260206004820152601360248201527210dd5c9c995b9d081d1a5b5948195e18d95959606a1b60448201526064015b60405180910390fd5b306000908152600c602090815260408083206001600160a01b0386168452909152902060010154811461063d5760405162461bcd60e51b815260206004820152601060248201526f082dadeeadce840dcdee840dac2e8c6d60831b60448201526064016105cc565b60405163a9059cbb60e01b81526001600160a01b038316600482015260248101829052309063a9059cbb906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae91906113a8565b5050306000908152600c602090815260408083206001600160a01b0394909416835292905290812060010155565b6106e4610b61565b6105496000610c1c565b6106f9823383610a84565b6107038282610be6565b5050565b61070f610b61565b610549610c76565b61071f610cb3565b600d60205260007f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee81905560018082527ffd54ff1ed53f34a900b24c5ba64f85761163b5d82d98a47b9bd80e45466993c581905560088054820190559061013d90600d60008560018111156107965761079661126c565b60018111156107a7576107a761126c565b8152602001908152602001600020546000036107ca576107c783866113ca565b90505b600d60008560018111156107e0576107e061126c565b60018111156107f1576107f161126c565b8152602001908152602001600020546001036108145761081182866113ca565b90505b336000908152600e6020526040812080549161082f836113e1565b9091555050336000818152600e602090815260409182902054825160c0810184529384529083018890529082018590526060820183905260016080830181905290919060a082019087908111156108885761088861126c565b9052336000908152600b60209081526040808320858452825291829020835181546001600160a01b0319166001600160a01b039091161781559083015160018083019190915591830151600282015560608301516003820155608083015160048201805460ff198116921515928317825560a08601519394919261ffff1990911661ff001990911617906101009084908111156109275761092761126c565b0217905550506040805160a08101825286815260208082018a815242838501908152336060850181815230608087018181526000918252600c875288822084835290965296909620945185559151600185015551600284015592516003830180546001600160a01b03199081166001600160a01b03938416179091559151600490930180549092169281169290921790556005546109f893506101009004166001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016919085610d0c565b505050506107036001600655565b60606004805461047690611345565b600033610507818585610b02565b610a2b610b61565b61055530338184610d0c565b610a3f610b61565b6001600160a01b038116610a6957604051631e4fbdf760e01b8152600060048201526024016105cc565b61055581610c1c565b610a7f8383836001610d66565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610afc5781811015610aed57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105cc565b610afc84848484036000610d66565b50505050565b6001600160a01b038316610b2c57604051634b637e8f60e11b8152600060048201526024016105cc565b6001600160a01b038216610b565760405163ec442f0560e01b8152600060048201526024016105cc565b610a7f838383610e3b565b6005546001600160a01b036101009091041633146105495760405163118cdaa760e01b81523360048201526024016105cc565b610b9c610f65565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610c1057604051634b637e8f60e11b8152600060048201526024016105cc565b61070382600083610e3b565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c7e610fae565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bc93390565b600260065403610d055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cc565b6002600655565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610afc908590610ff4565b6001600160a01b038416610d905760405163e602df0560e01b8152600060048201526024016105cc565b6001600160a01b038316610dba57604051634a1406b160e11b8152600060048201526024016105cc565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610afc57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2d91815260200190565b60405180910390a350505050565b6001600160a01b038316610e66578060026000828254610e5b9190611395565b90915550610ed89050565b6001600160a01b03831660009081526020819052604090205481811015610eb95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105cc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ef457600280548290039055610f13565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f5891815260200190565b60405180910390a3505050565b60055460ff166105495760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105cc565b60055460ff16156105495760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105cc565b60006110096001600160a01b03841683611057565b9050805160001415801561102e57508080602001905181019061102c91906113a8565b155b15610a7f57604051635274afe760e01b81526001600160a01b03841660048201526024016105cc565b60606105328383600084600080856001600160a01b0316848660405161107d91906113fa565b60006040518083038185875af1925050503d80600081146110ba576040519150601f19603f3d011682016040523d82523d6000602084013e6110bf565b606091505b50915091506110cf8683836110d9565b9695505050505050565b6060826110ee576110e982611135565b610532565b815115801561110557506001600160a01b0384163b155b1561112e57604051639996b31560e01b81526001600160a01b03851660048201526024016105cc565b5080610532565b8051156111455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461117557600080fd5b919050565b60006020828403121561118c57600080fd5b6105328261115e565b60005b838110156111b0578181015183820152602001611198565b50506000910152565b60208152600082518060208401526111d8816040850160208701611195565b601f01601f19169190910160400192915050565b600080604083850312156111ff57600080fd5b6112088361115e565b946020939093013593505050565b60008060006060848603121561122b57600080fd5b6112348461115e565b92506112426020850161115e565b929592945050506040919091013590565b60006020828403121561126557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0387168152602081018690526040810185905260608101849052821515608082015260c08101600283106112cd57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b600080604083850312156112f157600080fd5b8235915060208301356002811061130757600080fd5b809150509250929050565b6000806040838503121561132557600080fd5b61132e8361115e565b915061133c6020840161115e565b90509250929050565b600181811c9082168061135957607f821691505b60208210810361137957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561050d5761050d61137f565b6000602082840312156113ba57600080fd5b8151801515811461053257600080fd5b808202811582820484141761050d5761050d61137f565b6000600182016113f3576113f361137f565b5060010190565b6000825161140c818460208701611195565b919091019291505056fea26469706673582212205049776f4c986580ec88732a8f9a98540482d1273ffc6b7394a5fe20f423095564736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A23 CODESIZE SUB DUP1 PUSH2 0x1A23 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x2ED JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x2A34B6B2902B34B63630B3B2902A37B5B2B7 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x151595 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x93 DUP3 DUP3 PUSH2 0x3BF JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0x113 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH2 0x101 CALLER PUSH2 0xEE PUSH1 0x12 PUSH1 0xA PUSH2 0x57C JUMP JUMPDEST PUSH2 0xFC SWAP1 PUSH4 0x9502F900 PUSH2 0x592 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x244 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x260 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x309 DUP4 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x317 PUSH1 0x20 DUP5 ADD PUSH2 0x2D1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x34A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x36A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3BA JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x397 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D8 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x3EC DUP2 PUSH2 0x3E6 DUP5 SLOAD PUSH2 0x336 JUMP JUMPDEST DUP5 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x408 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x450 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x430 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x46E JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4CE JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x4C0 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x497 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4E5 JUMPI POP PUSH1 0x1 PUSH2 0x576 JUMP JUMPDEST DUP2 PUSH2 0x4F2 JUMPI POP PUSH1 0x0 PUSH2 0x576 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x508 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x512 JUMPI PUSH2 0x52E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x576 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x47D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x576 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x551 JUMPI POP DUP2 DUP2 EXP PUSH2 0x576 JUMP JUMPDEST PUSH2 0x55E PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x493 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x572 JUMPI PUSH2 0x572 PUSH2 0x47D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x576 JUMPI PUSH2 0x576 PUSH2 0x47D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x576 PUSH2 0x47D JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x144C PUSH2 0x5D7 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x9D0 ADD MSTORE PUSH2 0x144C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0CD40EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xCEC90FE7 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA3C50CFD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x8D3CE8A5 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x47CEE97C EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x584707EB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AB3FED EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH2 0x215 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2FC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x215 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH2 0x3E7 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1345 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x521 DUP6 DUP3 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x52C DUP6 DUP6 DUP6 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x541 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xB94 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x555 CALLER DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP SWAP1 PUSH2 0x58C SWAP1 PUSH1 0xA PUSH2 0x1395 JUMP JUMPDEST GT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DD5C9C995B9D081D1A5B5948195E18D95959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x82DADEEADCE840DCDEE840DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x68A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST POP POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH1 0x0 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x6F9 DUP3 CALLER DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x703 DUP3 DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x71F PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 PUSH32 0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH32 0xFD54FF1ED53F34A900B24C5BA64F85761163B5D82D98A47B9BD80E45466993C5 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE SWAP1 PUSH2 0x13D SWAP1 PUSH1 0xD PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x126C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x7CA JUMPI PUSH2 0x7C7 DUP4 DUP7 PUSH2 0x13CA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x7F1 PUSH2 0x126C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 SUB PUSH2 0x814 JUMPI PUSH2 0x811 DUP3 DUP7 PUSH2 0x13CA JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x82F DUP4 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 DUP8 SWAP1 DUP2 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x126C JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND SWAP3 ISZERO ISZERO SWAP3 DUP4 OR DUP3 SSTORE PUSH1 0xA0 DUP7 ADD MLOAD SWAP4 SWAP5 SWAP2 SWAP3 PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH2 0xFF00 NOT SWAP1 SWAP2 AND OR SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0x126C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x60 DUP6 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC DUP8 MSTORE DUP9 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP7 SWAP1 SWAP7 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x9F8 SWAP4 POP PUSH2 0x100 SWAP1 DIV AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 DUP6 PUSH2 0xD0C JUMP JUMPDEST POP POP POP POP PUSH2 0x703 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xA2B PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x555 ADDRESS CALLER DUP2 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xAFC DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x703 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC7E PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBC9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xAFC SWAP1 DUP6 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAFC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE66 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x1395 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xED8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEF4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF58 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1009 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x102E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x60 PUSH2 0x532 DUP4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10CF DUP7 DUP4 DUP4 PUSH2 0x10D9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10EE JUMPI PUSH2 0x10E9 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1105 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST POP DUP1 PUSH2 0x532 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1145 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x532 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1198 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11D8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1208 DUP4 PUSH2 0x115E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1234 DUP5 PUSH2 0x115E JUMP JUMPDEST SWAP3 POP PUSH2 0x1242 PUSH1 0x20 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x12CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132E DUP4 PUSH2 0x115E JUMP JUMPDEST SWAP2 POP PUSH2 0x133C PUSH1 0x20 DUP5 ADD PUSH2 0x115E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1359 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1379 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x50D JUMPI PUSH2 0x50D PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x50D JUMPI PUSH2 0x50D PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x137F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x140C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1195 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BLOBHASH PUSH24 0x6F4C986580EC88732A8F9A98540482D1273FFC6B7394A5FE KECCAK256 DELEGATECALL 0x23 MULMOD SSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "558:3246:14:-:0;;;1525:294;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1625:12;1896:113:5;;;;;;;;;;;;;-1:-1:-1;;;1896:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:5;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:5;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;996:7:3;:15;;-1:-1:-1;;996:15:3;;;-1:-1:-1;;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;3281:51:15;3254:18;;1322:31:1;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:4;1821:7;:22;1644:48:14::2;1650:10;1675:16;3075:2:5::0;1675::14::2;:16;:::i;:::-;1662:29;::::0;:10:::2;:29;:::i;:::-;1644:5;:48::i;:::-;-1:-1:-1::0;;;;;;1784:28:14::2;;::::0;558:3246;;2912:187:1;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:5:-;-1:-1:-1;;;;;7791:21:5;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:5;;7864:1;7835:32;;;3281:51:15;3254:18;;7835:32:5;3135:203:15;7787:91:5;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:5;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:5;;-1:-1:-1;6356:540:5;;-1:-1:-1;;;;;6570:15:5;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:5;;-1:-1:-1;;;;;5430:32:15;;6649:50:5;;;5412:51:15;5479:18;;;5472:34;;;5522:18;;;5515:34;;;5385:18;;6649:50:5;5210:345:15;6599:115:5;-1:-1:-1;;;;;6834:15:5;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:5;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:5;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:5;7355:4;-1:-1:-1;;;;;7346:25:5;;7365:5;7346:25;;;;5706::15;;5694:2;5679:18;;5560:177;7346:25:5;;;;;;;;6271:1107;;;:::o;14:177:15:-;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:518::-;1239:2;1234:3;1231:11;1228:421;;;1275:5;1272:1;1265:16;1319:4;1316:1;1306:18;1389:2;1377:10;1373:19;1370:1;1366:27;1360:4;1356:38;1425:4;1413:10;1410:20;1407:47;;;-1:-1:-1;1448:4:15;1407:47;1503:2;1498:3;1494:12;1491:1;1487:20;1481:4;1477:31;1467:41;;1558:81;1576:2;1569:5;1566:13;1558:81;;;1635:1;1621:16;;1602:1;1591:13;1558:81;;;1562:3;;1228:421;1137:518;;;:::o;1831:1299::-;1951:10;;-1:-1:-1;;;;;1973:30:15;;1970:56;;;2006:18;;:::i;:::-;2035:97;2125:6;2085:38;2117:4;2111:11;2085:38;:::i;:::-;2079:4;2035:97;:::i;:::-;2181:4;2212:2;2201:14;;2229:1;2224:649;;;;2917:1;2934:6;2931:89;;;-1:-1:-1;2986:19:15;;;2980:26;2931:89;-1:-1:-1;;1788:1:15;1784:11;;;1780:24;1776:29;1766:40;1812:1;1808:11;;;1763:57;3033:81;;2194:930;;2224:649;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2260:20:15;;;2378:222;2392:7;2389:1;2386:14;2378:222;;;2474:19;;;2468:26;2453:42;;2581:4;2566:20;;;;2534:1;2522:14;;;;2408:12;2378:222;;;2382:3;2628:6;2619:7;2616:19;2613:201;;;2689:19;;;2683:26;-1:-1:-1;;2772:1:15;2768:14;;;2784:3;2764:24;2760:37;2756:42;2741:58;2726:74;;2613:201;-1:-1:-1;;;;2860:1:15;2844:14;;;2840:22;2827:36;;-1:-1:-1;1831:1299:15:o;3343:127::-;3404:10;3399:3;3395:20;3392:1;3385:31;3435:4;3432:1;3425:15;3459:4;3456:1;3449:15;3475:375;3563:1;3581:5;3595:249;3616:1;3606:8;3603:15;3595:249;;;3666:4;3661:3;3657:14;3651:4;3648:24;3645:50;;;3675:18;;:::i;:::-;3725:1;3715:8;3711:16;3708:49;;;3739:16;;;;3708:49;3822:1;3818:16;;;;;3778:15;;3595:249;;;3475:375;;;;;;:::o;3855:902::-;3904:5;3934:8;3924:80;;-1:-1:-1;3975:1:15;3989:5;;3924:80;4023:4;4013:76;;-1:-1:-1;4060:1:15;4074:5;;4013:76;4105:4;4123:1;4118:59;;;;4191:1;4186:174;;;;4098:262;;4118:59;4148:1;4139:10;;4162:5;;;4186:174;4223:3;4213:8;4210:17;4207:43;;;4230:18;;:::i;:::-;-1:-1:-1;;4286:1:15;4272:16;;4345:5;;4098:262;;4444:2;4434:8;4431:16;4425:3;4419:4;4416:13;4412:36;4406:2;4396:8;4393:16;4388:2;4382:4;4379:12;4375:35;4372:77;4369:203;;;-1:-1:-1;4481:19:15;;;4557:5;;4369:203;4604:42;-1:-1:-1;;4629:8:15;4623:4;4604:42;:::i;:::-;4682:6;4678:1;4674:6;4670:19;4661:7;4658:32;4655:58;;;4693:18;;:::i;:::-;4731:20;;-1:-1:-1;3855:902:15;;;;;:::o;4762:140::-;4820:5;4849:47;4890:4;4880:8;4876:19;4870:4;4849:47;:::i;:::-;4840:56;4762:140;-1:-1:-1;;;4762:140:15:o;4907:168::-;4980:9;;;5011;;5028:15;;;5022:22;;5008:37;4998:71;;5049:18;;:::i;5080:125::-;5145:9;;;5166:10;;;5163:36;;;5179:18;;:::i;5560:177::-;558:3246:14;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddToken_1998": {
									"entryPoint": 2595,
									"id": 1998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Claim_2195": {
									"entryPoint": 1368,
									"id": 2195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@IsClaim_1887": {
									"entryPoint": null,
									"id": 1887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NumberOfBuying_1941": {
									"entryPoint": null,
									"id": 1941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TokenRecord_1925": {
									"entryPoint": null,
									"id": 1925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TokenRecords_1932": {
									"entryPoint": null,
									"id": 1932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_909": {
									"entryPoint": 2674,
									"id": 909,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_969": {
									"entryPoint": 3430,
									"id": 969,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_891": {
									"entryPoint": 3046,
									"id": 891,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1444": {
									"entryPoint": 4084,
									"id": 1444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 2913,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1759": {
									"entryPoint": null,
									"id": 1759,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_483": {
									"entryPoint": 3251,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_421": {
									"entryPoint": 3190,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_394": {
									"entryPoint": 4014,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_405": {
									"entryPoint": 3941,
									"id": 405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1746": {
									"entryPoint": 4405,
									"id": 1746,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1017": {
									"entryPoint": 2692,
									"id": 1017,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 3100,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_748": {
									"entryPoint": 2818,
									"id": 748,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_437": {
									"entryPoint": 2964,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_825": {
									"entryPoint": 3643,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_645": {
									"entryPoint": null,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_669": {
									"entryPoint": 1273,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_604": {
									"entryPoint": null,
									"id": 604,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1141": {
									"entryPoint": 1774,
									"id": 1141,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1120": {
									"entryPoint": 1355,
									"id": 1120,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_2131": {
									"entryPoint": 1815,
									"id": 2131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_582": {
									"entryPoint": null,
									"id": 582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_1614": {
									"entryPoint": null,
									"id": 1614,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1568": {
									"entryPoint": 4183,
									"id": 1568,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_1809": {
									"entryPoint": null,
									"id": 1809,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_564": {
									"entryPoint": 1127,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2204": {
									"entryPoint": 1799,
									"id": 2204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_1874": {
									"entryPoint": null,
									"id": 1874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 1756,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1281": {
									"entryPoint": 3340,
									"id": 1281,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@symbol_573": {
									"entryPoint": 2566,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_591": {
									"entryPoint": null,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_701": {
									"entryPoint": 1299,
									"id": 701,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_172": {
									"entryPoint": 2615,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_628": {
									"entryPoint": 2581,
									"id": 628,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2213": {
									"entryPoint": 1337,
									"id": 2213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1706": {
									"entryPoint": 4313,
									"id": 1706,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_currency_$1944": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_currency_$1944__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_571dc229ebeeedb973ca475ca2d614d0a8a423c6dd3e0c3cd152517da026ba06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d875edc01e8f04554575c3df743ebe9dd1ce1a0512aabbdb136a8dcc2c8754bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_uint256_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9295:15",
										"nodeType": "YulBlock",
										"src": "0:9295:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:15",
													"nodeType": "YulBlock",
													"src": "63:124:15",
													"statements": [
														{
															"nativeSrc": "73:29:15",
															"nodeType": "YulAssignment",
															"src": "73:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:15"
																},
																"nativeSrc": "82:20:15",
																"nodeType": "YulFunctionCall",
																"src": "82:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:15",
																"nodeType": "YulBlock",
																"src": "165:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:15",
																					"nodeType": "YulLiteral",
																					"src": "174:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:15",
																					"nodeType": "YulLiteral",
																					"src": "177:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:15"
																			},
																			"nativeSrc": "167:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:15"
																		},
																		"nativeSrc": "167:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:15",
																										"nodeType": "YulLiteral",
																										"src": "150:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:15",
																										"nodeType": "YulLiteral",
																										"src": "155:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:15"
																								},
																								"nativeSrc": "146:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:15",
																								"nodeType": "YulLiteral",
																								"src": "159:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:15"
																						},
																						"nativeSrc": "142:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:15"
																				},
																				"nativeSrc": "131:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:15"
																		},
																		"nativeSrc": "121:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:15"
																},
																"nativeSrc": "114:50:15",
																"nodeType": "YulFunctionCall",
																"src": "114:50:15"
															},
															"nativeSrc": "111:70:15",
															"nodeType": "YulIf",
															"src": "111:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:15",
														"nodeType": "YulTypedName",
														"src": "42:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:15",
														"nodeType": "YulTypedName",
														"src": "53:5:15",
														"type": ""
													}
												],
												"src": "14:173:15"
											},
											{
												"body": {
													"nativeSrc": "262:116:15",
													"nodeType": "YulBlock",
													"src": "262:116:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:15",
																"nodeType": "YulBlock",
																"src": "308:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:15",
																					"nodeType": "YulLiteral",
																					"src": "317:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:15",
																					"nodeType": "YulLiteral",
																					"src": "320:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:15"
																			},
																			"nativeSrc": "310:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:15"
																		},
																		"nativeSrc": "310:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:15"
																		},
																		"nativeSrc": "279:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:15",
																		"nodeType": "YulLiteral",
																		"src": "304:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:15"
																},
																"nativeSrc": "275:32:15",
																"nodeType": "YulFunctionCall",
																"src": "275:32:15"
															},
															"nativeSrc": "272:52:15",
															"nodeType": "YulIf",
															"src": "272:52:15"
														},
														{
															"nativeSrc": "333:39:15",
															"nodeType": "YulAssignment",
															"src": "333:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:15"
																},
																"nativeSrc": "343:29:15",
																"nodeType": "YulFunctionCall",
																"src": "343:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:15",
														"nodeType": "YulTypedName",
														"src": "228:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:15",
														"nodeType": "YulTypedName",
														"src": "239:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:15",
														"nodeType": "YulTypedName",
														"src": "251:6:15",
														"type": ""
													}
												],
												"src": "192:186:15"
											},
											{
												"body": {
													"nativeSrc": "484:76:15",
													"nodeType": "YulBlock",
													"src": "484:76:15",
													"statements": [
														{
															"nativeSrc": "494:26:15",
															"nodeType": "YulAssignment",
															"src": "494:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:15",
																		"nodeType": "YulLiteral",
																		"src": "517:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:15"
																},
																"nativeSrc": "502:18:15",
																"nodeType": "YulFunctionCall",
																"src": "502:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:15"
																},
																"nativeSrc": "529:25:15",
																"nodeType": "YulFunctionCall",
																"src": "529:25:15"
															},
															"nativeSrc": "529:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:15",
														"nodeType": "YulTypedName",
														"src": "453:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:15",
														"nodeType": "YulTypedName",
														"src": "464:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:15",
														"nodeType": "YulTypedName",
														"src": "475:4:15",
														"type": ""
													}
												],
												"src": "383:177:15"
											},
											{
												"body": {
													"nativeSrc": "631:184:15",
													"nodeType": "YulBlock",
													"src": "631:184:15",
													"statements": [
														{
															"nativeSrc": "641:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "641:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "650:1:15",
																"nodeType": "YulLiteral",
																"src": "650:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "645:1:15",
																	"nodeType": "YulTypedName",
																	"src": "645:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "710:63:15",
																"nodeType": "YulBlock",
																"src": "710:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "735:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "735:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "740:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "740:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "731:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "731:3:15"
																					},
																					"nativeSrc": "731:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "731:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "754:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "754:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "759:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "759:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "750:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "750:3:15"
																							},
																							"nativeSrc": "750:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "750:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "744:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "744:5:15"
																					},
																					"nativeSrc": "744:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "744:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "724:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:15"
																			},
																			"nativeSrc": "724:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "724:39:15"
																		},
																		"nativeSrc": "724:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "724:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "671:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "671:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "674:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "674:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "668:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:15"
																},
																"nativeSrc": "668:13:15",
																"nodeType": "YulFunctionCall",
																"src": "668:13:15"
															},
															"nativeSrc": "660:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "682:19:15",
																"nodeType": "YulBlock",
																"src": "682:19:15",
																"statements": [
																	{
																		"nativeSrc": "684:15:15",
																		"nodeType": "YulAssignment",
																		"src": "684:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "693:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "693:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:2:15",
																					"nodeType": "YulLiteral",
																					"src": "696:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "689:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "689:3:15"
																			},
																			"nativeSrc": "689:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "689:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "684:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "684:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "664:3:15",
																"nodeType": "YulBlock",
																"src": "664:3:15",
																"statements": []
															},
															"src": "660:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "793:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "793:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "798:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:15"
																		},
																		"nativeSrc": "789:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "789:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "807:1:15",
																		"nodeType": "YulLiteral",
																		"src": "807:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:15"
																},
																"nativeSrc": "782:27:15",
																"nodeType": "YulFunctionCall",
																"src": "782:27:15"
															},
															"nativeSrc": "782:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "782:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "565:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "609:3:15",
														"nodeType": "YulTypedName",
														"src": "609:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "614:3:15",
														"nodeType": "YulTypedName",
														"src": "614:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "619:6:15",
														"nodeType": "YulTypedName",
														"src": "619:6:15",
														"type": ""
													}
												],
												"src": "565:250:15"
											},
											{
												"body": {
													"nativeSrc": "941:275:15",
													"nodeType": "YulBlock",
													"src": "941:275:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "958:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "958:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "969:2:15",
																		"nodeType": "YulLiteral",
																		"src": "969:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "951:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:15"
																},
																"nativeSrc": "951:21:15",
																"nodeType": "YulFunctionCall",
																"src": "951:21:15"
															},
															"nativeSrc": "951:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "951:21:15"
														},
														{
															"nativeSrc": "981:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "981:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1001:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "995:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "995:5:15"
																},
																"nativeSrc": "995:13:15",
																"nodeType": "YulFunctionCall",
																"src": "995:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "985:6:15",
																	"nodeType": "YulTypedName",
																	"src": "985:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1028:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1039:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1039:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1024:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:15"
																		},
																		"nativeSrc": "1024:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1024:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1044:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1017:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:15"
																},
																"nativeSrc": "1017:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1017:34:15"
															},
															"nativeSrc": "1017:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1017:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1099:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1099:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1107:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1107:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1095:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:15"
																		},
																		"nativeSrc": "1095:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1116:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1116:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1127:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1127:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1112:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:15"
																		},
																		"nativeSrc": "1112:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:18:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1132:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1060:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "1060:34:15"
																},
																"nativeSrc": "1060:79:15",
																"nodeType": "YulFunctionCall",
																"src": "1060:79:15"
															},
															"nativeSrc": "1060:79:15",
															"nodeType": "YulExpressionStatement",
															"src": "1060:79:15"
														},
														{
															"nativeSrc": "1148:62:15",
															"nodeType": "YulAssignment",
															"src": "1148:62:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1164:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1164:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1183:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "1183:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1191:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1191:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1179:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1179:3:15"
																						},
																						"nativeSrc": "1179:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1179:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1200:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1200:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1196:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1196:3:15"
																						},
																						"nativeSrc": "1196:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1196:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1175:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:15"
																				},
																				"nativeSrc": "1175:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1175:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1160:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1160:3:15"
																		},
																		"nativeSrc": "1160:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1160:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1207:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1207:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1156:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1156:3:15"
																},
																"nativeSrc": "1156:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1156:54:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1148:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1148:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "820:396:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:15",
														"nodeType": "YulTypedName",
														"src": "910:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "921:6:15",
														"nodeType": "YulTypedName",
														"src": "921:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "932:4:15",
														"nodeType": "YulTypedName",
														"src": "932:4:15",
														"type": ""
													}
												],
												"src": "820:396:15"
											},
											{
												"body": {
													"nativeSrc": "1308:213:15",
													"nodeType": "YulBlock",
													"src": "1308:213:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1354:16:15",
																"nodeType": "YulBlock",
																"src": "1354:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1363:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1366:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1356:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1356:6:15"
																			},
																			"nativeSrc": "1356:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:12:15"
																		},
																		"nativeSrc": "1356:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1329:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1329:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1338:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:15"
																		},
																		"nativeSrc": "1325:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1325:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1350:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1350:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1321:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1321:3:15"
																},
																"nativeSrc": "1321:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1321:32:15"
															},
															"nativeSrc": "1318:52:15",
															"nodeType": "YulIf",
															"src": "1318:52:15"
														},
														{
															"nativeSrc": "1379:39:15",
															"nodeType": "YulAssignment",
															"src": "1379:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1408:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1389:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1389:18:15"
																},
																"nativeSrc": "1389:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1389:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1379:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:15"
																}
															]
														},
														{
															"nativeSrc": "1427:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1427:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1440:1:15",
																"nodeType": "YulLiteral",
																"src": "1440:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1431:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1431:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1450:41:15",
															"nodeType": "YulAssignment",
															"src": "1450:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1476:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1476:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1487:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1487:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1472:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:15"
																		},
																		"nativeSrc": "1472:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1472:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1459:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1459:12:15"
																},
																"nativeSrc": "1459:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1459:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1450:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1450:5:15"
																}
															]
														},
														{
															"nativeSrc": "1500:15:15",
															"nodeType": "YulAssignment",
															"src": "1500:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1510:5:15",
																"nodeType": "YulIdentifier",
																"src": "1510:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1500:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1500:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1221:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:15",
														"nodeType": "YulTypedName",
														"src": "1266:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1277:7:15",
														"nodeType": "YulTypedName",
														"src": "1277:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1289:6:15",
														"nodeType": "YulTypedName",
														"src": "1289:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1297:6:15",
														"nodeType": "YulTypedName",
														"src": "1297:6:15",
														"type": ""
													}
												],
												"src": "1221:300:15"
											},
											{
												"body": {
													"nativeSrc": "1621:92:15",
													"nodeType": "YulBlock",
													"src": "1621:92:15",
													"statements": [
														{
															"nativeSrc": "1631:26:15",
															"nodeType": "YulAssignment",
															"src": "1631:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1643:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1643:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1654:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1654:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1639:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1639:3:15"
																},
																"nativeSrc": "1639:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1639:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1631:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1631:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1673:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1673:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1698:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1698:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1691:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1691:6:15"
																				},
																				"nativeSrc": "1691:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1691:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1684:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1684:6:15"
																		},
																		"nativeSrc": "1684:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1684:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1666:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:15"
																},
																"nativeSrc": "1666:41:15",
																"nodeType": "YulFunctionCall",
																"src": "1666:41:15"
															},
															"nativeSrc": "1666:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "1666:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1526:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1590:9:15",
														"nodeType": "YulTypedName",
														"src": "1590:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1601:6:15",
														"nodeType": "YulTypedName",
														"src": "1601:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1612:4:15",
														"nodeType": "YulTypedName",
														"src": "1612:4:15",
														"type": ""
													}
												],
												"src": "1526:187:15"
											},
											{
												"body": {
													"nativeSrc": "1822:270:15",
													"nodeType": "YulBlock",
													"src": "1822:270:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1868:16:15",
																"nodeType": "YulBlock",
																"src": "1868:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1877:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1880:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1880:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1870:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1870:6:15"
																			},
																			"nativeSrc": "1870:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1870:12:15"
																		},
																		"nativeSrc": "1870:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1870:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1852:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1839:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:15"
																		},
																		"nativeSrc": "1839:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1835:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:15"
																},
																"nativeSrc": "1835:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1835:32:15"
															},
															"nativeSrc": "1832:52:15",
															"nodeType": "YulIf",
															"src": "1832:52:15"
														},
														{
															"nativeSrc": "1893:39:15",
															"nodeType": "YulAssignment",
															"src": "1893:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1922:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1922:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1903:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1903:18:15"
																},
																"nativeSrc": "1903:29:15",
																"nodeType": "YulFunctionCall",
																"src": "1903:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1893:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:15"
																}
															]
														},
														{
															"nativeSrc": "1941:48:15",
															"nodeType": "YulAssignment",
															"src": "1941:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1974:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1974:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1985:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1985:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1970:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1970:3:15"
																		},
																		"nativeSrc": "1970:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1970:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1951:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1951:18:15"
																},
																"nativeSrc": "1951:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1951:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1941:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:15"
																}
															]
														},
														{
															"nativeSrc": "1998:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1998:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2011:1:15",
																"nodeType": "YulLiteral",
																"src": "2011:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2002:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2002:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2021:41:15",
															"nodeType": "YulAssignment",
															"src": "2021:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2047:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2047:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2058:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2043:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:15"
																		},
																		"nativeSrc": "2043:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2043:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2030:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:15"
																},
																"nativeSrc": "2030:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2030:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2021:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:15"
																}
															]
														},
														{
															"nativeSrc": "2071:15:15",
															"nodeType": "YulAssignment",
															"src": "2071:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2081:5:15",
																"nodeType": "YulIdentifier",
																"src": "2081:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2071:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2071:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1718:374:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1772:9:15",
														"nodeType": "YulTypedName",
														"src": "1772:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1783:7:15",
														"nodeType": "YulTypedName",
														"src": "1783:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1795:6:15",
														"nodeType": "YulTypedName",
														"src": "1795:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1803:6:15",
														"nodeType": "YulTypedName",
														"src": "1803:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1811:6:15",
														"nodeType": "YulTypedName",
														"src": "1811:6:15",
														"type": ""
													}
												],
												"src": "1718:374:15"
											},
											{
												"body": {
													"nativeSrc": "2194:87:15",
													"nodeType": "YulBlock",
													"src": "2194:87:15",
													"statements": [
														{
															"nativeSrc": "2204:26:15",
															"nodeType": "YulAssignment",
															"src": "2204:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2216:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2216:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2227:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2227:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2212:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2212:3:15"
																},
																"nativeSrc": "2212:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2212:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2204:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2204:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2246:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2246:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2261:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2269:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2269:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2257:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2257:3:15"
																		},
																		"nativeSrc": "2257:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:17:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2239:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:15"
																},
																"nativeSrc": "2239:36:15",
																"nodeType": "YulFunctionCall",
																"src": "2239:36:15"
															},
															"nativeSrc": "2239:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "2239:36:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2097:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2163:9:15",
														"nodeType": "YulTypedName",
														"src": "2163:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2174:6:15",
														"nodeType": "YulTypedName",
														"src": "2174:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2185:4:15",
														"nodeType": "YulTypedName",
														"src": "2185:4:15",
														"type": ""
													}
												],
												"src": "2097:184:15"
											},
											{
												"body": {
													"nativeSrc": "2356:156:15",
													"nodeType": "YulBlock",
													"src": "2356:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2402:16:15",
																"nodeType": "YulBlock",
																"src": "2402:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2411:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2411:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2414:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2414:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2404:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2404:6:15"
																			},
																			"nativeSrc": "2404:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2404:12:15"
																		},
																		"nativeSrc": "2404:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2404:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2377:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2377:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2386:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2386:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2373:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2373:3:15"
																		},
																		"nativeSrc": "2373:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2373:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2398:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2398:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2369:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2369:3:15"
																},
																"nativeSrc": "2369:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2369:32:15"
															},
															"nativeSrc": "2366:52:15",
															"nodeType": "YulIf",
															"src": "2366:52:15"
														},
														{
															"nativeSrc": "2427:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2427:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2440:1:15",
																"nodeType": "YulLiteral",
																"src": "2440:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2431:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2431:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2450:32:15",
															"nodeType": "YulAssignment",
															"src": "2450:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2472:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2459:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2459:12:15"
																},
																"nativeSrc": "2459:23:15",
																"nodeType": "YulFunctionCall",
																"src": "2459:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2450:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2450:5:15"
																}
															]
														},
														{
															"nativeSrc": "2491:15:15",
															"nodeType": "YulAssignment",
															"src": "2491:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2501:5:15",
																"nodeType": "YulIdentifier",
																"src": "2501:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2491:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2286:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2322:9:15",
														"nodeType": "YulTypedName",
														"src": "2322:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2333:7:15",
														"nodeType": "YulTypedName",
														"src": "2333:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2345:6:15",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"src": "2286:226:15"
											},
											{
												"body": {
													"nativeSrc": "2549:95:15",
													"nodeType": "YulBlock",
													"src": "2549:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2573:3:15",
																				"nodeType": "YulLiteral",
																				"src": "2573:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2578:10:15",
																				"nodeType": "YulLiteral",
																				"src": "2578:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2569:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:15"
																		},
																		"nativeSrc": "2569:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2569:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2559:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:15"
																},
																"nativeSrc": "2559:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2559:31:15"
															},
															"nativeSrc": "2559:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2559:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2606:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2606:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2609:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2609:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:15"
																},
																"nativeSrc": "2599:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2599:15:15"
															},
															"nativeSrc": "2599:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2599:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2630:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2630:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2633:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2633:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2623:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:15"
																},
																"nativeSrc": "2623:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2623:15:15"
															},
															"nativeSrc": "2623:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2623:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2517:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "2517:127:15"
											},
											{
												"body": {
													"nativeSrc": "2895:489:15",
													"nodeType": "YulBlock",
													"src": "2895:489:15",
													"statements": [
														{
															"nativeSrc": "2905:27:15",
															"nodeType": "YulAssignment",
															"src": "2905:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2917:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2917:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2928:3:15",
																		"nodeType": "YulLiteral",
																		"src": "2928:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2913:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2913:3:15"
																},
																"nativeSrc": "2913:19:15",
																"nodeType": "YulFunctionCall",
																"src": "2913:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2905:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2905:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2948:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2963:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2979:3:15",
																								"nodeType": "YulLiteral",
																								"src": "2979:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2984:1:15",
																								"nodeType": "YulLiteral",
																								"src": "2984:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2975:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2975:3:15"
																						},
																						"nativeSrc": "2975:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "2975:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2988:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2988:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2971:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2971:3:15"
																				},
																				"nativeSrc": "2971:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2971:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2959:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:15"
																		},
																		"nativeSrc": "2959:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2941:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:15"
																},
																"nativeSrc": "2941:51:15",
																"nodeType": "YulFunctionCall",
																"src": "2941:51:15"
															},
															"nativeSrc": "2941:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "2941:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3012:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3012:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3023:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3023:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3008:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:15"
																		},
																		"nativeSrc": "3008:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3028:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3028:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3001:6:15"
																},
																"nativeSrc": "3001:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3001:34:15"
															},
															"nativeSrc": "3001:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3001:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3055:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3055:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3066:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3066:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3051:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3051:3:15"
																		},
																		"nativeSrc": "3051:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3051:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3071:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3071:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3044:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:15"
																},
																"nativeSrc": "3044:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3044:34:15"
															},
															"nativeSrc": "3044:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3044:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3109:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3109:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:15"
																		},
																		"nativeSrc": "3094:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3094:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3114:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3114:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:15"
																},
																"nativeSrc": "3087:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3087:34:15"
															},
															"nativeSrc": "3087:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3087:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3141:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3141:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3152:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3152:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3137:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:15"
																		},
																		"nativeSrc": "3137:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "3172:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3172:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3165:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3165:6:15"
																				},
																				"nativeSrc": "3165:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3165:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3158:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3158:6:15"
																		},
																		"nativeSrc": "3158:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3158:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3130:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:15"
																},
																"nativeSrc": "3130:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3130:51:15"
															},
															"nativeSrc": "3130:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3130:51:15"
														},
														{
															"body": {
																"nativeSrc": "3223:111:15",
																"nodeType": "YulBlock",
																"src": "3223:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3244:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3244:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3251:3:15",
																							"nodeType": "YulLiteral",
																							"src": "3251:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3256:10:15",
																							"nodeType": "YulLiteral",
																							"src": "3256:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3247:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3247:3:15"
																					},
																					"nativeSrc": "3247:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3247:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3237:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3237:6:15"
																			},
																			"nativeSrc": "3237:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3237:31:15"
																		},
																		"nativeSrc": "3237:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3237:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3288:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3288:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3291:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3291:4:15",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3281:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3281:6:15"
																			},
																			"nativeSrc": "3281:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3281:15:15"
																		},
																		"nativeSrc": "3281:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3281:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3316:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3316:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3319:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3319:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3309:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3309:6:15"
																			},
																			"nativeSrc": "3309:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3309:15:15"
																		},
																		"nativeSrc": "3309:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3309:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "3203:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3203:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3211:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3211:1:15",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3200:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3200:2:15"
																		},
																		"nativeSrc": "3200:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3200:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3193:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:15"
																},
																"nativeSrc": "3193:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3193:21:15"
															},
															"nativeSrc": "3190:144:15",
															"nodeType": "YulIf",
															"src": "3190:144:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3354:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3365:3:15",
																				"nodeType": "YulLiteral",
																				"src": "3365:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:15"
																		},
																		"nativeSrc": "3350:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:19:15"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3371:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3371:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3343:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:15"
																},
																"nativeSrc": "3343:35:15",
																"nodeType": "YulFunctionCall",
																"src": "3343:35:15"
															},
															"nativeSrc": "3343:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "3343:35:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_currency_$1944__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed",
												"nativeSrc": "2649:735:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2824:9:15",
														"nodeType": "YulTypedName",
														"src": "2824:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2835:6:15",
														"nodeType": "YulTypedName",
														"src": "2835:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2843:6:15",
														"nodeType": "YulTypedName",
														"src": "2843:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2851:6:15",
														"nodeType": "YulTypedName",
														"src": "2851:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2859:6:15",
														"nodeType": "YulTypedName",
														"src": "2859:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2867:6:15",
														"nodeType": "YulTypedName",
														"src": "2867:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2875:6:15",
														"nodeType": "YulTypedName",
														"src": "2875:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2886:4:15",
														"nodeType": "YulTypedName",
														"src": "2886:4:15",
														"type": ""
													}
												],
												"src": "2649:735:15"
											},
											{
												"body": {
													"nativeSrc": "3518:102:15",
													"nodeType": "YulBlock",
													"src": "3518:102:15",
													"statements": [
														{
															"nativeSrc": "3528:26:15",
															"nodeType": "YulAssignment",
															"src": "3528:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3540:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3551:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3551:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3536:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3536:3:15"
																},
																"nativeSrc": "3536:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3536:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3528:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3528:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3570:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3570:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3585:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3585:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3601:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3601:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3606:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3606:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3597:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3597:3:15"
																						},
																						"nativeSrc": "3597:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3597:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3610:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3610:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3593:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3593:3:15"
																				},
																				"nativeSrc": "3593:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3593:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3581:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:15"
																		},
																		"nativeSrc": "3581:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:15"
																},
																"nativeSrc": "3563:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3563:51:15"
															},
															"nativeSrc": "3563:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3563:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "3389:231:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:15",
														"nodeType": "YulTypedName",
														"src": "3487:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3498:6:15",
														"nodeType": "YulTypedName",
														"src": "3498:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3509:4:15",
														"nodeType": "YulTypedName",
														"src": "3509:4:15",
														"type": ""
													}
												],
												"src": "3389:231:15"
											},
											{
												"body": {
													"nativeSrc": "3725:289:15",
													"nodeType": "YulBlock",
													"src": "3725:289:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3771:16:15",
																"nodeType": "YulBlock",
																"src": "3771:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3780:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3780:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3783:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3783:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3773:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3773:6:15"
																			},
																			"nativeSrc": "3773:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3773:12:15"
																		},
																		"nativeSrc": "3773:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3773:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3746:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3746:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3755:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3755:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3742:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3742:3:15"
																		},
																		"nativeSrc": "3742:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3742:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3738:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:15"
																},
																"nativeSrc": "3738:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3738:32:15"
															},
															"nativeSrc": "3735:52:15",
															"nodeType": "YulIf",
															"src": "3735:52:15"
														},
														{
															"nativeSrc": "3796:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3796:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3809:1:15",
																"nodeType": "YulLiteral",
																"src": "3809:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3800:5:15",
																	"nodeType": "YulTypedName",
																	"src": "3800:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3819:32:15",
															"nodeType": "YulAssignment",
															"src": "3819:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3841:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3841:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3828:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3828:12:15"
																},
																"nativeSrc": "3828:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3828:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3819:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3819:5:15"
																}
															]
														},
														{
															"nativeSrc": "3860:15:15",
															"nodeType": "YulAssignment",
															"src": "3860:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3870:5:15",
																"nodeType": "YulIdentifier",
																"src": "3870:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3860:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:15"
																}
															]
														},
														{
															"nativeSrc": "3884:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3884:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3916:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3927:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3912:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:15"
																		},
																		"nativeSrc": "3912:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3899:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3899:12:15"
																},
																"nativeSrc": "3899:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3899:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3888:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3888:7:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3966:16:15",
																"nodeType": "YulBlock",
																"src": "3966:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3975:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3975:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3978:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3978:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3968:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3968:6:15"
																			},
																			"nativeSrc": "3968:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3968:12:15"
																		},
																		"nativeSrc": "3968:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3968:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "3953:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3953:7:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3962:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3962:1:15",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3950:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3950:2:15"
																		},
																		"nativeSrc": "3950:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:14:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3943:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3943:6:15"
																},
																"nativeSrc": "3943:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3943:22:15"
															},
															"nativeSrc": "3940:42:15",
															"nodeType": "YulIf",
															"src": "3940:42:15"
														},
														{
															"nativeSrc": "3991:17:15",
															"nodeType": "YulAssignment",
															"src": "3991:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "4001:7:15",
																"nodeType": "YulIdentifier",
																"src": "4001:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3991:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3991:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_currency_$1944",
												"nativeSrc": "3625:389:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3683:9:15",
														"nodeType": "YulTypedName",
														"src": "3683:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3694:7:15",
														"nodeType": "YulTypedName",
														"src": "3694:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3706:6:15",
														"nodeType": "YulTypedName",
														"src": "3706:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3714:6:15",
														"nodeType": "YulTypedName",
														"src": "3714:6:15",
														"type": ""
													}
												],
												"src": "3625:389:15"
											},
											{
												"body": {
													"nativeSrc": "4120:102:15",
													"nodeType": "YulBlock",
													"src": "4120:102:15",
													"statements": [
														{
															"nativeSrc": "4130:26:15",
															"nodeType": "YulAssignment",
															"src": "4130:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4142:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4153:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4138:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4138:3:15"
																},
																"nativeSrc": "4138:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4138:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4130:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4130:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4172:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4172:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4187:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4187:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4203:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4203:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4208:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4208:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4199:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4199:3:15"
																						},
																						"nativeSrc": "4199:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4199:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4212:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4212:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4195:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4195:3:15"
																				},
																				"nativeSrc": "4195:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4195:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4183:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4183:3:15"
																		},
																		"nativeSrc": "4183:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4165:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:15"
																},
																"nativeSrc": "4165:51:15",
																"nodeType": "YulFunctionCall",
																"src": "4165:51:15"
															},
															"nativeSrc": "4165:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "4165:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4019:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4089:9:15",
														"nodeType": "YulTypedName",
														"src": "4089:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4100:6:15",
														"nodeType": "YulTypedName",
														"src": "4100:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4111:4:15",
														"nodeType": "YulTypedName",
														"src": "4111:4:15",
														"type": ""
													}
												],
												"src": "4019:203:15"
											},
											{
												"body": {
													"nativeSrc": "4314:173:15",
													"nodeType": "YulBlock",
													"src": "4314:173:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4360:16:15",
																"nodeType": "YulBlock",
																"src": "4360:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4369:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4372:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4362:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:15"
																			},
																			"nativeSrc": "4362:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:15"
																		},
																		"nativeSrc": "4362:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4335:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4335:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4344:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4344:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4331:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:15"
																		},
																		"nativeSrc": "4331:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4356:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4356:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4327:3:15"
																},
																"nativeSrc": "4327:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4327:32:15"
															},
															"nativeSrc": "4324:52:15",
															"nodeType": "YulIf",
															"src": "4324:52:15"
														},
														{
															"nativeSrc": "4385:39:15",
															"nodeType": "YulAssignment",
															"src": "4385:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4414:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4414:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4395:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4395:18:15"
																},
																"nativeSrc": "4395:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4395:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4385:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:15"
																}
															]
														},
														{
															"nativeSrc": "4433:48:15",
															"nodeType": "YulAssignment",
															"src": "4433:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4466:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4466:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4477:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4477:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4462:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:15"
																		},
																		"nativeSrc": "4462:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4462:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4443:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4443:18:15"
																},
																"nativeSrc": "4443:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4443:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4227:260:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4272:9:15",
														"nodeType": "YulTypedName",
														"src": "4272:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4283:7:15",
														"nodeType": "YulTypedName",
														"src": "4283:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4295:6:15",
														"nodeType": "YulTypedName",
														"src": "4295:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4303:6:15",
														"nodeType": "YulTypedName",
														"src": "4303:6:15",
														"type": ""
													}
												],
												"src": "4227:260:15"
											},
											{
												"body": {
													"nativeSrc": "4705:302:15",
													"nodeType": "YulBlock",
													"src": "4705:302:15",
													"statements": [
														{
															"nativeSrc": "4715:27:15",
															"nodeType": "YulAssignment",
															"src": "4715:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4727:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4727:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4738:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4738:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4723:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4723:3:15"
																},
																"nativeSrc": "4723:19:15",
																"nodeType": "YulFunctionCall",
																"src": "4723:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4715:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4715:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4758:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4769:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4769:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4751:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:15"
																},
																"nativeSrc": "4751:25:15",
																"nodeType": "YulFunctionCall",
																"src": "4751:25:15"
															},
															"nativeSrc": "4751:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "4751:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4796:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4796:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4807:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4807:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4792:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4792:3:15"
																		},
																		"nativeSrc": "4792:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4792:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4812:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4812:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4785:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:15"
																},
																"nativeSrc": "4785:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4785:34:15"
															},
															"nativeSrc": "4785:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4785:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4839:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4839:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4850:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4850:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4835:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4835:3:15"
																		},
																		"nativeSrc": "4835:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4855:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4855:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4828:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:15"
																},
																"nativeSrc": "4828:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4828:34:15"
															},
															"nativeSrc": "4828:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4828:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4882:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4882:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4893:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4893:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4878:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4878:3:15"
																		},
																		"nativeSrc": "4878:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4878:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "4902:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4902:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4918:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4918:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4923:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4923:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4914:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4914:3:15"
																						},
																						"nativeSrc": "4914:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4914:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4927:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4927:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4910:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4910:3:15"
																				},
																				"nativeSrc": "4910:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4910:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4898:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4898:3:15"
																		},
																		"nativeSrc": "4898:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4898:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4871:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4871:6:15"
																},
																"nativeSrc": "4871:60:15",
																"nodeType": "YulFunctionCall",
																"src": "4871:60:15"
															},
															"nativeSrc": "4871:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "4871:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4962:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4962:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4947:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4947:3:15"
																		},
																		"nativeSrc": "4947:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4947:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "4972:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4972:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4988:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4988:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4993:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4993:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4984:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4984:3:15"
																						},
																						"nativeSrc": "4984:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4984:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4997:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4997:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4980:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:15"
																				},
																				"nativeSrc": "4980:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4980:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4968:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4968:3:15"
																		},
																		"nativeSrc": "4968:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4968:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4940:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:15"
																},
																"nativeSrc": "4940:61:15",
																"nodeType": "YulFunctionCall",
																"src": "4940:61:15"
															},
															"nativeSrc": "4940:61:15",
															"nodeType": "YulExpressionStatement",
															"src": "4940:61:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4492:515:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4642:9:15",
														"nodeType": "YulTypedName",
														"src": "4642:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4653:6:15",
														"nodeType": "YulTypedName",
														"src": "4653:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4661:6:15",
														"nodeType": "YulTypedName",
														"src": "4661:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4669:6:15",
														"nodeType": "YulTypedName",
														"src": "4669:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4677:6:15",
														"nodeType": "YulTypedName",
														"src": "4677:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4685:6:15",
														"nodeType": "YulTypedName",
														"src": "4685:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4696:4:15",
														"nodeType": "YulTypedName",
														"src": "4696:4:15",
														"type": ""
													}
												],
												"src": "4492:515:15"
											},
											{
												"body": {
													"nativeSrc": "5067:325:15",
													"nodeType": "YulBlock",
													"src": "5067:325:15",
													"statements": [
														{
															"nativeSrc": "5077:22:15",
															"nodeType": "YulAssignment",
															"src": "5077:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5091:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5091:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5094:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5094:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5087:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5087:3:15"
																},
																"nativeSrc": "5087:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5087:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:15"
																}
															]
														},
														{
															"nativeSrc": "5108:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5108:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5138:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5144:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5144:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5134:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5134:3:15"
																},
																"nativeSrc": "5134:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5134:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5112:18:15",
																	"nodeType": "YulTypedName",
																	"src": "5112:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5185:31:15",
																"nodeType": "YulBlock",
																"src": "5185:31:15",
																"statements": [
																	{
																		"nativeSrc": "5187:27:15",
																		"nodeType": "YulAssignment",
																		"src": "5187:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5201:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5201:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5209:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5209:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5197:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5197:3:15"
																			},
																			"nativeSrc": "5197:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5197:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5187:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5187:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5165:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "5165:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5158:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:15"
																},
																"nativeSrc": "5158:26:15",
																"nodeType": "YulFunctionCall",
																"src": "5158:26:15"
															},
															"nativeSrc": "5155:61:15",
															"nodeType": "YulIf",
															"src": "5155:61:15"
														},
														{
															"body": {
																"nativeSrc": "5275:111:15",
																"nodeType": "YulBlock",
																"src": "5275:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5296:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5296:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5303:3:15",
																							"nodeType": "YulLiteral",
																							"src": "5303:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5308:10:15",
																							"nodeType": "YulLiteral",
																							"src": "5308:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5299:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "5299:3:15"
																					},
																					"nativeSrc": "5299:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5299:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5289:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5289:6:15"
																			},
																			"nativeSrc": "5289:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5289:31:15"
																		},
																		"nativeSrc": "5289:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5289:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5340:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5340:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5343:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5343:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5333:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5333:6:15"
																			},
																			"nativeSrc": "5333:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5333:15:15"
																		},
																		"nativeSrc": "5333:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5333:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5368:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5368:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5371:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5371:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5361:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:15"
																			},
																			"nativeSrc": "5361:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5361:15:15"
																		},
																		"nativeSrc": "5361:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5361:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5231:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "5231:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5254:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5254:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5262:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5262:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5251:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5251:2:15"
																		},
																		"nativeSrc": "5251:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5251:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5228:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5228:2:15"
																},
																"nativeSrc": "5228:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5228:38:15"
															},
															"nativeSrc": "5225:161:15",
															"nodeType": "YulIf",
															"src": "5225:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5012:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5047:4:15",
														"nodeType": "YulTypedName",
														"src": "5047:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5056:6:15",
														"nodeType": "YulTypedName",
														"src": "5056:6:15",
														"type": ""
													}
												],
												"src": "5012:380:15"
											},
											{
												"body": {
													"nativeSrc": "5429:95:15",
													"nodeType": "YulBlock",
													"src": "5429:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5446:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5446:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5453:3:15",
																				"nodeType": "YulLiteral",
																				"src": "5453:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5458:10:15",
																				"nodeType": "YulLiteral",
																				"src": "5458:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5449:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:15"
																		},
																		"nativeSrc": "5449:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5439:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5439:6:15"
																},
																"nativeSrc": "5439:31:15",
																"nodeType": "YulFunctionCall",
																"src": "5439:31:15"
															},
															"nativeSrc": "5439:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "5439:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5486:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5486:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5489:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5479:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:15"
																},
																"nativeSrc": "5479:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5479:15:15"
															},
															"nativeSrc": "5479:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "5479:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5510:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5513:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5513:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5503:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5503:6:15"
																},
																"nativeSrc": "5503:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5503:15:15"
															},
															"nativeSrc": "5503:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "5503:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5397:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5397:127:15"
											},
											{
												"body": {
													"nativeSrc": "5577:77:15",
													"nodeType": "YulBlock",
													"src": "5577:77:15",
													"statements": [
														{
															"nativeSrc": "5587:16:15",
															"nodeType": "YulAssignment",
															"src": "5587:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5598:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5598:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5601:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5601:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5594:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:15"
																},
																"nativeSrc": "5594:9:15",
																"nodeType": "YulFunctionCall",
																"src": "5594:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5587:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5626:22:15",
																"nodeType": "YulBlock",
																"src": "5626:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5628:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5628:16:15"
																			},
																			"nativeSrc": "5628:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5628:18:15"
																		},
																		"nativeSrc": "5628:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5628:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5618:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "5618:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5621:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5615:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5615:2:15"
																},
																"nativeSrc": "5615:10:15",
																"nodeType": "YulFunctionCall",
																"src": "5615:10:15"
															},
															"nativeSrc": "5612:36:15",
															"nodeType": "YulIf",
															"src": "5612:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5529:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5560:1:15",
														"nodeType": "YulTypedName",
														"src": "5560:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5563:1:15",
														"nodeType": "YulTypedName",
														"src": "5563:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5569:3:15",
														"nodeType": "YulTypedName",
														"src": "5569:3:15",
														"type": ""
													}
												],
												"src": "5529:125:15"
											},
											{
												"body": {
													"nativeSrc": "5833:169:15",
													"nodeType": "YulBlock",
													"src": "5833:169:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5850:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5850:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5861:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5861:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5843:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:15"
																},
																"nativeSrc": "5843:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5843:21:15"
															},
															"nativeSrc": "5843:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "5843:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5884:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5884:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5895:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5895:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5880:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5880:3:15"
																		},
																		"nativeSrc": "5880:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5880:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:15",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5873:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5873:6:15"
																},
																"nativeSrc": "5873:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5873:30:15"
															},
															"nativeSrc": "5873:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "5873:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5923:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5923:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5934:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5934:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5919:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:15"
																		},
																		"nativeSrc": "5919:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:18:15"
																	},
																	{
																		"hexValue": "43757272656e742074696d6520657863656564",
																		"kind": "string",
																		"nativeSrc": "5939:21:15",
																		"nodeType": "YulLiteral",
																		"src": "5939:21:15",
																		"type": "",
																		"value": "Current time exceed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5912:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:15"
																},
																"nativeSrc": "5912:49:15",
																"nodeType": "YulFunctionCall",
																"src": "5912:49:15"
															},
															"nativeSrc": "5912:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "5912:49:15"
														},
														{
															"nativeSrc": "5970:26:15",
															"nodeType": "YulAssignment",
															"src": "5970:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5982:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5982:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5993:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5993:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5978:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:15"
																},
																"nativeSrc": "5978:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5978:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5970:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5970:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_571dc229ebeeedb973ca475ca2d614d0a8a423c6dd3e0c3cd152517da026ba06__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5659:343:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5810:9:15",
														"nodeType": "YulTypedName",
														"src": "5810:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5824:4:15",
														"nodeType": "YulTypedName",
														"src": "5824:4:15",
														"type": ""
													}
												],
												"src": "5659:343:15"
											},
											{
												"body": {
													"nativeSrc": "6181:166:15",
													"nodeType": "YulBlock",
													"src": "6181:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6198:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6198:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6191:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:15"
																},
																"nativeSrc": "6191:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6191:21:15"
															},
															"nativeSrc": "6191:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "6191:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6232:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6232:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6243:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6243:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6228:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:15"
																		},
																		"nativeSrc": "6228:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6248:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6221:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:15"
																},
																"nativeSrc": "6221:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6221:30:15"
															},
															"nativeSrc": "6221:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6221:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6271:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6271:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6282:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6282:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6267:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6267:3:15"
																		},
																		"nativeSrc": "6267:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6267:18:15"
																	},
																	{
																		"hexValue": "416d6f756e74206e6f74206d61746368",
																		"kind": "string",
																		"nativeSrc": "6287:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6287:18:15",
																		"type": "",
																		"value": "Amount not match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6260:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:15"
																},
																"nativeSrc": "6260:46:15",
																"nodeType": "YulFunctionCall",
																"src": "6260:46:15"
															},
															"nativeSrc": "6260:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "6260:46:15"
														},
														{
															"nativeSrc": "6315:26:15",
															"nodeType": "YulAssignment",
															"src": "6315:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6327:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6327:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6338:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6338:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6323:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6323:3:15"
																},
																"nativeSrc": "6323:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6323:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6315:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6315:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d875edc01e8f04554575c3df743ebe9dd1ce1a0512aabbdb136a8dcc2c8754bd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6007:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6158:9:15",
														"nodeType": "YulTypedName",
														"src": "6158:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6172:4:15",
														"nodeType": "YulTypedName",
														"src": "6172:4:15",
														"type": ""
													}
												],
												"src": "6007:340:15"
											},
											{
												"body": {
													"nativeSrc": "6481:145:15",
													"nodeType": "YulBlock",
													"src": "6481:145:15",
													"statements": [
														{
															"nativeSrc": "6491:26:15",
															"nodeType": "YulAssignment",
															"src": "6491:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:15"
																},
																"nativeSrc": "6499:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6533:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6533:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6548:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6548:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6564:3:15",
																								"nodeType": "YulLiteral",
																								"src": "6564:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6569:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6569:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6560:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6560:3:15"
																						},
																						"nativeSrc": "6560:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6560:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6573:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6573:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6556:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6556:3:15"
																				},
																				"nativeSrc": "6556:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6556:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6544:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6544:3:15"
																		},
																		"nativeSrc": "6544:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6544:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6526:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6526:6:15"
																},
																"nativeSrc": "6526:51:15",
																"nodeType": "YulFunctionCall",
																"src": "6526:51:15"
															},
															"nativeSrc": "6526:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "6526:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6597:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6597:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6608:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6608:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6593:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6593:3:15"
																		},
																		"nativeSrc": "6593:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6593:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6613:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6586:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:15"
																},
																"nativeSrc": "6586:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6586:34:15"
															},
															"nativeSrc": "6586:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6586:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6352:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6442:9:15",
														"nodeType": "YulTypedName",
														"src": "6442:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6453:6:15",
														"nodeType": "YulTypedName",
														"src": "6453:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6461:6:15",
														"nodeType": "YulTypedName",
														"src": "6461:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6472:4:15",
														"nodeType": "YulTypedName",
														"src": "6472:4:15",
														"type": ""
													}
												],
												"src": "6352:274:15"
											},
											{
												"body": {
													"nativeSrc": "6709:199:15",
													"nodeType": "YulBlock",
													"src": "6709:199:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6755:16:15",
																"nodeType": "YulBlock",
																"src": "6755:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6764:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6764:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6767:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6767:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6757:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6757:6:15"
																			},
																			"nativeSrc": "6757:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6757:12:15"
																		},
																		"nativeSrc": "6757:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6757:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6730:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6730:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6739:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6739:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6726:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:15"
																		},
																		"nativeSrc": "6726:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6726:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6751:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6722:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6722:3:15"
																},
																"nativeSrc": "6722:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6722:32:15"
															},
															"nativeSrc": "6719:52:15",
															"nodeType": "YulIf",
															"src": "6719:52:15"
														},
														{
															"nativeSrc": "6780:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6780:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6799:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6799:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6793:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6793:5:15"
																},
																"nativeSrc": "6793:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6793:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6784:5:15",
																	"nodeType": "YulTypedName",
																	"src": "6784:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6862:16:15",
																"nodeType": "YulBlock",
																"src": "6862:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6871:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6871:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6874:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6874:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6864:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6864:6:15"
																			},
																			"nativeSrc": "6864:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6864:12:15"
																		},
																		"nativeSrc": "6864:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6864:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6831:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6831:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6852:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "6852:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6845:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "6845:6:15"
																						},
																						"nativeSrc": "6845:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6845:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6838:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6838:6:15"
																				},
																				"nativeSrc": "6838:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6838:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6828:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6828:2:15"
																		},
																		"nativeSrc": "6828:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6828:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6821:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6821:6:15"
																},
																"nativeSrc": "6821:40:15",
																"nodeType": "YulFunctionCall",
																"src": "6821:40:15"
															},
															"nativeSrc": "6818:60:15",
															"nodeType": "YulIf",
															"src": "6818:60:15"
														},
														{
															"nativeSrc": "6887:15:15",
															"nodeType": "YulAssignment",
															"src": "6887:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "6897:5:15",
																"nodeType": "YulIdentifier",
																"src": "6897:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6887:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6631:277:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6675:9:15",
														"nodeType": "YulTypedName",
														"src": "6675:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6686:7:15",
														"nodeType": "YulTypedName",
														"src": "6686:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6698:6:15",
														"nodeType": "YulTypedName",
														"src": "6698:6:15",
														"type": ""
													}
												],
												"src": "6631:277:15"
											},
											{
												"body": {
													"nativeSrc": "6965:116:15",
													"nodeType": "YulBlock",
													"src": "6965:116:15",
													"statements": [
														{
															"nativeSrc": "6975:20:15",
															"nodeType": "YulAssignment",
															"src": "6975:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6990:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6990:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6993:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6993:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6986:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:15"
																},
																"nativeSrc": "6986:9:15",
																"nodeType": "YulFunctionCall",
																"src": "6986:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6975:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6975:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7053:22:15",
																"nodeType": "YulBlock",
																"src": "7053:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7055:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7055:16:15"
																			},
																			"nativeSrc": "7055:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7055:18:15"
																		},
																		"nativeSrc": "7055:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7055:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7024:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7024:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7017:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7017:6:15"
																				},
																				"nativeSrc": "7017:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7017:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7031:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "7031:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7038:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "7038:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7047:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "7047:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7034:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7034:3:15"
																						},
																						"nativeSrc": "7034:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7034:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7028:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "7028:2:15"
																				},
																				"nativeSrc": "7028:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7028:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7014:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7014:2:15"
																		},
																		"nativeSrc": "7014:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7014:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7007:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7007:6:15"
																},
																"nativeSrc": "7007:45:15",
																"nodeType": "YulFunctionCall",
																"src": "7007:45:15"
															},
															"nativeSrc": "7004:71:15",
															"nodeType": "YulIf",
															"src": "7004:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6913:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6944:1:15",
														"nodeType": "YulTypedName",
														"src": "6944:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6947:1:15",
														"nodeType": "YulTypedName",
														"src": "6947:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6953:7:15",
														"nodeType": "YulTypedName",
														"src": "6953:7:15",
														"type": ""
													}
												],
												"src": "6913:168:15"
											},
											{
												"body": {
													"nativeSrc": "7133:88:15",
													"nodeType": "YulBlock",
													"src": "7133:88:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7164:22:15",
																"nodeType": "YulBlock",
																"src": "7164:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7166:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7166:16:15"
																			},
																			"nativeSrc": "7166:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7166:18:15"
																		},
																		"nativeSrc": "7166:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7166:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7149:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7149:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7160:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7160:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7156:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:15"
																		},
																		"nativeSrc": "7156:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7156:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7146:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7146:2:15"
																},
																"nativeSrc": "7146:17:15",
																"nodeType": "YulFunctionCall",
																"src": "7146:17:15"
															},
															"nativeSrc": "7143:43:15",
															"nodeType": "YulIf",
															"src": "7143:43:15"
														},
														{
															"nativeSrc": "7195:20:15",
															"nodeType": "YulAssignment",
															"src": "7195:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7206:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7206:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7213:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7213:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7202:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:15"
																},
																"nativeSrc": "7202:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7202:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7195:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "7086:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7115:5:15",
														"nodeType": "YulTypedName",
														"src": "7115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7125:3:15",
														"nodeType": "YulTypedName",
														"src": "7125:3:15",
														"type": ""
													}
												],
												"src": "7086:135:15"
											},
											{
												"body": {
													"nativeSrc": "7383:188:15",
													"nodeType": "YulBlock",
													"src": "7383:188:15",
													"statements": [
														{
															"nativeSrc": "7393:26:15",
															"nodeType": "YulAssignment",
															"src": "7393:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7405:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7405:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7416:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7401:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:15"
																},
																"nativeSrc": "7401:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7401:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7393:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7393:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7435:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7435:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7450:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7450:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7466:3:15",
																								"nodeType": "YulLiteral",
																								"src": "7466:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7471:1:15",
																								"nodeType": "YulLiteral",
																								"src": "7471:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7462:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7462:3:15"
																						},
																						"nativeSrc": "7462:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7462:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7475:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7475:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7458:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7458:3:15"
																				},
																				"nativeSrc": "7458:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7458:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7446:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:15"
																		},
																		"nativeSrc": "7446:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7428:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7428:6:15"
																},
																"nativeSrc": "7428:51:15",
																"nodeType": "YulFunctionCall",
																"src": "7428:51:15"
															},
															"nativeSrc": "7428:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "7428:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7499:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7499:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7510:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7510:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7495:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:15"
																		},
																		"nativeSrc": "7495:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7495:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7515:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7515:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7488:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7488:6:15"
																},
																"nativeSrc": "7488:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7488:34:15"
															},
															"nativeSrc": "7488:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7488:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7542:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7553:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7553:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7538:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:15"
																		},
																		"nativeSrc": "7538:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7538:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7558:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7558:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7531:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:15"
																},
																"nativeSrc": "7531:34:15",
																"nodeType": "YulFunctionCall",
																"src": "7531:34:15"
															},
															"nativeSrc": "7531:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "7531:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7226:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7336:9:15",
														"nodeType": "YulTypedName",
														"src": "7336:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7347:6:15",
														"nodeType": "YulTypedName",
														"src": "7347:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7355:6:15",
														"nodeType": "YulTypedName",
														"src": "7355:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7363:6:15",
														"nodeType": "YulTypedName",
														"src": "7363:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7374:4:15",
														"nodeType": "YulTypedName",
														"src": "7374:4:15",
														"type": ""
													}
												],
												"src": "7226:345:15"
											},
											{
												"body": {
													"nativeSrc": "7750:181:15",
													"nodeType": "YulBlock",
													"src": "7750:181:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7767:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7767:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7778:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7778:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7760:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7760:6:15"
																},
																"nativeSrc": "7760:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7760:21:15"
															},
															"nativeSrc": "7760:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7760:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7801:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7801:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7812:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7812:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7797:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7797:3:15"
																		},
																		"nativeSrc": "7797:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7797:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7817:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7817:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7790:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7790:6:15"
																},
																"nativeSrc": "7790:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7790:30:15"
															},
															"nativeSrc": "7790:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "7790:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7840:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7840:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7851:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7851:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7836:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7836:3:15"
																		},
																		"nativeSrc": "7836:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7836:18:15"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7856:33:15",
																		"nodeType": "YulLiteral",
																		"src": "7856:33:15",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7829:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7829:6:15"
																},
																"nativeSrc": "7829:61:15",
																"nodeType": "YulFunctionCall",
																"src": "7829:61:15"
															},
															"nativeSrc": "7829:61:15",
															"nodeType": "YulExpressionStatement",
															"src": "7829:61:15"
														},
														{
															"nativeSrc": "7899:26:15",
															"nodeType": "YulAssignment",
															"src": "7899:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7911:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7911:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7922:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7922:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7907:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:15"
																},
																"nativeSrc": "7907:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7907:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7899:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7899:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7576:355:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7727:9:15",
														"nodeType": "YulTypedName",
														"src": "7727:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7741:4:15",
														"nodeType": "YulTypedName",
														"src": "7741:4:15",
														"type": ""
													}
												],
												"src": "7576:355:15"
											},
											{
												"body": {
													"nativeSrc": "8093:214:15",
													"nodeType": "YulBlock",
													"src": "8093:214:15",
													"statements": [
														{
															"nativeSrc": "8103:26:15",
															"nodeType": "YulAssignment",
															"src": "8103:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8115:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8115:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8126:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8126:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8111:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8111:3:15"
																},
																"nativeSrc": "8111:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8111:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8103:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8103:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8145:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8145:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8160:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8160:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8176:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8176:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8181:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8181:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8172:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8172:3:15"
																						},
																						"nativeSrc": "8172:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8172:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8185:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8185:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8168:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8168:3:15"
																				},
																				"nativeSrc": "8168:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8168:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8156:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:15"
																		},
																		"nativeSrc": "8156:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8156:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8138:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:15"
																},
																"nativeSrc": "8138:51:15",
																"nodeType": "YulFunctionCall",
																"src": "8138:51:15"
															},
															"nativeSrc": "8138:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "8138:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8209:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8209:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8220:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8220:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8205:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:15"
																		},
																		"nativeSrc": "8205:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8229:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8229:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8245:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8245:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8250:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8250:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8241:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8241:3:15"
																						},
																						"nativeSrc": "8241:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8241:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8254:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8254:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8237:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8237:3:15"
																				},
																				"nativeSrc": "8237:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8237:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:15"
																		},
																		"nativeSrc": "8225:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8225:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8198:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8198:6:15"
																},
																"nativeSrc": "8198:60:15",
																"nodeType": "YulFunctionCall",
																"src": "8198:60:15"
															},
															"nativeSrc": "8198:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "8198:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8278:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8289:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8289:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8274:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:15"
																		},
																		"nativeSrc": "8274:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8274:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8294:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8294:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8267:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:15"
																},
																"nativeSrc": "8267:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8267:34:15"
															},
															"nativeSrc": "8267:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8267:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7936:371:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8046:9:15",
														"nodeType": "YulTypedName",
														"src": "8046:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8057:6:15",
														"nodeType": "YulTypedName",
														"src": "8057:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8065:6:15",
														"nodeType": "YulTypedName",
														"src": "8065:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8073:6:15",
														"nodeType": "YulTypedName",
														"src": "8073:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8084:4:15",
														"nodeType": "YulTypedName",
														"src": "8084:4:15",
														"type": ""
													}
												],
												"src": "7936:371:15"
											},
											{
												"body": {
													"nativeSrc": "8486:170:15",
													"nodeType": "YulBlock",
													"src": "8486:170:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8503:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8503:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8514:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8514:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:15"
																},
																"nativeSrc": "8496:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8496:21:15"
															},
															"nativeSrc": "8496:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8496:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8537:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8537:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8548:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8548:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8533:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:15"
																		},
																		"nativeSrc": "8533:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8526:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8526:6:15"
																},
																"nativeSrc": "8526:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8526:30:15"
															},
															"nativeSrc": "8526:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8526:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8576:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8587:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8587:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8572:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:15"
																		},
																		"nativeSrc": "8572:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:18:15"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "8592:22:15",
																		"nodeType": "YulLiteral",
																		"src": "8592:22:15",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:15"
																},
																"nativeSrc": "8565:50:15",
																"nodeType": "YulFunctionCall",
																"src": "8565:50:15"
															},
															"nativeSrc": "8565:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "8565:50:15"
														},
														{
															"nativeSrc": "8624:26:15",
															"nodeType": "YulAssignment",
															"src": "8624:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8636:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8636:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8647:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8647:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8632:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:15"
																},
																"nativeSrc": "8632:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8632:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8624:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8624:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8312:344:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8463:9:15",
														"nodeType": "YulTypedName",
														"src": "8463:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8477:4:15",
														"nodeType": "YulTypedName",
														"src": "8477:4:15",
														"type": ""
													}
												],
												"src": "8312:344:15"
											},
											{
												"body": {
													"nativeSrc": "8835:166:15",
													"nodeType": "YulBlock",
													"src": "8835:166:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8852:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8852:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8863:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8863:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8845:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8845:6:15"
																},
																"nativeSrc": "8845:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8845:21:15"
															},
															"nativeSrc": "8845:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8845:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8886:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8897:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8897:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8882:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8882:3:15"
																		},
																		"nativeSrc": "8882:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8882:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8902:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8875:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8875:6:15"
																},
																"nativeSrc": "8875:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8875:30:15"
															},
															"nativeSrc": "8875:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8875:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8925:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8925:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8936:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8936:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8921:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:15"
																		},
																		"nativeSrc": "8921:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:18:15"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "8941:18:15",
																		"nodeType": "YulLiteral",
																		"src": "8941:18:15",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8914:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8914:6:15"
																},
																"nativeSrc": "8914:46:15",
																"nodeType": "YulFunctionCall",
																"src": "8914:46:15"
															},
															"nativeSrc": "8914:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "8914:46:15"
														},
														{
															"nativeSrc": "8969:26:15",
															"nodeType": "YulAssignment",
															"src": "8969:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8981:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8981:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8992:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8992:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8977:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8977:3:15"
																},
																"nativeSrc": "8977:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8977:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8969:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8969:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8661:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8812:9:15",
														"nodeType": "YulTypedName",
														"src": "8812:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8826:4:15",
														"nodeType": "YulTypedName",
														"src": "8826:4:15",
														"type": ""
													}
												],
												"src": "8661:340:15"
											},
											{
												"body": {
													"nativeSrc": "9143:150:15",
													"nodeType": "YulBlock",
													"src": "9143:150:15",
													"statements": [
														{
															"nativeSrc": "9153:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9153:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9173:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9173:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9167:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9167:5:15"
																},
																"nativeSrc": "9167:13:15",
																"nodeType": "YulFunctionCall",
																"src": "9167:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9157:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9157:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9228:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9228:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9236:4:15",
																				"nodeType": "YulLiteral",
																				"src": "9236:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9224:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9224:3:15"
																		},
																		"nativeSrc": "9224:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:17:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9243:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9243:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9248:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9248:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9189:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "9189:34:15"
																},
																"nativeSrc": "9189:66:15",
																"nodeType": "YulFunctionCall",
																"src": "9189:66:15"
															},
															"nativeSrc": "9189:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "9189:66:15"
														},
														{
															"nativeSrc": "9264:23:15",
															"nodeType": "YulAssignment",
															"src": "9264:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9275:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9275:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9280:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9280:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9271:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9271:3:15"
																},
																"nativeSrc": "9271:16:15",
																"nodeType": "YulFunctionCall",
																"src": "9271:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9264:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9264:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9006:287:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9119:3:15",
														"nodeType": "YulTypedName",
														"src": "9119:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9124:6:15",
														"nodeType": "YulTypedName",
														"src": "9124:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9135:3:15",
														"nodeType": "YulTypedName",
														"src": "9135:3:15",
														"type": ""
													}
												],
												"src": "9006:287:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_currency_$1944__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        if iszero(lt(value5, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_enum$_currency_$1944(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(lt(value_1, 2)) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_571dc229ebeeedb973ca475ca2d614d0a8a423c6dd3e0c3cd152517da026ba06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Current time exceed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d875edc01e8f04554575c3df743ebe9dd1ce1a0512aabbdb136a8dcc2c8754bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Amount not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1893": [
									{
										"length": 32,
										"start": 2512
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de57806395d89b4111610097578063c0cd40ee11610071578063c0cd40ee14610380578063cec90fe714610393578063dd62ed3e1461041b578063f2fde38b1461045457600080fd5b806395d89b4114610358578063a3c50cfd14610360578063a9059cbb1461036d57600080fd5b8063715018a6146102e1578063741bef1a146102e957806379cc6790146103145780638456cb59146103275780638d3ce8a51461032f5780638da5cb5b1461034257600080fd5b80633f4ba83a116101305780633f4ba83a1461020d57806342966c681461021757806347cee97c1461022a578063584707eb1461023d5780635c975abb146102ad57806370a08231146102b857600080fd5b806302ab3fed1461017857806306fdde03146101ab578063095ea7b3146101c057806318160ddd146101e357806323b872dd146101eb578063313ce567146101fe575b600080fd5b61019861018636600461117a565b600e6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101b3610467565b6040516101a291906111b9565b6101d36101ce3660046111ec565b6104f9565b60405190151581526020016101a2565b600254610198565b6101d36101f9366004611216565b610513565b604051601281526020016101a2565b610215610539565b005b610215610225366004611253565b61054b565b6102156102383660046111ec565b610558565b61029b61024b3660046111ec565b600b602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401546001600160a01b0390931693919290919060ff8082169161010090041686565b6040516101a296959493929190611282565b60055460ff166101d3565b6101986102c636600461117a565b6001600160a01b031660009081526020819052604090205490565b6102156106dc565b6007546102fc906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b6102156103223660046111ec565b6106ee565b610215610707565b61021561033d3660046112de565b610717565b60055461010090046001600160a01b03166102fc565b6101b3610a06565b6009546101d39060ff1681565b6101d361037b3660046111ec565b610a15565b61021561038e366004611253565b610a23565b6103e76103a1366004611312565b600c602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401549293919290916001600160a01b03908116911685565b604080519586526020860194909452928401919091526001600160a01b03908116606084015216608082015260a0016101a2565b610198610429366004611312565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021561046236600461117a565b610a37565b60606003805461047690611345565b80601f01602080910402602001604051908101604052809291908181526020018280546104a290611345565b80156104ef5780601f106104c4576101008083540402835291602001916104ef565b820191906000526020600020905b8154815290600101906020018083116104d257829003601f168201915b5050505050905090565b600033610507818585610a72565b60019150505b92915050565b600033610521858285610a84565b61052c858585610b02565b60019150505b9392505050565b610541610b61565b610549610b94565b565b6105553382610be6565b50565b306000908152600c602090815260408083206001600160a01b0386168452909152902060020154429061058c90600a611395565b11156105d55760405162461bcd60e51b815260206004820152601360248201527210dd5c9c995b9d081d1a5b5948195e18d95959606a1b60448201526064015b60405180910390fd5b306000908152600c602090815260408083206001600160a01b0386168452909152902060010154811461063d5760405162461bcd60e51b815260206004820152601060248201526f082dadeeadce840dcdee840dac2e8c6d60831b60448201526064016105cc565b60405163a9059cbb60e01b81526001600160a01b038316600482015260248101829052309063a9059cbb906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae91906113a8565b5050306000908152600c602090815260408083206001600160a01b0394909416835292905290812060010155565b6106e4610b61565b6105496000610c1c565b6106f9823383610a84565b6107038282610be6565b5050565b61070f610b61565b610549610c76565b61071f610cb3565b600d60205260007f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee81905560018082527ffd54ff1ed53f34a900b24c5ba64f85761163b5d82d98a47b9bd80e45466993c581905560088054820190559061013d90600d60008560018111156107965761079661126c565b60018111156107a7576107a761126c565b8152602001908152602001600020546000036107ca576107c783866113ca565b90505b600d60008560018111156107e0576107e061126c565b60018111156107f1576107f161126c565b8152602001908152602001600020546001036108145761081182866113ca565b90505b336000908152600e6020526040812080549161082f836113e1565b9091555050336000818152600e602090815260409182902054825160c0810184529384529083018890529082018590526060820183905260016080830181905290919060a082019087908111156108885761088861126c565b9052336000908152600b60209081526040808320858452825291829020835181546001600160a01b0319166001600160a01b039091161781559083015160018083019190915591830151600282015560608301516003820155608083015160048201805460ff198116921515928317825560a08601519394919261ffff1990911661ff001990911617906101009084908111156109275761092761126c565b0217905550506040805160a08101825286815260208082018a815242838501908152336060850181815230608087018181526000918252600c875288822084835290965296909620945185559151600185015551600284015592516003830180546001600160a01b03199081166001600160a01b03938416179091559151600490930180549092169281169290921790556005546109f893506101009004166001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016919085610d0c565b505050506107036001600655565b60606004805461047690611345565b600033610507818585610b02565b610a2b610b61565b61055530338184610d0c565b610a3f610b61565b6001600160a01b038116610a6957604051631e4fbdf760e01b8152600060048201526024016105cc565b61055581610c1c565b610a7f8383836001610d66565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610afc5781811015610aed57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105cc565b610afc84848484036000610d66565b50505050565b6001600160a01b038316610b2c57604051634b637e8f60e11b8152600060048201526024016105cc565b6001600160a01b038216610b565760405163ec442f0560e01b8152600060048201526024016105cc565b610a7f838383610e3b565b6005546001600160a01b036101009091041633146105495760405163118cdaa760e01b81523360048201526024016105cc565b610b9c610f65565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610c1057604051634b637e8f60e11b8152600060048201526024016105cc565b61070382600083610e3b565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c7e610fae565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bc93390565b600260065403610d055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cc565b6002600655565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610afc908590610ff4565b6001600160a01b038416610d905760405163e602df0560e01b8152600060048201526024016105cc565b6001600160a01b038316610dba57604051634a1406b160e11b8152600060048201526024016105cc565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610afc57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2d91815260200190565b60405180910390a350505050565b6001600160a01b038316610e66578060026000828254610e5b9190611395565b90915550610ed89050565b6001600160a01b03831660009081526020819052604090205481811015610eb95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105cc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ef457600280548290039055610f13565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f5891815260200190565b60405180910390a3505050565b60055460ff166105495760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105cc565b60055460ff16156105495760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105cc565b60006110096001600160a01b03841683611057565b9050805160001415801561102e57508080602001905181019061102c91906113a8565b155b15610a7f57604051635274afe760e01b81526001600160a01b03841660048201526024016105cc565b60606105328383600084600080856001600160a01b0316848660405161107d91906113fa565b60006040518083038185875af1925050503d80600081146110ba576040519150601f19603f3d011682016040523d82523d6000602084013e6110bf565b606091505b50915091506110cf8683836110d9565b9695505050505050565b6060826110ee576110e982611135565b610532565b815115801561110557506001600160a01b0384163b155b1561112e57604051639996b31560e01b81526001600160a01b03851660048201526024016105cc565b5080610532565b8051156111455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461117557600080fd5b919050565b60006020828403121561118c57600080fd5b6105328261115e565b60005b838110156111b0578181015183820152602001611198565b50506000910152565b60208152600082518060208401526111d8816040850160208701611195565b601f01601f19169190910160400192915050565b600080604083850312156111ff57600080fd5b6112088361115e565b946020939093013593505050565b60008060006060848603121561122b57600080fd5b6112348461115e565b92506112426020850161115e565b929592945050506040919091013590565b60006020828403121561126557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0387168152602081018690526040810185905260608101849052821515608082015260c08101600283106112cd57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b600080604083850312156112f157600080fd5b8235915060208301356002811061130757600080fd5b809150509250929050565b6000806040838503121561132557600080fd5b61132e8361115e565b915061133c6020840161115e565b90509250929050565b600181811c9082168061135957607f821691505b60208210810361137957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561050d5761050d61137f565b6000602082840312156113ba57600080fd5b8151801515811461053257600080fd5b808202811582820484141761050d5761050d61137f565b6000600182016113f3576113f361137f565b5060010190565b6000825161140c818460208701611195565b919091019291505056fea26469706673582212205049776f4c986580ec88732a8f9a98540482d1273ffc6b7394a5fe20f423095564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0CD40EE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xCEC90FE7 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA3C50CFD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x8D3CE8A5 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x47CEE97C EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x584707EB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2AB3FED EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x54B JUMP JUMPDEST PUSH2 0x215 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2FC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x215 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x11EC JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH2 0x3E7 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x215 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x117A JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1345 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x521 DUP6 DUP3 DUP6 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x52C DUP6 DUP6 DUP6 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x541 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xB94 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x555 CALLER DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP SWAP1 PUSH2 0x58C SWAP1 PUSH1 0xA PUSH2 0x1395 JUMP JUMPDEST GT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10DD5C9C995B9D081D1A5B5948195E18D95959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x82DADEEADCE840DCDEE840DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x68A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST POP POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH1 0x0 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x6F9 DUP3 CALLER DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x703 DUP3 DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x71F PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 PUSH32 0x81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH32 0xFD54FF1ED53F34A900B24C5BA64F85761163B5D82D98A47B9BD80E45466993C5 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE SWAP1 PUSH2 0x13D SWAP1 PUSH1 0xD PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x126C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x7CA JUMPI PUSH2 0x7C7 DUP4 DUP7 PUSH2 0x13CA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x7F1 PUSH2 0x126C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 SUB PUSH2 0x814 JUMPI PUSH2 0x811 DUP3 DUP7 PUSH2 0x13CA JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x82F DUP4 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 DUP8 SWAP1 DUP2 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x126C JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND SWAP3 ISZERO ISZERO SWAP3 DUP4 OR DUP3 SSTORE PUSH1 0xA0 DUP7 ADD MLOAD SWAP4 SWAP5 SWAP2 SWAP3 PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH2 0xFF00 NOT SWAP1 SWAP2 AND OR SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0x126C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x60 DUP6 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC DUP8 MSTORE DUP9 DUP3 KECCAK256 DUP5 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP7 SWAP1 SWAP7 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP3 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x9F8 SWAP4 POP PUSH2 0x100 SWAP1 DIV AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 DUP6 PUSH2 0xD0C JUMP JUMPDEST POP POP POP POP PUSH2 0x703 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x476 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xA2B PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x555 ADDRESS CALLER DUP2 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xA3F PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xAFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xAFC DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xA7F DUP4 DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x703 DUP3 PUSH1 0x0 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC7E PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBC9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xAFC SWAP1 DUP6 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAFC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE66 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x1395 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xED8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEF4 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF58 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1009 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x102E JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x102C SWAP2 SWAP1 PUSH2 0x13A8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x60 PUSH2 0x532 DUP4 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10CF DUP7 DUP4 DUP4 PUSH2 0x10D9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10EE JUMPI PUSH2 0x10E9 DUP3 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1105 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5CC JUMP JUMPDEST POP DUP1 PUSH2 0x532 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1145 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x532 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11B0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1198 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11D8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1208 DUP4 PUSH2 0x115E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1234 DUP5 PUSH2 0x115E JUMP JUMPDEST SWAP3 POP PUSH2 0x1242 PUSH1 0x20 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x12CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x1307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132E DUP4 PUSH2 0x115E JUMP JUMPDEST SWAP2 POP PUSH2 0x133C PUSH1 0x20 DUP5 ADD PUSH2 0x115E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1359 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1379 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x50D JUMPI PUSH2 0x50D PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x50D JUMPI PUSH2 0x50D PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x137F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x140C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1195 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BLOBHASH PUSH24 0x6F4C986580EC88732A8F9A98540482D1273FFC6B7394A5FE KECCAK256 DELEGATECALL 0x23 MULMOD SSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "558:3246:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:15;;;517:2;502:18;1442:46:14;;;;;;;;2074:89:5;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1691:14:15;;1684:22;1666:41;;1654:2;1639:18;4293:186:5;1526:187:15;3144:97:5;3222:12;;3144:97;;5039:244;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2239:36:15;;2227:2;2212:18;3002:82:5;2097:184:15;3520:63:14;;;:::i;:::-;;618:87:7;;;;;;:::i;:::-;;:::i;3083:365:14:-;;;;;;:::i;:::-;;:::i;1245:67::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1245:67:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1615:84:3:-;1685:7;;;;1615:84;;3299:116:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:5;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:1;;;:::i;647:38:14:-;;;;;-1:-1:-1;;;;;647:38:14;;;;;;-1:-1:-1;;;;;3581:32:15;;;3563:51;;3551:2;3536:18;647:38:14;3389:231:15;1021:158:7;;;;;;:::i;:::-;;:::i;3456:59:14:-;;;:::i;2006:1069::-;;;;;;:::i;:::-;;:::i;1638:85:1:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:1;1638:85;;2276:93:5;;;:::i;815:19:14:-;;;;;;;;;3610:178:5;;;;;;:::i;:::-;;:::i;1844:144:14:-;;;;;;:::i;:::-;;:::i;1318:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1318:71:14;;;;;;;;;;;4751:25:15;;;4807:2;4792:18;;4785:34;;;;4835:18;;;4828:34;;;;-1:-1:-1;;;;;4898:32:15;;;4893:2;4878:18;;4871:60;4968:32;4962:3;4947:19;;4940:61;4738:3;4723:19;1318:71:14;4492:515:15;3846:140:5;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:5;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:1;;;;;;:::i;:::-;;:::i;2074:89:5:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:12;4420:31:5;735:10:12;4436:7:5;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:12;5182:37:5;5198:4;735:10:12;5213:5:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;3520:63:14:-;1531:13:1;:11;:13::i;:::-;3566:10:14::1;:8;:10::i;:::-;3520:63::o:0;618:87:7:-;672:26;735:10:12;692:5:7;672;:26::i;:::-;618:87;:::o;3083:365:14:-;3173:4;3152:27;;;;:12;:27;;;;;;;;-1:-1:-1;;;;;3152:34:14;;;;;;;;;:39;;;3200:15;;3152:44;;3194:2;3152:44;:::i;:::-;:63;;3144:95;;;;-1:-1:-1;;;3144:95:14;;5861:2:15;3144:95:14;;;5843:21:15;5900:2;5880:18;;;5873:30;-1:-1:-1;;;5919:18:15;;;5912:49;5978:18;;3144:95:14;;;;;;;;;3278:4;3257:27;;;;:12;:27;;;;;;;;-1:-1:-1;;;;;3257:34:14;;;;;;;;;:41;;;:52;;3249:81;;;;-1:-1:-1;;;3249:81:14;;6209:2:15;3249:81:14;;;6191:21:15;6248:2;6228:18;;;6221:30;-1:-1:-1;;;6267:18:15;;;6260:46;6323:18;;3249:81:14;6007:340:15;3249:81:14;3340:46;;-1:-1:-1;;;3340:46:14;;-1:-1:-1;;;;;6544:32:15;;3340:46:14;;;6526:51:15;6593:18;;;6586:34;;;3355:4:14;;3340:30;;6499:18:15;;3340:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3417:4:14;3440:1;3396:27;;;:12;:27;;;;;;;;-1:-1:-1;;;;;3396:34:14;;;;;;;;;;;;:41;;:45;3083:365::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:7:-:0;1096:45;1112:7;735:10:12;1135:5:7;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3456:59:14:-;1531:13:1;:11;:13::i;:::-;3500:8:14::1;:6;:8::i;2006:1069::-:0;2261:21:4;:19;:21::i;:::-;2246:14:14::1;:29;::::0;2157:22:::1;2246:29:::0;:33;;;2182:1:::1;2289:28:::0;;;;:32;;;2331:20:::1;1032:19:13::0;;;;;;2182:1:14;2214:3:::1;::::0;2376:14:::1;:22;2391:6;2376:22;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2403:1;2376:28:::0;2373:91:::1;;2429:23;2438:14:::0;2429:7;:23:::1;:::i;:::-;2420:33;;2373:91;2477:14;:22;2492:6;2477:22;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2504:1;2477:28:::0;2474:90:::1;;2530:22;2539:13:::0;2530:7;:22:::1;:::i;:::-;2521:32;;2474:90;2588:10;2573:26;::::0;;;:14:::1;:26;::::0;;;;:28;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2657:10:14::1;2611:28;2642:26:::0;;;:14:::1;:26;::::0;;;;;;;;;2729:67;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;;;2783:4:::1;2729:67:::0;;;;;;2642:26;;2729:67;;;;;2789:6;;2729:67;::::1;;;;;;:::i;:::-;::::0;;2690:10:::1;2678:23;::::0;;;:11:::1;:23;::::0;;;;;;;:48;;;;;;;;;:118;;;;-1:-1:-1;;;;;;2678:118:14::1;-1:-1:-1::0;;;;;2678:118:14;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;2678:118:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;2678:118:14;::::1;::::0;::::1;;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;:48;;:118;;-1:-1:-1;;2678:118:14;;;-1:-1:-1;;2678:118:14;;;;;::::1;::::0;;;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;;2914:79:14::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;2950:15:::1;2914:79:::0;;;;;;2967:10:::1;2914:79:::0;;;;;;2987:4:::1;2914:79:::0;;;;;;-1:-1:-1;2872:27:14;;;:12:::1;:27:::0;;;;;:39;;;;;;;;;;:121;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;2872:121:14;;::::1;-1:-1:-1::0;;;;;2872:121:14;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1710:6:1;;3003:64:14::1;::::0;-1:-1:-1;1710:6:1;;;;-1:-1:-1;;;;;3010:12:14::1;3003:37;::::0;:64;3062:4;3003:37:::1;:64::i;:::-;2081:994;;;;2303:20:4::0;1716:1;2809:7;:22;2629:209;2276:93:5;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:12;3733:27:5;735:10:12;3750:2:5;3754:5;3733:9;:27::i;1844:144:14:-;1531:13:1;:11;:13::i;:::-;1907:74:14::1;1966:4;1946:10;1966:4:::0;1973:7;1907:38:::1;:74::i;2543:215:1:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;3563:51:15::0;3536:18;;2672:31:1::1;3389:231:15::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;8989:128:5:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:5;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:5;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:5;;-1:-1:-1;;;;;7446:32:15;;10936:60:5;;;7428:51:15;7495:18;;;7488:34;;;7538:18;;;7531:34;;;7401:18;;10936:60:5;7226:345:15;10881:130:5;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:5;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:5;;5807:1;5780:30;;;3563:51:15;3536:18;;5780:30:5;3389:231:15;5735:86:5;-1:-1:-1;;;;;5834:16:5;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:5;;5902:1;5873:32;;;3563:51:15;3536:18;;5873:32:5;3389:231:15;5830:86:5;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:1:-;1710:6;;-1:-1:-1;;;;;1710:6:1;;;;;735:10:12;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:12;1901:40:1;;;3563:51:15;3536:18;;1901:40:1;3389:231:15;2433:117:3;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:3::1;::::0;;2521:22:::1;735:10:12::0;2530:12:3::1;2521:22;::::0;-1:-1:-1;;;;;3581:32:15;;;3563:51;;3551:2;3536:18;2521:22:3::1;;;;;;;2433:117::o:0;8247:206:5:-;-1:-1:-1;;;;;8317:21:5;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:5;;8388:1;8361:30;;;3563:51:15;3536:18;;8361:30:5;3389:231:15;8313:89:5;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:1:-;3004:6;;;-1:-1:-1;;;;;3020:17:1;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:3::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:12::0;;656:96;2336:287:4;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:4;;7778:2:15;2460:63:4;;;7760:21:15;7817:2;7797:18;;;7790:30;7856:33;7836:18;;;7829:61;7907:18;;2460:63:4;7576:355:15;2460:63:4;1759:1;2598:7;:18;2336:287::o;1702:188:10:-;1829:53;;;-1:-1:-1;;;;;8156:32:15;;;1829:53:10;;;8138:51:15;8225:32;;8205:18;;;8198:60;8274:18;;;;8267:34;;;1829:53:10;;;;;;;;;;8111:18:15;;;;1829:53:10;;;;;;;;-1:-1:-1;;;;;1829:53:10;-1:-1:-1;;;1829:53:10;;;1802:81;;1822:5;;1802:19;:81::i;9949:432:5:-;-1:-1:-1;;;;;10061:19:5;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:5;;10132:1;10103:32;;;3563:51:15;3536:18;;10103:32:5;3389:231:15;10057:89:5;-1:-1:-1;;;;;10159:21:5;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:5;;10231:1;10203:31;;;3563:51:15;3536:18;;10203:31:5;3389:231:15;10155:90:5;-1:-1:-1;;;;;10254:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:5;10342:5;-1:-1:-1;;;;;10333:31:5;;10358:5;10333:31;;;;529:25:15;;517:2;502:18;;383:177;10333:31:5;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:5;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:5;;-1:-1:-1;6356:540:5;;-1:-1:-1;;;;;6570:15:5;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:5;;-1:-1:-1;;;;;7446:32:15;;6649:50:5;;;7428:51:15;7495:18;;;7488:34;;;7538:18;;;7531:34;;;7401:18;;6649:50:5;7226:345:15;6599:115:5;-1:-1:-1;;;;;6834:15:5;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:5;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:5;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:5;7355:4;-1:-1:-1;;;;;7346:25:5;;7365:5;7346:25;;;;529::15;;517:2;502:18;;383:177;7346:25:5;;;;;;;;6271:1107;;;:::o;1945:106:3:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:3;;8514:2:15;2003:41:3;;;8496:21:15;8553:2;8533:18;;;8526:30;-1:-1:-1;;;8572:18:15;;;8565:50;8632:18;;2003:41:3;8312:344:15;1767:106:3;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:3;;8863:2:15;1828:38:3;;;8845:21:15;8902:2;8882:18;;;8875:30;-1:-1:-1;;;8921:18:15;;;8914:46;8977:18;;1828:38:3;8661:340:15;4059:629:10;4478:23;4504:33;-1:-1:-1;;;;;4504:27:10;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:10;;-1:-1:-1;;;;;3581:32:15;;4631:40:10;;;3563:51:15;3536:18;;4631:40:10;3389:231:15;2705:151:11;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:11;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:11:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:11;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:11;;-1:-1:-1;;;;;3581:32:15;;5121:24:11;;;3563:51:15;3536:18;;5121:24:11;3389:231:15;5041:119:11;-1:-1:-1;5180:10:11;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:11;;;;;;;;;;;14:173:15;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:250::-;650:1;660:113;674:6;671:1;668:13;660:113;;;750:11;;;744:18;731:11;;;724:39;696:2;689:10;660:113;;;-1:-1:-1;;807:1:15;789:16;;782:27;565:250::o;820:396::-;969:2;958:9;951:21;932:4;1001:6;995:13;1044:6;1039:2;1028:9;1024:18;1017:34;1060:79;1132:6;1127:2;1116:9;1112:18;1107:2;1099:6;1095:15;1060:79;:::i;:::-;1200:2;1179:15;-1:-1:-1;;1175:29:15;1160:45;;;;1207:2;1156:54;;820:396;-1:-1:-1;;820:396:15:o;1221:300::-;1289:6;1297;1350:2;1338:9;1329:7;1325:23;1321:32;1318:52;;;1366:1;1363;1356:12;1318:52;1389:29;1408:9;1389:29;:::i;:::-;1379:39;1487:2;1472:18;;;;1459:32;;-1:-1:-1;;;1221:300:15:o;1718:374::-;1795:6;1803;1811;1864:2;1852:9;1843:7;1839:23;1835:32;1832:52;;;1880:1;1877;1870:12;1832:52;1903:29;1922:9;1903:29;:::i;:::-;1893:39;;1951:38;1985:2;1974:9;1970:18;1951:38;:::i;:::-;1718:374;;1941:48;;-1:-1:-1;;;2058:2:15;2043:18;;;;2030:32;;1718:374::o;2286:226::-;2345:6;2398:2;2386:9;2377:7;2373:23;2369:32;2366:52;;;2414:1;2411;2404:12;2366:52;-1:-1:-1;2459:23:15;;2286:226;-1:-1:-1;2286:226:15:o;2517:127::-;2578:10;2573:3;2569:20;2566:1;2559:31;2609:4;2606:1;2599:15;2633:4;2630:1;2623:15;2649:735;-1:-1:-1;;;;;2959:32:15;;2941:51;;3023:2;3008:18;;3001:34;;;3066:2;3051:18;;3044:34;;;3109:2;3094:18;;3087:34;;;3165:14;;3158:22;3152:3;3137:19;;3130:51;2928:3;2913:19;;3211:1;3200:13;;3190:144;;3256:10;3251:3;3247:20;3244:1;3237:31;3291:4;3288:1;3281:15;3319:4;3316:1;3309:15;3190:144;3371:6;3365:3;3354:9;3350:19;3343:35;2649:735;;;;;;;;;:::o;3625:389::-;3706:6;3714;3767:2;3755:9;3746:7;3742:23;3738:32;3735:52;;;3783:1;3780;3773:12;3735:52;3828:23;;;-1:-1:-1;3927:2:15;3912:18;;3899:32;3962:1;3950:14;;3940:42;;3978:1;3975;3968:12;3940:42;4001:7;3991:17;;;3625:389;;;;;:::o;4227:260::-;4295:6;4303;4356:2;4344:9;4335:7;4331:23;4327:32;4324:52;;;4372:1;4369;4362:12;4324:52;4395:29;4414:9;4395:29;:::i;:::-;4385:39;;4443:38;4477:2;4466:9;4462:18;4443:38;:::i;:::-;4433:48;;4227:260;;;;;:::o;5012:380::-;5091:1;5087:12;;;;5134;;;5155:61;;5209:4;5201:6;5197:17;5187:27;;5155:61;5262:2;5254:6;5251:14;5231:18;5228:38;5225:161;;5308:10;5303:3;5299:20;5296:1;5289:31;5343:4;5340:1;5333:15;5371:4;5368:1;5361:15;5225:161;;5012:380;;;:::o;5397:127::-;5458:10;5453:3;5449:20;5446:1;5439:31;5489:4;5486:1;5479:15;5513:4;5510:1;5503:15;5529:125;5594:9;;;5615:10;;;5612:36;;;5628:18;;:::i;6631:277::-;6698:6;6751:2;6739:9;6730:7;6726:23;6722:32;6719:52;;;6767:1;6764;6757:12;6719:52;6799:9;6793:16;6852:5;6845:13;6838:21;6831:5;6828:32;6818:60;;6874:1;6871;6864:12;6913:168;6986:9;;;7017;;7034:15;;;7028:22;;7014:37;7004:71;;7055:18;;:::i;7086:135::-;7125:3;7146:17;;;7143:43;;7166:18;;:::i;:::-;-1:-1:-1;7213:1:15;7202:13;;7086:135::o;9006:287::-;9135:3;9173:6;9167:13;9189:66;9248:6;9243:3;9236:4;9228:6;9224:17;9189:66;:::i;:::-;9271:16;;;;;9006:287;-1:-1:-1;;9006:287:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1039200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AdminAddToken(uint256)": "infinite",
								"Claim(address,uint256)": "infinite",
								"IsClaim()": "2377",
								"NumberOfBuying(address)": "2532",
								"TokenRecord(address,uint256)": "11416",
								"TokenRecords(address,address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24784",
								"balanceOf(address)": "2662",
								"burn(uint256)": "50966",
								"burnFrom(address,uint256)": "infinite",
								"buyTokens(uint256,uint8)": "infinite",
								"decimals()": "311",
								"name()": "infinite",
								"owner()": "2475",
								"pause()": "infinite",
								"paused()": "2415",
								"priceFeed()": "2382",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "51311",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28479",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "A0"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1525,
									"end": 1819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1525,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1625,
									"end": 1637,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A34B6B2902B34B63630B3B2902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "151595"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3281,
									"end": 3332,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1644,
									"end": 1692,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1650,
									"end": 1660,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1675,
									"end": 1691,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1675,
									"end": 1677,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "A"
								},
								{
									"begin": 1675,
									"end": 1691,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1675,
									"end": 1691,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1675,
									"end": 1691,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 1675,
									"end": 1691,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1691,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1662,
									"end": 1691,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "9502F900"
								},
								{
									"begin": 1662,
									"end": 1691,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 1662,
									"end": 1691,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1691,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1662,
									"end": 1691,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1644,
									"end": 1649,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1644,
									"end": 1692,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1644,
									"end": 1692,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1644,
									"end": 1692,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1784,
									"end": 1812,
									"modifierDepth": 2,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1784,
									"end": 1812,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1784,
									"end": 1812,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3281,
									"end": 3332,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3135,
									"end": 3338,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5430,
									"end": 5462,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5430,
									"end": 5462,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5412,
									"end": 5463,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5479,
									"end": 5497,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 5479,
									"end": 5497,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5479,
									"end": 5497,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5522,
									"end": 5540,
									"name": "PUSH",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 5522,
									"end": 5540,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5522,
									"end": 5540,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5515,
									"end": 5549,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5515,
									"end": 5549,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5515,
									"end": 5549,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5385,
									"end": 5403,
									"name": "PUSH",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 5385,
									"end": 5403,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5210,
									"end": 5555,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5706,
									"end": 5731,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5706,
									"end": 5731,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5694,
									"end": 5696,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5679,
									"end": 5697,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5679,
									"end": 5697,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5560,
									"end": 5737,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 494,
									"end": 621,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 494,
									"end": 621,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 555,
									"end": 565,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 550,
									"end": 553,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 546,
									"end": 566,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 543,
									"end": 544,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 567,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 586,
									"end": 590,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 583,
									"end": 584,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 576,
									"end": 591,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 610,
									"end": 614,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 607,
									"end": 608,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 615,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 705,
									"end": 706,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 701,
									"end": 713,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 701,
									"end": 713,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 748,
									"end": 760,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 748,
									"end": 760,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 811,
									"end": 828,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 801,
									"end": 828,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 801,
									"end": 828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 769,
									"end": 830,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 769,
									"end": 830,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 868,
									"end": 874,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 865,
									"end": 879,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 845,
									"end": 863,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 842,
									"end": 880,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 922,
									"end": 932,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 917,
									"end": 920,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 913,
									"end": 933,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 903,
									"end": 934,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 947,
									"end": 962,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 985,
									"end": 989,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 982,
									"end": 983,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 990,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 839,
									"end": 1000,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 626,
									"end": 1006,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 626,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1239,
									"end": 1241,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1234,
									"end": 1237,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1231,
									"end": 1242,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1275,
									"end": 1280,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1281,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1319,
									"end": 1323,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1377,
									"end": 1387,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1373,
									"end": 1392,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1366,
									"end": 1393,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1356,
									"end": 1394,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1425,
									"end": 1429,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1452,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1498,
									"end": 1501,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1494,
									"end": 1506,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1487,
									"end": 1507,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1508,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1467,
									"end": 1508,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1576,
									"end": 1578,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1569,
									"end": 1574,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1566,
									"end": 1579,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1602,
									"end": 1603,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1591,
									"end": 1604,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 1558,
									"end": 1639,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1562,
									"end": 1565,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 1228,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1655,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1137,
									"end": 1655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1831,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1951,
									"end": 1961,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 2003,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 1970,
									"end": 2026,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 2006,
									"end": 2024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 2006,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2111,
									"end": 2122,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2085,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 2085,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2083,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2035,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2035,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2212,
									"end": 2214,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2229,
									"end": 2230,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2940,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2986,
									"end": 3005,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2980,
									"end": 3006,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 2931,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1784,
									"end": 1795,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1780,
									"end": 1804,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1776,
									"end": 1805,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1766,
									"end": 1806,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1808,
									"end": 1819,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1763,
									"end": 1820,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3033,
									"end": 3114,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2194,
									"end": 3124,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 2224,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1084,
									"end": 1085,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1077,
									"end": 1091,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1121,
									"end": 1125,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1108,
									"end": 1126,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2392,
									"end": 2399,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2386,
									"end": 2400,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2474,
									"end": 2493,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2453,
									"end": 2495,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2581,
									"end": 2585,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2534,
									"end": 2535,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 2378,
									"end": 2600,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2382,
									"end": 2385,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2628,
									"end": 2634,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2619,
									"end": 2626,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2616,
									"end": 2635,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2689,
									"end": 2708,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2683,
									"end": 2709,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2768,
									"end": 2782,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 2764,
									"end": 2788,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2760,
									"end": 2797,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 2756,
									"end": 2798,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2741,
									"end": 2799,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2726,
									"end": 2800,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 2613,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2861,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2844,
									"end": 2858,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2827,
									"end": 2863,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 3130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3343,
									"end": 3470,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 3343,
									"end": 3470,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3404,
									"end": 3414,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 3399,
									"end": 3402,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 3395,
									"end": 3415,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3392,
									"end": 3393,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3385,
									"end": 3416,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3435,
									"end": 3439,
									"name": "PUSH",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3425,
									"end": 3440,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3459,
									"end": 3463,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3456,
									"end": 3457,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3449,
									"end": 3464,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3563,
									"end": 3564,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3581,
									"end": 3586,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3616,
									"end": 3617,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3606,
									"end": 3614,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3618,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3666,
									"end": 3670,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3661,
									"end": 3664,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3657,
									"end": 3671,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 3651,
									"end": 3655,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3648,
									"end": 3672,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3645,
									"end": 3695,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3645,
									"end": 3695,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 3645,
									"end": 3695,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3675,
									"end": 3693,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 3675,
									"end": 3693,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 3675,
									"end": 3693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3675,
									"end": 3693,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 3675,
									"end": 3693,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3715,
									"end": 3723,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3708,
									"end": 3757,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3708,
									"end": 3757,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 3708,
									"end": 3757,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3739,
									"end": 3755,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3739,
									"end": 3755,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3739,
									"end": 3755,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3739,
									"end": 3755,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3708,
									"end": 3757,
									"name": "tag",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 3708,
									"end": 3757,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3822,
									"end": 3823,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3778,
									"end": 3793,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3778,
									"end": 3793,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 3595,
									"end": 3844,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3475,
									"end": 3850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3904,
									"end": 3909,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3942,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 4004,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 3924,
									"end": 4004,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3975,
									"end": 3976,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3989,
									"end": 3994,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 3989,
									"end": 3994,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 4004,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 3924,
									"end": 4004,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4023,
									"end": 4027,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4013,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4013,
									"end": 4089,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4060,
									"end": 4061,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4074,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4074,
									"end": 4079,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4013,
									"end": 4089,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 4013,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4105,
									"end": 4109,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4124,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4191,
									"end": 4192,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4098,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4098,
									"end": 4360,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4118,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4148,
									"end": 4149,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4149,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4139,
									"end": 4149,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4162,
									"end": 4167,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4162,
									"end": 4167,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4162,
									"end": 4167,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4186,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4223,
									"end": 4226,
									"name": "PUSH",
									"source": 15,
									"value": "FF"
								},
								{
									"begin": 4213,
									"end": 4221,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4210,
									"end": 4227,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4207,
									"end": 4250,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4207,
									"end": 4250,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4207,
									"end": 4250,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4230,
									"end": 4248,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4230,
									"end": 4248,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 4230,
									"end": 4248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4230,
									"end": 4248,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4230,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4286,
									"end": 4287,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4272,
									"end": 4288,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4272,
									"end": 4288,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4345,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4345,
									"end": 4350,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4098,
									"end": 4360,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4098,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4098,
									"end": 4360,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4444,
									"end": 4446,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4434,
									"end": 4442,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4431,
									"end": 4447,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4425,
									"end": 4428,
									"name": "PUSH",
									"source": 15,
									"value": "133"
								},
								{
									"begin": 4419,
									"end": 4423,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4416,
									"end": 4429,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4412,
									"end": 4448,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4406,
									"end": 4408,
									"name": "PUSH",
									"source": 15,
									"value": "4E"
								},
								{
									"begin": 4396,
									"end": 4404,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4393,
									"end": 4409,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4388,
									"end": 4390,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 4382,
									"end": 4386,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4379,
									"end": 4391,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4375,
									"end": 4410,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4449,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4572,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4572,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4369,
									"end": 4572,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4481,
									"end": 4500,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4500,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4481,
									"end": 4500,
									"name": "EXP",
									"source": 15
								},
								{
									"begin": 4557,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4557,
									"end": 4562,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4572,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4369,
									"end": 4572,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4604,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "110"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4629,
									"end": 4637,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4623,
									"end": 4627,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4604,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 4604,
									"end": 4646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4604,
									"end": 4646,
									"name": "tag",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 4604,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4682,
									"end": 4688,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4678,
									"end": 4679,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4674,
									"end": 4680,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4670,
									"end": 4689,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4661,
									"end": 4668,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4658,
									"end": 4690,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4655,
									"end": 4713,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4655,
									"end": 4713,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 4655,
									"end": 4713,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 4693,
									"end": 4711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 4693,
									"end": 4711,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4731,
									"end": 4751,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4731,
									"end": 4751,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3855,
									"end": 4757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4762,
									"end": 4902,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 4762,
									"end": 4902,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4820,
									"end": 4825,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4849,
									"end": 4896,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 4890,
									"end": 4894,
									"name": "PUSH",
									"source": 15,
									"value": "FF"
								},
								{
									"begin": 4880,
									"end": 4888,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4876,
									"end": 4895,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4870,
									"end": 4874,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4849,
									"end": 4896,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 4849,
									"end": 4896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4849,
									"end": 4896,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 4849,
									"end": 4896,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4840,
									"end": 4896,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4762,
									"end": 4902,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4762,
									"end": 4902,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4907,
									"end": 5075,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4907,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4980,
									"end": 4989,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4980,
									"end": 4989,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4980,
									"end": 4989,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5011,
									"end": 5020,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5011,
									"end": 5020,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 5043,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 5043,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5028,
									"end": 5043,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5044,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5044,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5008,
									"end": 5045,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 4998,
									"end": 5069,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4998,
									"end": 5069,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5049,
									"end": 5067,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 5049,
									"end": 5067,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5049,
									"end": 5067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5205,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 5080,
									"end": 5205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5154,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5154,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5166,
									"end": 5176,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5166,
									"end": 5176,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5166,
									"end": 5176,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5163,
									"end": 5199,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5163,
									"end": 5199,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 5163,
									"end": 5199,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5179,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 5179,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5179,
									"end": 5197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5560,
									"end": 5737,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 5560,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "ASSIGNIMMUTABLE",
									"source": 14,
									"value": "1893"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 3804,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205049776f4c986580ec88732a8f9a98540482d1273ffc6b7394a5fe20f423095564736f6c634300081a0033",
									".code": [
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "C0CD40EE"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "C0CD40EE"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "CEC90FE7"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "DD62ED3E"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "A3C50CFD"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "741BEF1A"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "79CC6790"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "8456CB59"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "8D3CE8A5"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "3F4BA83A"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "3F4BA83A"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "42966C68"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "47CEE97C"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "584707EB"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "5C975ABB"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "2AB3FED"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "313CE567"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 558,
											"end": 3804,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1442,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1442,
											"end": 1488,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1707,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1526,
											"end": 1713,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2239,
											"end": 2275,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2239,
											"end": 2275,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2097,
											"end": 2281,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3520,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3083,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3083,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1245,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1245,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 685,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 647,
											"end": 685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 647,
											"end": 685,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 647,
											"end": 685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 647,
											"end": 685,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 647,
											"end": 685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 647,
											"end": 685,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 685,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 647,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 3456,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2006,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2006,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 815,
											"end": 834,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 815,
											"end": 834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 815,
											"end": 834,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1844,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 1844,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 1318,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4807,
											"end": 4809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4810,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4792,
											"end": 4810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4819,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4819,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4819,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4828,
											"end": 4862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4930,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4898,
											"end": 4930,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4898,
											"end": 4930,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4871,
											"end": 4931,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 5000,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4947,
											"end": 4966,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4947,
											"end": 4966,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4940,
											"end": 5001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4738,
											"end": 4741,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4723,
											"end": 4742,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4492,
											"end": 5007,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 3520,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 3566,
											"end": 3574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 3566,
											"end": 3576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3566,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 3566,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3520,
											"end": 3583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3083,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3177,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3164,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3179,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3191,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 3152,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3215,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3215,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5900,
											"end": 5902,
											"name": "PUSH",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5880,
											"end": 5898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5903,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DD5C9C995B9D081D1A5B5948195E18D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 3144,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3284,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3291,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3298,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3257,
											"end": 3298,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3298,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3309,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6212,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82DADEEADCE840DCDEE840DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6306,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 6007,
											"end": 6347,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 3249,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6544,
											"end": 6576,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6544,
											"end": 6576,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6526,
											"end": 6577,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6586,
											"end": 6620,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6586,
											"end": 6620,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6586,
											"end": 6620,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3370,
											"name": "PUSH",
											"source": 14,
											"value": "A9059CBB"
										},
										{
											"begin": 3340,
											"end": 3370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 3340,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 3340,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 3421,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 3440,
											"end": 3441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3430,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3396,
											"end": 3437,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3441,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 3456,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 3500,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 3500,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2006,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 2246,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "81955A0A11E65EAC625C29E8882660BAE4E165A75D72780094ACAE8ECE9A29EE"
										},
										{
											"begin": 2246,
											"end": 2279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2279,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2289,
											"end": 2317,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2317,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2317,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2317,
											"name": "PUSH",
											"source": 14,
											"value": "FD54FF1ED53F34A900B24C5BA64F85761163B5D82D98A47B9BD80E45466993C5"
										},
										{
											"begin": 2289,
											"end": 2321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2289,
											"end": 2321,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2182,
											"end": 2183,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2214,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "13D"
										},
										{
											"begin": 2214,
											"end": 2217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2397,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2376,
											"end": 2398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2376,
											"end": 2398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2398,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2403,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2404,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 2373,
											"end": 2464,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 2429,
											"end": 2452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 2429,
											"end": 2452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2453,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2373,
											"end": 2464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 2373,
											"end": 2464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "D"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2477,
											"end": 2499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2477,
											"end": 2499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2504,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2505,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2474,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2474,
											"end": 2564,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2539,
											"end": 2552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 2530,
											"end": 2552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 2530,
											"end": 2552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2474,
											"end": 2564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2474,
											"end": 2564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2598,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 2573,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2599,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 2573,
											"end": 2601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 2573,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2601,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2657,
											"end": 2667,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 2642,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2783,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2668,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2795,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2729,
											"end": 2796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 2729,
											"end": 2796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2729,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2690,
											"end": 2700,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 2678,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2701,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2726,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 2678,
											"end": 2796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2678,
											"end": 2796,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2914,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2950,
											"end": 2965,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 2977,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 2991,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2914,
											"end": 2993,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2899,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2872,
											"end": 2993,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3003,
											"end": 3067,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3010,
											"end": 3022,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 14,
											"value": "1893"
										},
										{
											"begin": 3003,
											"end": 3040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3040,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3067,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 3003,
											"end": 3067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 3003,
											"end": 3067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 1844,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 1966,
											"end": 1970,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1946,
											"end": 1956,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 1980,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1907,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 1907,
											"end": 1981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7446,
											"end": 7478,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7478,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7226,
											"end": 7571,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7778,
											"end": 7780,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7781,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7790,
											"end": 7820,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7856,
											"end": 7889,
											"name": "PUSH",
											"source": 15,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7836,
											"end": 7854,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7829,
											"end": 7890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7907,
											"end": 7925,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7907,
											"end": 7925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7576,
											"end": 7931,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8156,
											"end": 8188,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8188,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8156,
											"end": 8188,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8189,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8225,
											"end": 8257,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8198,
											"end": 8258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8129,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7446,
											"end": 7478,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7478,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7226,
											"end": 7571,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8514,
											"end": 8516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8496,
											"end": 8517,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8526,
											"end": 8556,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8565,
											"end": 8615,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8632,
											"end": 8650,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8312,
											"end": 8656,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8863,
											"end": 8865,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8845,
											"end": 8866,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 8882,
											"end": 8900,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8882,
											"end": 8900,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8882,
											"end": 8900,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8875,
											"end": 8905,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8914,
											"end": 8960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8977,
											"end": 8995,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8977,
											"end": 8995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8661,
											"end": 9001,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3581,
											"end": 3613,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3389,
											"end": 3620,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 565,
											"end": 815,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 565,
											"end": 815,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 650,
											"end": 651,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 668,
											"end": 681,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 660,
											"end": 773,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 660,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 750,
											"end": 761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 750,
											"end": 761,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 750,
											"end": 761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 744,
											"end": 762,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 731,
											"end": 742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 731,
											"end": 742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 731,
											"end": 742,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 724,
											"end": 763,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 696,
											"end": 698,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 699,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 660,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 773,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 805,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 789,
											"end": 805,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 782,
											"end": 809,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 565,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 820,
											"end": 1216,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 820,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 969,
											"end": 971,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 958,
											"end": 967,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 951,
											"end": 972,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 932,
											"end": 936,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1008,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1017,
											"end": 1051,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1109,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 1060,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1060,
											"end": 1139,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 1060,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1204,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1160,
											"end": 1205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1207,
											"end": 1209,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1156,
											"end": 1210,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 820,
											"end": 1216,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 820,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1303,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1325,
											"end": 1348,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1370,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 1318,
											"end": 1370,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1370,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 1318,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 1389,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1418,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 1389,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1418,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1472,
											"end": 1490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1459,
											"end": 1491,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1459,
											"end": 1491,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 2092,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1718,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1839,
											"end": 1862,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1835,
											"end": 1867,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1870,
											"end": 1882,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 1832,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 1903,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 1903,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1932,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1893,
											"end": 1932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 1985,
											"end": 1987,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 1983,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1988,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 1951,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 1951,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 2092,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 2092,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1989,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2061,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2062,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2030,
											"end": 2062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 2092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2512,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2286,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2345,
											"end": 2351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2400,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2377,
											"end": 2384,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2401,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2418,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 2366,
											"end": 2418,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2404,
											"end": 2416,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2418,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 2366,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2512,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2517,
											"end": 2644,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2517,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 2573,
											"end": 2576,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2569,
											"end": 2589,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2633,
											"end": 2637,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2638,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 2992,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 2992,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3023,
											"end": 3025,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3026,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3035,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3078,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3078,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3109,
											"end": 3111,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3158,
											"end": 3180,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3137,
											"end": 3156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3130,
											"end": 3181,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3190,
											"end": 3334,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 3251,
											"end": 3254,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3268,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3291,
											"end": 3295,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3334,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3190,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3365,
											"end": 3368,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3343,
											"end": 3378,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2649,
											"end": 3384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3706,
											"end": 3712,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3767,
											"end": 3769,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3746,
											"end": 3753,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3742,
											"end": 3765,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3738,
											"end": 3770,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3787,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 3735,
											"end": 3787,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3773,
											"end": 3785,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3787,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 3735,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3851,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3899,
											"end": 3931,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3940,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 3940,
											"end": 3982,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3940,
											"end": 3982,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 3940,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3991,
											"end": 4008,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3991,
											"end": 4008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3991,
											"end": 4008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3625,
											"end": 4014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4335,
											"end": 4342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4331,
											"end": 4354,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4327,
											"end": 4359,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4324,
											"end": 4376,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4324,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4324,
											"end": 4376,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4324,
											"end": 4376,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4324,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4395,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4395,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4395,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4395,
											"end": 4424,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4395,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4424,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4443,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4443,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4443,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4443,
											"end": 4481,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4443,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4227,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5392,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 5012,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5155,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 5155,
											"end": 5216,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5209,
											"end": 5213,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5197,
											"end": 5214,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5214,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5155,
											"end": 5216,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 5155,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5251,
											"end": 5265,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5228,
											"end": 5266,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5225,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5225,
											"end": 5386,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5318,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5303,
											"end": 5306,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5299,
											"end": 5319,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5320,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5343,
											"end": 5347,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5371,
											"end": 5375,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5225,
											"end": 5386,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5225,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5225,
											"end": 5386,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5392,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5392,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5397,
											"end": 5524,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 5397,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5468,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5453,
											"end": 5456,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5449,
											"end": 5469,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5470,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5489,
											"end": 5493,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5479,
											"end": 5494,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5518,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5529,
											"end": 5654,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 5529,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 5628,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6908,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 6631,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6698,
											"end": 6704,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6730,
											"end": 6737,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6726,
											"end": 6749,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6722,
											"end": 6754,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6719,
											"end": 6771,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6719,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6719,
											"end": 6771,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6767,
											"end": 6768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6757,
											"end": 6769,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6719,
											"end": 6771,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6719,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6793,
											"end": 6809,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6845,
											"end": 6858,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6831,
											"end": 6836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6828,
											"end": 6860,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6818,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 6818,
											"end": 6878,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6864,
											"end": 6876,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6913,
											"end": 7081,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 6913,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7028,
											"end": 7050,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7028,
											"end": 7050,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7051,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7004,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 7004,
											"end": 7075,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 7055,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7086,
											"end": 7221,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 7086,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7125,
											"end": 7128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 7163,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7146,
											"end": 7163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7146,
											"end": 7163,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7143,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 7143,
											"end": 7186,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 7166,
											"end": 7184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7086,
											"end": 7221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9006,
											"end": 9293,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 9006,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9135,
											"end": 9138,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9173,
											"end": 9179,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9167,
											"end": 9180,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9189,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 9248,
											"end": 9254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9243,
											"end": 9246,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9236,
											"end": 9240,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9228,
											"end": 9234,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9224,
											"end": 9241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9189,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 9189,
											"end": 9255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9189,
											"end": 9255,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 9189,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9271,
											"end": 9287,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9271,
											"end": 9287,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9271,
											"end": 9287,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9271,
											"end": 9287,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9271,
											"end": 9287,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9006,
											"end": 9293,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9006,
											"end": 9293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AdminAddToken(uint256)": "c0cd40ee",
							"Claim(address,uint256)": "47cee97c",
							"IsClaim()": "a3c50cfd",
							"NumberOfBuying(address)": "02ab3fed",
							"TokenRecord(address,uint256)": "584707eb",
							"TokenRecords(address,address)": "cec90fe7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"buyTokens(uint256,uint8)": "8d3ce8a5",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"priceFeed()": "741bef1a",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_UsdcContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AdminAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IsClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NumberOfBuying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenRecord\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claim\",\"type\":\"bool\"},{\"internalType\":\"enum TimeVillageToken.currency\",\"name\":\"choice\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"TokenRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum TimeVillageToken.currency\",\"name\":\"choice\",\"type\":\"uint8\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":\"TimeVillageToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol\":{\"keccak256\":\"0xbac32f5ab2f87ceab4ab5c3f1a4d1a79e07744a49f6bcd4c00700a358c172615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://602f5f835346d85d1b43557f0f098340014a27f426f31e2bd4c0cb2f366b2195\",\"dweb:/ipfs/QmeN2xrNKtK5NTGa1i3Y7euu3DCkZD3wzuy2HGheMVGwRE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 348,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 54,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 449,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1874,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "priceFeed",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 1881,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "numberOfTransactions",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1783_storage"
							},
							{
								"astId": 1887,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "IsClaim",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1889,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "AddminAddress",
								"offset": 1,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1891,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "USDT",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1925,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "TokenRecord",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(userRecord)1907_storage))"
							},
							{
								"astId": 1932,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "TokenRecords",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_mapping(t_address,t_struct(userDetail)1918_storage))"
							},
							{
								"astId": 1937,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "_currencyCoice",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_enum(currency)1944,t_uint256)"
							},
							{
								"astId": 1941,
								"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
								"label": "NumberOfBuying",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_enum(currency)1944": {
								"encoding": "inplace",
								"label": "enum TimeVillageToken.currency",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_struct(userDetail)1918_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => struct TimeVillageToken.userDetail))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(userDetail)1918_storage)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(userRecord)1907_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct TimeVillageToken.userRecord))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(userRecord)1907_storage)"
							},
							"t_mapping(t_address,t_struct(userDetail)1918_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TimeVillageToken.userDetail)",
								"numberOfBytes": "32",
								"value": "t_struct(userDetail)1918_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(currency)1944,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(currency)1944",
								"label": "mapping(enum TimeVillageToken.currency => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(userRecord)1907_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct TimeVillageToken.userRecord)",
								"numberOfBytes": "32",
								"value": "t_struct(userRecord)1907_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1783_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1782,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(userDetail)1918_storage": {
								"encoding": "inplace",
								"label": "struct TimeVillageToken.userDetail",
								"members": [
									{
										"astId": 1909,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1911,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1913,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "time",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1915,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "user",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1917,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "contractAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(userRecord)1907_storage": {
								"encoding": "inplace",
								"label": "struct TimeVillageToken.userRecord",
								"members": [
									{
										"astId": 1895,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1897,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1899,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "currency",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "cost",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "claim",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 1906,
										"contract": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol:TimeVillageToken",
										"label": "choice",
										"offset": 1,
										"slot": "4",
										"type": "t_enum(currency)1944"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1777
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 1778,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								1777
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							330
						],
						"IERC20Errors": [
							235
						],
						"IERC721Errors": [
							283
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 205,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 210,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 215,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 224,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 229,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 234,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 331,
							"src": "278:1764:2",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 241,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 246,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 255,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 260,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 265,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 272,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 277,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 282,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 331,
							"src": "2186:2092:2",
							"usedErrors": [
								241,
								246,
								255,
								260,
								265,
								272,
								277,
								282
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 295,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 300,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 305,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 312,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 317,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 322,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 329,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 331,
							"src": "4424:2107:2",
							"usedErrors": [
								295,
								300,
								305,
								312,
								317,
								322,
								329
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1777
						],
						"Pausable": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 439,
							"sourceUnit": 1778,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "632:7:3"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438,
								1777
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 341,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 346,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 438,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 347,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 357,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 438,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 360,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 363,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 365,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 368,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 371,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 373,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 379,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 378,
												"id": 380,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 438,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 387,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 438,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 399,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 438,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 416,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 415,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 409,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 408,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 365,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 438,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 432,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 431,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 424,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 373,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 438,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 439,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								341,
								346
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 441,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 444,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 443,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 447,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 446,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 448,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 453,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 457,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 503,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 460,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 463,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 468,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 473,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 479,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 503,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 487,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 503,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 498,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 503,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1777
						],
						"ERC20": [
							1018
						],
						"IERC20": [
							1096
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 507,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1019,
							"sourceUnit": 1097,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 506,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1096,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1019,
							"sourceUnit": 1169,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 508,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1019,
							"sourceUnit": 1778,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1019,
							"sourceUnit": 331,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 512,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 235,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 515,
										"name": "Context",
										"nameLocations": [
											"1428:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "1428:7:5"
									},
									"id": 516,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:5"
								},
								{
									"baseName": {
										"id": 517,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1096,
										"src": "1437:6:5"
									},
									"id": 518,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:5"
								},
								{
									"baseName": {
										"id": 519,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "1445:14:5"
									},
									"id": 520,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:5"
								},
								{
									"baseName": {
										"id": 521,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "1461:12:5"
									},
									"id": 522,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 514,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1018,
							"linearizedBaseContracts": [
								1018,
								235,
								1168,
								1096,
								1777
							],
							"name": "ERC20",
							"nameLocation": "1419:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1018,
									"src": "1480:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 525,
										"keyName": "account",
										"keyNameLocation": "1496:7:5",
										"keyType": {
											"id": 523,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 524,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1018,
									"src": "1540:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 531,
										"keyName": "account",
										"keyNameLocation": "1556:7:5",
										"keyType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 530,
											"keyName": "spender",
											"keyNameLocation": "1583:7:5",
											"keyType": {
												"id": 528,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1018,
									"src": "1630:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1018,
									"src": "1665:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 535,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1018,
									"src": "1691:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 537,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1952:57:5",
										"statements": [
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1962:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 547,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "1970:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:5"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "1995:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:5"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 555,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1908:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1929:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:5"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:5"
									},
									"scope": 1018,
									"src": "1896:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2134:29:5",
										"statements": [
											{
												"expression": {
													"id": 561,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2151:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 560,
												"id": 562,
												"nodeType": "Return",
												"src": "2144:12:5"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:5"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2119:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:5"
									},
									"scope": 1018,
									"src": "2074:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1161
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "2338:31:5",
										"statements": [
											{
												"expression": {
													"id": 570,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "2355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 569,
												"id": 571,
												"nodeType": "Return",
												"src": "2348:14:5"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:5"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2323:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:5"
									},
									"scope": 1018,
									"src": "2276:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1167
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3058:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 578,
												"id": 580,
												"nodeType": "Return",
												"src": "3068:9:5"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:5"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3051:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 576,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:5"
									},
									"scope": 1018,
									"src": "3002:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "3205:36:5",
										"statements": [
											{
												"expression": {
													"id": 588,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3222:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 587,
												"id": 589,
												"nodeType": "Return",
												"src": "3215:19:5"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:5"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3196:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:5"
									},
									"scope": 1018,
									"src": "3144:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1053
									],
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "3373:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 599,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3390:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 601,
													"indexExpression": {
														"id": 600,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3400:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 602,
												"nodeType": "Return",
												"src": "3383:25:5"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "3318:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:5"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "3364:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:5"
									},
									"scope": 1018,
									"src": "3299:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "3685:103:5",
										"statements": [
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "3695:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 614,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 616,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "3711:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "3743:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "3750:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3754:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "3733:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 613,
												"id": 626,
												"nodeType": "Return",
												"src": "3770:11:5"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3628:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3640:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:5"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "3679:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:5"
									},
									"scope": 1018,
									"src": "3610:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1073
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "3935:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 638,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "3952:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 640,
														"indexExpression": {
															"id": 639,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "3964:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 642,
													"indexExpression": {
														"id": 641,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "3971:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 643,
												"nodeType": "Return",
												"src": "3945:34:5"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3865:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3880:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:5"
									},
									"scope": 1018,
									"src": "3846:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1083
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4372:107:5",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "4382:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 655,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 659,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 657,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "4398:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4429:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4436:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4445:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															969
														],
														"referencedDeclaration": 909,
														"src": "4420:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 654,
												"id": 667,
												"nodeType": "Return",
												"src": "4461:11:5"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4310:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4327:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:5"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "4366:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:5"
									},
									"scope": 1018,
									"src": "4293:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "5132:151:5",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "5142:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "5160:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5198:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "5204:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5213:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "5182:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5239:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5245:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "5229:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 680,
												"id": 699,
												"nodeType": "Return",
												"src": "5265:11:5"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:5",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5061:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5075:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5087:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:5"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5126:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:5"
									},
									"scope": 1018,
									"src": "5039:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "5725:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "5739:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 712,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "5735:86:5",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "5759:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 718,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 717,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "5780:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 723,
															"nodeType": "RevertStatement",
															"src": "5773:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "5834:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 727,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "5830:86:5",
												"trueBody": {
													"id": 739,
													"nodeType": "Block",
													"src": "5852:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 733,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 732,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5873:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 738,
															"nodeType": "RevertStatement",
															"src": "5866:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "5933:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "5939:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5943:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5925:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:5"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5701:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:5"
									},
									"scope": 1018,
									"src": "5656:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "6346:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6360:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 759,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "6534:362:5",
													"statements": [
														{
															"assignments": [
																770
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 770,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 795,
																	"src": "6548:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 774,
															"initialValue": {
																"baseExpression": {
																	"id": 771,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "6570:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 773,
																"indexExpression": {
																	"id": 772,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6580:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 775,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "6603:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 776,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6617:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 785,
															"nodeType": "IfStatement",
															"src": "6599:115:5",
															"trueBody": {
																"id": 784,
																"nodeType": "Block",
																"src": "6624:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 779,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "6674:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 780,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 770,
																					"src": "6680:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 781,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "6693:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 778,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6649:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 783,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:5"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 786,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6834:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 788,
																			"indexExpression": {
																				"id": 787,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "6844:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 789,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 770,
																				"src": "6852:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 790,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6866:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:5"
																}
															]
														}
													]
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "6356:540:5",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "6380:148:5",
													"statements": [
														{
															"expression": {
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 764,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "6496:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 797,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "6910:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 798,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "7125:206:5",
													"statements": [
														{
															"id": 815,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 809,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "7284:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 811,
																			"indexExpression": {
																				"id": 810,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "7294:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "7301:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 814,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:5"
																}
															]
														}
													]
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "6906:425:5",
												"trueBody": {
													"id": 808,
													"nodeType": "Block",
													"src": "6928:191:5",
													"statements": [
														{
															"id": 807,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 803,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "7073:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 804,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "7089:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 806,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "7355:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7361:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7365:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "7346:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "EmitStatement",
												"src": "7341:30:5"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6288:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6302:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "6314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:5"
									},
									"scope": 1018,
									"src": "6271:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "7777:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 833,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "7791:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "7787:91:5",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "7814:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 840,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 839,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "7835:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 845,
															"nodeType": "RevertStatement",
															"src": "7828:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7907:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7916:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "7887:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:5"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "7736:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "7753:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:5"
									},
									"scope": 1018,
									"src": "7721:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "8303:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "8317:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 867,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "8313:89:5",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "8340:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 873,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 872,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "8361:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 878,
															"nodeType": "RevertStatement",
															"src": "8354:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "8419:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "8440:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "8411:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:5"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "8262:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "8279:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:5"
									},
									"scope": 1018,
									"src": "8247:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "9063:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "9082:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "9089:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "9098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															969
														],
														"referencedDeclaration": 969,
														"src": "9073:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:5"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "9007:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "9022:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "9039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:5"
									},
									"scope": 1018,
									"src": "8989:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "10047:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 921,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "10061:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 922,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "10057:89:5",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "10082:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 928,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 927,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "10103:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 933,
															"nodeType": "RevertStatement",
															"src": "10096:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "10159:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 937,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "IfStatement",
												"src": "10155:90:5",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "10182:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 943,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 942,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "10203:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "10196:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 951,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "10254:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 954,
															"indexExpression": {
																"id": 952,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "10266:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 955,
														"indexExpression": {
															"id": 953,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "10273:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10284:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:5"
											},
											{
												"condition": {
													"id": 959,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 918,
													"src": "10303:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "10299:76:5",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "10314:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "10342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 962,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "10349:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10358:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "10333:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "EmitStatement",
															"src": "10328:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "9967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "9999:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "10014:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:5"
									},
									"scope": 1018,
									"src": "9949:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "10752:388:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "10762:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 979,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"arguments": [
														{
															"id": 982,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "10799:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "10806:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "10789:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "10828:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 988,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 987,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "10824:310:5",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "10867:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 993,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "10885:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 994,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "10904:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1003,
															"nodeType": "IfStatement",
															"src": "10881:130:5",
															"trueBody": {
																"id": 1002,
																"nodeType": "Block",
																"src": "10911:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "10963:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 998,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "10972:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 999,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "10990:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 996,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "10936:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1001,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:5"
																	}
																]
															}
														},
														{
															"id": 1013,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1005,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "11061:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1006,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 974,
																				"src": "11068:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1007,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 980,
																					"src": "11077:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1008,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "11096:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1004,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				909,
																				969
																			],
																			"referencedDeclaration": 969,
																			"src": "11052:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1012,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "10688:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "10703:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "10720:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:5"
									},
									"scope": 1018,
									"src": "10663:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1019,
							"src": "1401:9741:5",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								1030,
								1039
							]
						}
					],
					"src": "105:11038:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1096
						]
					},
					"id": 1097,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1096,
							"linearizedBaseContracts": [
								1096
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1030,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1039,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 1096,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 1096,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 1096,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 1096,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1096,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 1096,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1097,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1030,
								1039
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1777
						],
						"ERC20": [
							1018
						],
						"ERC20Burnable": [
							1142
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1098,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1019,
							"src": "150:35:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1099,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1018,
										"src": "158:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1778,
							"src": "186:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1101,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1777,
										"src": "194:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1104,
										"name": "Context",
										"nameLocations": [
											"483:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1777,
										"src": "483:7:7"
									},
									"id": 1105,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:7"
								},
								{
									"baseName": {
										"id": 1106,
										"name": "ERC20",
										"nameLocations": [
											"492:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "492:5:7"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:7"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1103,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:7",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								1018,
								235,
								1168,
								1096,
								1777
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "662:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1114,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "678:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "692:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "672:26:7"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:7",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "632:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:7"
									},
									"scope": 1142,
									"src": "618:87:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "1086:93:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "1112:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1130,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "1121:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "1135:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "1096:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "1157:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "1166:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "1151:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:7"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:7",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1039:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1056:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:7"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:7"
									},
									"scope": 1142,
									"src": "1021:158:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "448:733:7",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								1030,
								1039
							]
						}
					],
					"src": "124:1058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1096
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1169,
							"sourceUnit": 1097,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1145,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1096,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1148,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1096,
										"src": "305:6:8"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1168,
							"linearizedBaseContracts": [
								1168,
								1096
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 1168,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 1168,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1164,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 1168,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1169,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								1030,
								1039
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1204
						]
					},
					"id": 1205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1171,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:9",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1204,
							"linearizedBaseContracts": [
								1204
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:9",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3022:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3045:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3070:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3093:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3119:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3136:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3155:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:9"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:9"
									},
									"scope": 1204,
									"src": "2997:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:9",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3501:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:9"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3539:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:9"
									},
									"scope": 1204,
									"src": "3485:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:9",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:9"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "3791:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:9"
									},
									"scope": 1204,
									"src": "3740:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1205,
							"src": "2113:1689:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1747
						],
						"IERC20": [
							1096
						],
						"IERC20Permit": [
							1204
						],
						"SafeERC20": [
							1494
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1208,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 1097,
							"src": "141:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1207,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1096,
										"src": "149:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 1210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 1205,
							"src": "179:60:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1209,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1204,
										"src": "187:12:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1495,
							"sourceUnit": 1748,
							"src": "240:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1211,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1747,
										"src": "248:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1213,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:10",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1216,
									"libraryName": {
										"id": 1214,
										"name": "Address",
										"nameLocations": [
											"781:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1747,
										"src": "781:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:10",
									"typeName": {
										"id": 1215,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:10",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1221,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "907:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:10"
									},
									"src": "876:46:10"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:10",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1230,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1043:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1060:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1086:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:10"
									},
									"src": "1004:109:10"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1375:88:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "1405:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1245,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "1427:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1063,
																	"src": "1427:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1247,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1236,
																			"src": "1444:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1248,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "1448:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1249,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:10",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "1385:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:10"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:10",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1325:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1232,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "1325:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "1325:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1339:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1351:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:10"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:10"
									},
									"scope": 1494,
									"src": "1303:160:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "1792:98:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1268,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "1822:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1271,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "1844:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:10",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1095,
																	"src": "1844:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1273,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "1865:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1274,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1871:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1275,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "1875:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1269,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:10",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1267,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "1802:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:10"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:10",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1728:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1256,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "1728:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "1728:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1742:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1756:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1768:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:10"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:10"
									},
									"scope": 1494,
									"src": "1702:188:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "2167:139:10",
										"statements": [
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1311,
														"src": "2177:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1298,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1494",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1494",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1296,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "2231:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1294,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2200:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1073,
														"src": "2200:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2262:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1305,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "2269:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "2278:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "2293:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "2249:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:10"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:10",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "2112:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1283,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "2112:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "2112:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "2126:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "2143:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:10"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:10"
									},
									"scope": 1494,
									"src": "2081:225:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "2607:370:10",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:10",
												"statements": [
													{
														"assignments": [
															1324
														],
														"declarations": [
															{
																"constant": false,
																"id": 1324,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:10",
																"nodeType": "VariableDeclaration",
																"scope": 1353,
																"src": "2641:24:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1323,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1333,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1329,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1494",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1494",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1327,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1331,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "2699:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1325,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "2668:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:10",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1073,
																"src": "2668:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1334,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "2725:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1335,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "2744:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1344,
														"nodeType": "IfStatement",
														"src": "2721:160:10",
														"trueBody": {
															"id": 1343,
															"nodeType": "Block",
															"src": "2763:118:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1338,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "2821:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1339,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1324,
																				"src": "2830:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1340,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "2848:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1337,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "2788:32:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1342,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "2907:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1347,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "2914:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1348,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "2923:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1349,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "2942:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1345,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "2894:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1352,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:10",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "2540:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "2540:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "2540:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "2554:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "2571:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:10"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:10"
									},
									"scope": 1494,
									"src": "2509:468:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "3373:303:10",
										"statements": [
											{
												"assignments": [
													1367
												],
												"declarations": [
													{
														"constant": false,
														"id": 1367,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "3383:25:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1370,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "3426:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1096",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:10",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1083,
															"src": "3426:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "3442:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "3451:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1374,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1368,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:10",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:10"
											},
											{
												"condition": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1378,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "3498:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1096",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1379,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "3505:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1096",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1377,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3474:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "3469:201:10",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "3520:150:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1383,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "3554:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1386,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "3576:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1096",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:10",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1083,
																				"src": "3576:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1388,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1361,
																						"src": "3592:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1390,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1384,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:10",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1382,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "3534:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1395,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "3639:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1396,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "3646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1096",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1394,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "3619:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:10",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3318:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "3318:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "3318:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3332:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3349:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:10"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:10"
									},
									"scope": 1494,
									"src": "3296:380:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "4129:559:10",
										"statements": [
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1443,
														"src": "4478:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1411,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"initialValue": {
													"arguments": [
														{
															"id": 1418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "4532:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1415,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "4512:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:10",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1568,
														"src": "4504:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1421,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4551:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1427,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "4589:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1428,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1425,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:10",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "4547:135:10",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "4610:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1437,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1406,
																				"src": "4664:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1096",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1096",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1434,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "4631:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1440,
															"nodeType": "RevertStatement",
															"src": "4624:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4088:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1404,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "4088:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "4088:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "4102:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:10"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:10"
									},
									"scope": 1494,
									"src": "4059:629:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "5278:489:10",
										"statements": [
											{
												"assignments": [
													1456,
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "5574:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1455,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "5588:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1457,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"arguments": [
														{
															"id": 1464,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "5635:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1461,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "5623:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1096",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1467,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "5657:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1468,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "5669:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1474,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "5706:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1476,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1475,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:10",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1477,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1472,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:10",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1480,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1484,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "5738:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1096",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1096",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1482,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:10",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1491,
												"nodeType": "Return",
												"src": "5650:110:10"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:10",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "5222:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1096",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1446,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1096,
														"src": "5222:6:10"
													},
													"referencedDeclaration": 1096,
													"src": "5222:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1096",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "5236:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:10"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "5272:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:10"
									},
									"scope": 1494,
									"src": "5189:578:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1495,
							"src": "751:5018:10",
							"usedErrors": [
								1221,
								1230
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1747
						]
					},
					"id": 1748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1497,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1747,
							"linearizedBaseContracts": [
								1747
							],
							"name": "Address",
							"nameLocation": "203:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1502,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "349:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:11"
									},
									"src": "316:50:11"
								},
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:11",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1507,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "475:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:11"
									},
									"src": "452:39:11"
								},
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1510,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:11"
									},
									"src": "591:24:11"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "1602:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1747",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1747",
																		"typeString": "library Address"
																	}
																],
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1523,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "1640:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "1612:109:11",
												"trueBody": {
													"id": 1532,
													"nodeType": "Block",
													"src": "1648:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1528,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1747",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1747",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1526,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1525,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "1669:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1531,
															"nodeType": "RevertStatement",
															"src": "1662:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													1535,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "1732:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1534,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1542,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1536,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "1750:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1538,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "1772:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:11"
											},
											{
												"condition": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:11",
													"subExpression": {
														"id": 1543,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "1798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "1793:63:11",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "1807:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1545,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "1828:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1547,
															"nodeType": "RevertStatement",
															"src": "1821:24:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1550:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1577:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:11"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:11"
									},
									"scope": 1747,
									"src": "1531:331:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "2794:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "2833:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "2841:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1561,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "2811:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1566,
												"nodeType": "Return",
												"src": "2804:45:11"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2743:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:11"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2780:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:11"
									},
									"scope": 1747,
									"src": "2705:151:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "3293:279:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1582,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1747",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1747",
																		"typeString": "library Address"
																	}
																],
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1585,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "3331:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "3303:108:11",
												"trueBody": {
													"id": 1594,
													"nodeType": "Block",
													"src": "3338:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1590,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1747",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1747",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1588,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1587,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "3359:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1593,
															"nodeType": "RevertStatement",
															"src": "3352:48:11"
														}
													]
												}
											},
											{
												"assignments": [
													1597,
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1613,
														"src": "3421:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1613,
														"src": "3435:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"arguments": [
														{
															"id": 1604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "3488:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1600,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "3462:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "3481:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "3537:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1609,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "3545:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1610,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "3554:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1607,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "3510:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1612,
												"nodeType": "Return",
												"src": "3503:62:11"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "3211:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "3227:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "3246:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:11"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "3279:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:11"
									},
									"scope": 1747,
									"src": "3180:392:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "3811:154:11",
										"statements": [
											{
												"assignments": [
													1625,
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "3822:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "3836:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"arguments": [
														{
															"id": 1630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "3881:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "3863:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1634,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "3930:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "3938:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1636,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "3947:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1633,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "3903:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1623,
												"id": 1638,
												"nodeType": "Return",
												"src": "3896:62:11"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "3739:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "3755:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:11"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "3797:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:11"
									},
									"scope": 1747,
									"src": "3711:254:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "4203:156:11",
										"statements": [
											{
												"assignments": [
													1651,
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1665,
														"src": "4214:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1665,
														"src": "4228:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1652,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"arguments": [
														{
															"id": 1656,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4275:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "4255:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1660,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "4324:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1661,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "4332:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1662,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "4341:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1659,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "4297:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1664,
												"nodeType": "Return",
												"src": "4290:62:11"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4136:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4152:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:11"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4189:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:11"
									},
									"scope": 1747,
									"src": "4106:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "4783:424:11",
										"statements": [
											{
												"condition": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:11",
													"subExpression": {
														"id": 1678,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "4798:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "4857:344:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1685,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "5045:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1689,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1669,
																				"src": "5071:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:11",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1700,
															"nodeType": "IfStatement",
															"src": "5041:119:11",
															"trueBody": {
																"id": 1699,
																"nodeType": "Block",
																"src": "5096:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1696,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1669,
																					"src": "5138:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1695,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1507,
																				"src": "5121:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1698,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1701,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5180:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1677,
															"id": 1702,
															"nodeType": "Return",
															"src": "5173:17:11"
														}
													]
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "4793:408:11",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "4807:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1681,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "4829:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1680,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "4821:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4670:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4694:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4716:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:11"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4769:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:11"
									},
									"scope": 1747,
									"src": "4625:582:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "5509:122:11",
										"statements": [
											{
												"condition": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:11",
													"subExpression": {
														"id": 1716,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "5524:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1725,
													"nodeType": "Block",
													"src": "5583:42:11",
													"statements": [
														{
															"expression": {
																"id": 1723,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "5604:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1715,
															"id": 1724,
															"nodeType": "Return",
															"src": "5597:17:11"
														}
													]
												},
												"id": 1726,
												"nodeType": "IfStatement",
												"src": "5519:106:11",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "5533:44:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1719,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "5555:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1718,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "5547:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1721,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:11",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5433:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5447:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:11"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5495:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:11"
									},
									"scope": 1747,
									"src": "5407:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "5798:461:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1734,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "5874:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1743,
													"nodeType": "Block",
													"src": "6204:49:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1740,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "6225:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1742,
															"nodeType": "RevertStatement",
															"src": "6218:24:11"
														}
													]
												},
												"id": 1744,
												"nodeType": "IfStatement",
												"src": "5870:383:11",
												"trueBody": {
													"id": 1739,
													"nodeType": "Block",
													"src": "5897:301:11",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:11",
																"nodeType": "YulBlock",
																"src": "6055:133:11",
																"statements": [
																	{
																		"nativeSrc": "6073:40:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:11"
																			},
																			"nativeSrc": "6096:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:11",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:11",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:11"
																					},
																					"nativeSrc": "6137:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:11",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:11"
																			},
																			"nativeSrc": "6130:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:11"
																		},
																		"nativeSrc": "6130:44:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1731,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1731,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:11",
																	"valueSize": 1
																}
															],
															"id": 1738,
															"nodeType": "InlineAssembly",
															"src": "6046:142:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:11",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "5760:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:11"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:11"
									},
									"scope": 1747,
									"src": "5743:516:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1748,
							"src": "195:6066:11",
							"usedErrors": [
								1502,
								1507,
								1510
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1777
						]
					},
					"id": 1778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1750,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1777,
							"linearizedBaseContracts": [
								1777
							],
							"name": "Context",
							"nameLocation": "642:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "718:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1755,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1757,
												"nodeType": "Return",
												"src": "728:17:12"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:12"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "709:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:12"
									},
									"scope": 1777,
									"src": "656:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "825:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1764,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1766,
												"nodeType": "Return",
												"src": "835:15:12"
											}
										]
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:12"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "809:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:12"
									},
									"scope": 1777,
									"src": "758:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "935:25:12",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1772,
												"id": 1774,
												"nodeType": "Return",
												"src": "945:8:12"
											}
										]
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:12"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "926:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:12"
									},
									"scope": 1777,
									"src": "863:97:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1778,
							"src": "624:338:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1851
						]
					},
					"id": 1852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1780,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:13",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1851,
							"linearizedBaseContracts": [
								1851
							],
							"name": "Counters",
							"nameLocation": "432:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1783,
									"members": [
										{
											"constant": false,
											"id": 1782,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1783,
											"src": "786:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1781,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:13",
									"nodeType": "StructDefinition",
									"scope": 1851,
									"src": "447:374:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "901:38:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1791,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "918:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:13",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1782,
													"src": "918:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1790,
												"id": 1793,
												"nodeType": "Return",
												"src": "911:21:13"
											}
										]
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "844:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1784,
														"name": "Counter",
														"nameLocations": [
															"844:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "844:7:13"
													},
													"referencedDeclaration": 1783,
													"src": "844:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:13"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "892:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:13"
									},
									"scope": 1851,
									"src": "827:112:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "998:70:13",
										"statements": [
											{
												"id": 1807,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:13",
												"statements": [
													{
														"expression": {
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1801,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "1032:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:13",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1782,
																"src": "1032:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1806,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:13"
													}
												]
											}
										]
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "964:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1796,
														"name": "Counter",
														"nameLocations": [
															"964:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "964:7:13"
													},
													"referencedDeclaration": 1783,
													"src": "964:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:13"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:13"
									},
									"scope": 1851,
									"src": "945:123:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "1127:176:13",
										"statements": [
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "1137:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"expression": {
														"id": 1817,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "1153:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:13",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1782,
													"src": "1153:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1821,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "1185:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:13"
											},
											{
												"id": 1835,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:13",
												"statements": [
													{
														"expression": {
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1827,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "1260:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:13",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1782,
																"src": "1260:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "1277:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1834,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:13"
													}
												]
											}
										]
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "1093:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "Counter",
														"nameLocations": [
															"1093:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "1093:7:13"
													},
													"referencedDeclaration": 1783,
													"src": "1093:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:13"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:13"
									},
									"scope": 1851,
									"src": "1074:229:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "1358:35:13",
										"statements": [
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1843,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "1368:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:13",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1782,
														"src": "1368:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:13"
											}
										]
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1324:23:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1838,
														"name": "Counter",
														"nameLocations": [
															"1324:7:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1783,
														"src": "1324:7:13"
													},
													"referencedDeclaration": 1783,
													"src": "1324:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:13"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:13"
									},
									"scope": 1851,
									"src": "1309:84:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1852,
							"src": "424:971:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:13"
				},
				"id": 13
			},
			"contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol": {
				"ast": {
					"absolutePath": "contracts/fatcat 5aug (1)/contracts/fatcat 5aug/preSale.sol",
					"exportedSymbols": {
						"Address": [
							1747
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1777
						],
						"Counters": [
							1851
						],
						"ERC20": [
							1018
						],
						"ERC20Burnable": [
							1142
						],
						"IERC20": [
							1096
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							1168
						],
						"IERC20Permit": [
							1204
						],
						"Ownable": [
							193
						],
						"Pausable": [
							438
						],
						"ReentrancyGuard": [
							503
						],
						"SafeERC20": [
							1494
						],
						"TimeVillageToken": [
							2214
						]
					},
					"id": 2215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 1019,
							"src": "58:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1855,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 1143,
							"src": "114:74:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1856,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 1495,
							"src": "189:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1857,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 504,
							"src": "255:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 439,
							"src": "318:55:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 194,
							"src": "374:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 46,
							"src": "427:76:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 1852,
							"src": "504:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1862,
										"name": "ERC20",
										"nameLocations": [
											"587:5:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "587:5:14"
									},
									"id": 1863,
									"nodeType": "InheritanceSpecifier",
									"src": "587:5:14"
								},
								{
									"baseName": {
										"id": 1864,
										"name": "ERC20Burnable",
										"nameLocations": [
											"594:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "594:13:14"
									},
									"id": 1865,
									"nodeType": "InheritanceSpecifier",
									"src": "594:13:14"
								},
								{
									"baseName": {
										"id": 1866,
										"name": "Pausable",
										"nameLocations": [
											"609:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "609:8:14"
									},
									"id": 1867,
									"nodeType": "InheritanceSpecifier",
									"src": "609:8:14"
								},
								{
									"baseName": {
										"id": 1868,
										"name": "Ownable",
										"nameLocations": [
											"619:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "619:7:14"
									},
									"id": 1869,
									"nodeType": "InheritanceSpecifier",
									"src": "619:7:14"
								},
								{
									"baseName": {
										"id": 1870,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"627:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 503,
										"src": "627:15:14"
									},
									"id": 1871,
									"nodeType": "InheritanceSpecifier",
									"src": "627:15:14"
								}
							],
							"canonicalName": "TimeVillageToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2214,
							"linearizedBaseContracts": [
								2214,
								503,
								193,
								438,
								1142,
								1018,
								235,
								1168,
								1096,
								1777
							],
							"name": "TimeVillageToken",
							"nameLocation": "567:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 1874,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "676:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "647:38:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1873,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1872,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"647:21:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "647:21:14"
										},
										"referencedDeclaration": 45,
										"src": "647:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 1878,
									"libraryName": {
										"id": 1875,
										"name": "Counters",
										"nameLocations": [
											"697:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1851,
										"src": "697:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "691:36:14",
									"typeName": {
										"id": 1877,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1876,
											"name": "Counters.Counter",
											"nameLocations": [
												"710:8:14",
												"719:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1783,
											"src": "710:16:14"
										},
										"referencedDeclaration": 1783,
										"src": "710:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1881,
									"mutability": "mutable",
									"name": "numberOfTransactions",
									"nameLocation": "757:20:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "732:45:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1783_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1880,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1879,
											"name": "Counters.Counter",
											"nameLocations": [
												"732:8:14",
												"741:7:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1783,
											"src": "732:16:14"
										},
										"referencedDeclaration": 1783,
										"src": "732:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1783_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 1885,
									"libraryName": {
										"id": 1882,
										"name": "SafeERC20",
										"nameLocations": [
											"789:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "789:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "783:27:14",
									"typeName": {
										"id": 1884,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1883,
											"name": "IERC20",
											"nameLocations": [
												"803:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1096,
											"src": "803:6:14"
										},
										"referencedDeclaration": 1096,
										"src": "803:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1096",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a3c50cfd",
									"id": 1887,
									"mutability": "mutable",
									"name": "IsClaim",
									"nameLocation": "827:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "815:19:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1886,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "815:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1889,
									"mutability": "mutable",
									"name": "AddminAddress",
									"nameLocation": "848:13:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "840:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1891,
									"mutability": "mutable",
									"name": "USDT",
									"nameLocation": "875:4:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "867:12:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1890,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1893,
									"mutability": "immutable",
									"name": "UsdcContract",
									"nameLocation": "903:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "885:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1892,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "TimeVillageToken.userRecord",
									"id": 1907,
									"members": [
										{
											"constant": false,
											"id": 1895,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "957:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "949:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1894,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "949:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1897,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "976:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "971:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1896,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "971:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1899,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "997:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "992:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1898,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "992:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1901,
											"mutability": "mutable",
											"name": "cost",
											"nameLocation": "1020:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "1015:9:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1900,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1015:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1903,
											"mutability": "mutable",
											"name": "claim",
											"nameLocation": "1039:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "1034:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1902,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1034:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1906,
											"mutability": "mutable",
											"name": "choice",
											"nameLocation": "1063:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1907,
											"src": "1054:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_currency_$1944",
												"typeString": "enum TimeVillageToken.currency"
											},
											"typeName": {
												"id": 1905,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1904,
													"name": "currency",
													"nameLocations": [
														"1054:8:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1944,
													"src": "1054:8:14"
												},
												"referencedDeclaration": 1944,
												"src": "1054:8:14",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_currency_$1944",
													"typeString": "enum TimeVillageToken.currency"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "userRecord",
									"nameLocation": "929:10:14",
									"nodeType": "StructDefinition",
									"scope": 2214,
									"src": "922:163:14",
									"visibility": "public"
								},
								{
									"canonicalName": "TimeVillageToken.userDetail",
									"id": 1918,
									"members": [
										{
											"constant": false,
											"id": 1909,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1123:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1918,
											"src": "1118:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1908,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1118:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1911,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1143:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1918,
											"src": "1138:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1910,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1138:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1913,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "1164:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1918,
											"src": "1159:9:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1912,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1159:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1915,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1186:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1918,
											"src": "1178:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1914,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1917,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "1208:15:14",
											"nodeType": "VariableDeclaration",
											"scope": 1918,
											"src": "1200:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1916,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1200:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "userDetail",
									"nameLocation": "1098:10:14",
									"nodeType": "StructDefinition",
									"scope": 2214,
									"src": "1091:148:14",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "584707eb",
									"id": 1925,
									"mutability": "mutable",
									"name": "TokenRecord",
									"nameLocation": "1301:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "1245:67:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userRecord_$1907_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct TimeVillageToken.userRecord))"
									},
									"typeName": {
										"id": 1924,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1919,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1254:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:48:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userRecord_$1907_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct TimeVillageToken.userRecord))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1923,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1920,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1273:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1265:27:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userRecord_$1907_storage_$",
												"typeString": "mapping(uint256 => struct TimeVillageToken.userRecord)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1922,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1921,
													"name": "userRecord",
													"nameLocations": [
														"1281:10:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1907,
													"src": "1281:10:14"
												},
												"referencedDeclaration": 1907,
												"src": "1281:10:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_userRecord_$1907_storage_ptr",
													"typeString": "struct TimeVillageToken.userRecord"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cec90fe7",
									"id": 1932,
									"mutability": "mutable",
									"name": "TokenRecords",
									"nameLocation": "1377:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "1318:71:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
										"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail))"
									},
									"typeName": {
										"id": 1931,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1926,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1327:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1318:51:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
											"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1930,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1927,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1346:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1338:30:14",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$",
												"typeString": "mapping(address => struct TimeVillageToken.userDetail)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1929,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1928,
													"name": "userDetail",
													"nameLocations": [
														"1357:10:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1918,
													"src": "1357:10:14"
												},
												"referencedDeclaration": 1918,
												"src": "1357:10:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_userDetail_$1918_storage_ptr",
													"typeString": "struct TimeVillageToken.userDetail"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1937,
									"mutability": "mutable",
									"name": "_currencyCoice",
									"nameLocation": "1422:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "1395:41:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
										"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
									},
									"typeName": {
										"id": 1936,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1934,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1933,
												"name": "currency",
												"nameLocations": [
													"1404:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1944,
												"src": "1404:8:14"
											},
											"referencedDeclaration": 1944,
											"src": "1404:8:14",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_currency_$1944",
												"typeString": "enum TimeVillageToken.currency"
											}
										},
										"nodeType": "Mapping",
										"src": "1395:26:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
											"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1935,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1416:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "02ab3fed",
									"id": 1941,
									"mutability": "mutable",
									"name": "NumberOfBuying",
									"nameLocation": "1474:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2214,
									"src": "1442:46:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1940,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1938,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1451:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1442:24:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1939,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1461:4:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TimeVillageToken.currency",
									"id": 1944,
									"members": [
										{
											"id": 1942,
											"name": "USDT",
											"nameLocation": "1508:4:14",
											"nodeType": "EnumValue",
											"src": "1508:4:14"
										},
										{
											"id": 1943,
											"name": "BNB",
											"nameLocation": "1514:3:14",
											"nodeType": "EnumValue",
											"src": "1514:3:14"
										}
									],
									"name": "currency",
									"nameLocation": "1499:8:14",
									"nodeType": "EnumDefinition",
									"src": "1494:24:14"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "1638:181:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1650:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1654:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1650:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030303030",
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1662:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000000_by_1",
																	"typeString": "int_const 2500000000"
																},
																"value": "2500000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1963,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "1681:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1681:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1675:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1662:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1644:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:48:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "1644:48:14"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1969,
														"name": "UsdcContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "1784:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1970,
														"name": "_UsdcContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "1799:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1784:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "1784:28:14"
											}
										]
									},
									"id": 1974,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54696d652056696c6c61676520546f6b656e",
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1588:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2239db6a7d76ebb6661fd95fd479d8fa9b29105fe2b35f2c9e9da2a7d8556c44",
														"typeString": "literal_string \"Time Village Token\""
													},
													"value": "Time Village Token"
												},
												{
													"hexValue": "545654",
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1610:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c3cfae0ba93daac11b38797660353defb4b8eec866eaaaadf814dda86ce20f69",
														"typeString": "literal_string \"TVT\""
													},
													"value": "TVT"
												}
											],
											"id": 1953,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1950,
												"name": "ERC20",
												"nameLocations": [
													"1582:5:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1018,
												"src": "1582:5:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1582:34:14"
										},
										{
											"arguments": [
												{
													"id": 1955,
													"name": "ownerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1948,
													"src": "1625:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1956,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1954,
												"name": "Ownable",
												"nameLocations": [
													"1617:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "1617:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1617:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "_UsdcContract",
												"nameLocation": "1545:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1537:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "1568:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "1560:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:45:14"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:14"
									},
									"scope": 2214,
									"src": "1525:294:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "1897:91:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1988,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1946:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1950:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1946:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1992,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1966:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																		"typeString": "contract TimeVillageToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																		"typeString": "contract TimeVillageToken"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1958:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1958:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "1973:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1984,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1922:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		],
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1914:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1982,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1914:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1914:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1981,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "1907:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1096_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1929:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1281,
														"src": "1907:38:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1096_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:74:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "1907:74:14"
											}
										]
									},
									"functionSelector": "c0cd40ee",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1979,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1978,
												"name": "onlyOwner",
												"nameLocations": [
													"1888:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "1888:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1888:9:14"
										}
									],
									"name": "AdminAddToken",
									"nameLocation": "1853:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1872:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "1867:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1867:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:14:14"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:0:14"
									},
									"scope": 2214,
									"src": "1844:144:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "2081:994:14",
										"statements": [
											{
												"assignments": [
													2009
												],
												"declarations": [
													{
														"constant": false,
														"id": 2009,
														"mutability": "mutable",
														"name": "currencyinUSDT",
														"nameLocation": "2165:14:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "2157:22:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2157:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2011,
												"initialValue": {
													"hexValue": "31",
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2182:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2157:26:14"
											},
											{
												"assignments": [
													2013
												],
												"declarations": [
													{
														"constant": false,
														"id": 2013,
														"mutability": "mutable",
														"name": "currencyinBNB",
														"nameLocation": "2198:13:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "2193:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2012,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2193:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2015,
												"initialValue": {
													"hexValue": "333137",
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2214:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_317_by_1",
														"typeString": "int_const 317"
													},
													"value": "317"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2193:24:14"
											},
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "2232:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "2227:9:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2016,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2227:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2018,
												"nodeType": "VariableDeclarationStatement",
												"src": "2227:9:14"
											},
											{
												"expression": {
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2019,
															"name": "_currencyCoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2246:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
																"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
															}
														},
														"id": 2022,
														"indexExpression": {
															"expression": {
																"id": 2020,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "2261:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_currency_$1944_$",
																	"typeString": "type(enum TimeVillageToken.currency)"
																}
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2270:4:14",
															"memberName": "USDT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1942,
															"src": "2261:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_currency_$1944",
																"typeString": "enum TimeVillageToken.currency"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2246:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2278:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2246:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "2246:33:14"
											},
											{
												"expression": {
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2026,
															"name": "_currencyCoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2289:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
																"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
															}
														},
														"id": 2029,
														"indexExpression": {
															"expression": {
																"id": 2027,
																"name": "currency",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "2304:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_currency_$1944_$",
																	"typeString": "type(enum TimeVillageToken.currency)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2313:3:14",
															"memberName": "BNB",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1943,
															"src": "2304:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_currency_$1944",
																"typeString": "enum TimeVillageToken.currency"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2289:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2289:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "2289:32:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2033,
															"name": "numberOfTransactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "2331:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1783_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2352:9:14",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "2331:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1783_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1783_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "2331:32:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2038,
															"name": "_currencyCoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2376:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
																"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
															}
														},
														"id": 2040,
														"indexExpression": {
															"id": 2039,
															"name": "choice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "2391:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_currency_$1944",
																"typeString": "enum TimeVillageToken.currency"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2376:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2376:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2051,
												"nodeType": "IfStatement",
												"src": "2373:91:14",
												"trueBody": {
													"id": 2050,
													"nodeType": "Block",
													"src": "2405:59:14",
													"statements": [
														{
															"expression": {
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2043,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "2420:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2044,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2000,
																				"src": "2429:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2045,
																				"name": "currencyinUSDT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2009,
																				"src": "2438:14:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2429:23:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2047,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2428:25:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2420:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2049,
															"nodeType": "ExpressionStatement",
															"src": "2420:33:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2052,
															"name": "_currencyCoice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_currency_$1944_$_t_uint256_$",
																"typeString": "mapping(enum TimeVillageToken.currency => uint256)"
															}
														},
														"id": 2054,
														"indexExpression": {
															"id": 2053,
															"name": "choice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "2492:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_currency_$1944",
																"typeString": "enum TimeVillageToken.currency"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2477:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2504:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2477:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "2474:90:14",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "2506:58:14",
													"statements": [
														{
															"expression": {
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2057,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "2521:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2058,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2000,
																				"src": "2530:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2059,
																				"name": "currencyinBNB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2013,
																				"src": "2539:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2530:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2529:24:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2521:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "2521:32:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2573:28:14",
													"subExpression": {
														"baseExpression": {
															"id": 2066,
															"name": "NumberOfBuying",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "2573:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2069,
														"indexExpression": {
															"expression": {
																"id": 2067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2588:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2592:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2588:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2573:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "2573:28:14"
											},
											{
												"assignments": [
													2073
												],
												"declarations": [
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "currentTransactionCount",
														"nameLocation": "2616:23:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "2611:28:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2072,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2611:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"baseExpression": {
														"id": 2074,
														"name": "NumberOfBuying",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "2642:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2077,
													"indexExpression": {
														"expression": {
															"id": 2075,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2657:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2661:6:14",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2657:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2642:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2611:57:14"
											},
											{
												"expression": {
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2079,
																"name": "TokenRecord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "2678:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_userRecord_$1907_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct TimeVillageToken.userRecord storage ref))"
																}
															},
															"id": 2083,
															"indexExpression": {
																"expression": {
																	"id": 2080,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2690:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2694:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2690:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2678:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_userRecord_$1907_storage_$",
																"typeString": "mapping(uint256 => struct TimeVillageToken.userRecord storage ref)"
															}
														},
														"id": 2084,
														"indexExpression": {
															"id": 2082,
															"name": "currentTransactionCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "2702:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2678:48:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userRecord_$1907_storage",
															"typeString": "struct TimeVillageToken.userRecord storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2086,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2740:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2744:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2740:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2088,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "2752:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2089,
																"name": "currencyinUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "2761:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2090,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "2777:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2783:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 2092,
																"name": "choice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "2789:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_currency_$1944",
																	"typeString": "enum TimeVillageToken.currency"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_enum$_currency_$1944",
																	"typeString": "enum TimeVillageToken.currency"
																}
															],
															"id": 2085,
															"name": "userRecord",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "2729:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_userRecord_$1907_storage_ptr_$",
																"typeString": "type(struct TimeVillageToken.userRecord storage pointer)"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2729:67:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userRecord_$1907_memory_ptr",
															"typeString": "struct TimeVillageToken.userRecord memory"
														}
													},
													"src": "2678:118:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_userRecord_$1907_storage",
														"typeString": "struct TimeVillageToken.userRecord storage ref"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "2678:118:14"
											},
											{
												"expression": {
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2096,
																"name": "TokenRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "2872:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
																	"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail storage ref))"
																}
															},
															"id": 2103,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 2099,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2893:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																			"typeString": "contract TimeVillageToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																			"typeString": "contract TimeVillageToken"
																		}
																	],
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2885:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2885:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2885:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2872:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$",
																"typeString": "mapping(address => struct TimeVillageToken.userDetail storage ref)"
															}
														},
														"id": 2104,
														"indexExpression": {
															"expression": {
																"id": 2101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2900:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2904:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2900:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2872:39:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userDetail_$1918_storage",
															"typeString": "struct TimeVillageToken.userDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2106,
																"name": "currencyinUSDT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "2925:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2107,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "2941:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2108,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2950:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2956:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2950:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2110,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2967:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2971:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2967:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2114,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2987:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																			"typeString": "contract TimeVillageToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																			"typeString": "contract TimeVillageToken"
																		}
																	],
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2979:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2979:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2979:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2105,
															"name": "userDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "2914:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_userDetail_$1918_storage_ptr_$",
																"typeString": "type(struct TimeVillageToken.userDetail storage pointer)"
															}
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2914:79:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_userDetail_$1918_memory_ptr",
															"typeString": "struct TimeVillageToken.userDetail memory"
														}
													},
													"src": "2872:121:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_userDetail_$1918_storage",
														"typeString": "struct TimeVillageToken.userDetail storage ref"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "2872:121:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3041:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3045:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3041:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2125,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "3053:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3053:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2127,
															"name": "cost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "3062:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2120,
																	"name": "UsdcContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "3010:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2119,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "3003:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1096_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3003:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3024:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1281,
														"src": "3003:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1096_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1096_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3003:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "3003:64:14"
											}
										]
									},
									"functionSelector": "8d3ce8a5",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2006,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2005,
												"name": "nonReentrant",
												"nameLocations": [
													"2068:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 468,
												"src": "2068:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2068:12:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "2015:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2033:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2025:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "2053:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2044:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_currency_$1944",
													"typeString": "enum TimeVillageToken.currency"
												},
												"typeName": {
													"id": 2002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2001,
														"name": "currency",
														"nameLocations": [
															"2044:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1944,
														"src": "2044:8:14"
													},
													"referencedDeclaration": 1944,
													"src": "2044:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_currency_$1944",
														"typeString": "enum TimeVillageToken.currency"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:36:14"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:14"
									},
									"scope": 2214,
									"src": "2006:1069:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "3134:314:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2139,
																				"name": "TokenRecords",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "3152:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
																					"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail storage ref))"
																				}
																			},
																			"id": 2144,
																			"indexExpression": {
																				"arguments": [
																					{
																						"id": 2142,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3173:4:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																							"typeString": "contract TimeVillageToken"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																							"typeString": "contract TimeVillageToken"
																						}
																					],
																					"id": 2141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3165:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2140,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3165:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3165:13:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3152:27:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$",
																				"typeString": "mapping(address => struct TimeVillageToken.userDetail storage ref)"
																			}
																		},
																		"id": 2146,
																		"indexExpression": {
																			"id": 2145,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2133,
																			"src": "3180:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3152:34:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_userDetail_$1918_storage",
																			"typeString": "struct TimeVillageToken.userDetail storage ref"
																		}
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3187:4:14",
																	"memberName": "time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1913,
																	"src": "3152:39:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3194:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "3152:44:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2150,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3200:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3206:9:14",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3200:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3152:63:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e742074696d6520657863656564",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3217:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_571dc229ebeeedb973ca475ca2d614d0a8a423c6dd3e0c3cd152517da026ba06",
																"typeString": "literal_string \"Current time exceed\""
															},
															"value": "Current time exceed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_571dc229ebeeedb973ca475ca2d614d0a8a423c6dd3e0c3cd152517da026ba06",
																"typeString": "literal_string \"Current time exceed\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3144:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3144:95:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "3144:95:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2157,
																			"name": "TokenRecords",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "3257:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
																				"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail storage ref))"
																			}
																		},
																		"id": 2162,
																		"indexExpression": {
																			"arguments": [
																				{
																					"id": 2160,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3278:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																						"typeString": "contract TimeVillageToken"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																						"typeString": "contract TimeVillageToken"
																					}
																				],
																				"id": 2159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3270:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2158,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3270:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3270:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3257:27:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$",
																			"typeString": "mapping(address => struct TimeVillageToken.userDetail storage ref)"
																		}
																	},
																	"id": 2164,
																	"indexExpression": {
																		"id": 2163,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "3285:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3257:34:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_userDetail_$1918_storage",
																		"typeString": "struct TimeVillageToken.userDetail storage ref"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3292:6:14",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1911,
																"src": "3257:41:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2166,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "3302:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3257:52:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6f74206d61746368",
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d875edc01e8f04554575c3df743ebe9dd1ce1a0512aabbdb136a8dcc2c8754bd",
																"typeString": "literal_string \"Amount not match\""
															},
															"value": "Amount not match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d875edc01e8f04554575c3df743ebe9dd1ce1a0512aabbdb136a8dcc2c8754bd",
																"typeString": "literal_string \"Amount not match\""
															}
														],
														"id": 2156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3249:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3249:81:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "3249:81:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2178,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "3371:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2179,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "3378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2174,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3355:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		],
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3347:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2172,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3347:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3347:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2171,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "3340:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1096_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3340:21:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1096",
																"typeString": "contract IERC20"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3362:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1063,
														"src": "3340:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3340:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "3340:46:14"
											},
											{
												"expression": {
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2182,
																	"name": "TokenRecords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "3396:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$_$",
																		"typeString": "mapping(address => mapping(address => struct TimeVillageToken.userDetail storage ref))"
																	}
																},
																"id": 2188,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 2185,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3417:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TimeVillageToken_$2214",
																				"typeString": "contract TimeVillageToken"
																			}
																		],
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3409:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2183,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3409:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3409:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3396:27:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_userDetail_$1918_storage_$",
																	"typeString": "mapping(address => struct TimeVillageToken.userDetail storage ref)"
																}
															},
															"id": 2189,
															"indexExpression": {
																"id": 2187,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "3424:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3396:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_userDetail_$1918_storage",
																"typeString": "struct TimeVillageToken.userDetail storage ref"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3431:6:14",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1911,
														"src": "3396:41:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3440:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3396:45:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2193,
												"nodeType": "ExpressionStatement",
												"src": "3396:45:14"
											}
										]
									},
									"functionSelector": "47cee97c",
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Claim",
									"nameLocation": "3092:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3106:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3098:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3118:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3113:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3113:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3097:29:14"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3134:0:14"
									},
									"scope": 2214,
									"src": "3083:365:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "3490:25:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2200,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3500:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:8:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "3500:8:14"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2197,
												"name": "onlyOwner",
												"nameLocations": [
													"3480:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3480:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3480:9:14"
										}
									],
									"name": "pause",
									"nameLocation": "3465:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3470:2:14"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:14"
									},
									"scope": 2214,
									"src": "3456:59:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "3556:27:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2209,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "3566:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:10:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "3566:10:14"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2206,
												"name": "onlyOwner",
												"nameLocations": [
													"3546:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3546:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3546:9:14"
										}
									],
									"name": "unpause",
									"nameLocation": "3529:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3536:2:14"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3556:0:14"
									},
									"scope": 2214,
									"src": "3520:63:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2215,
							"src": "558:3246:14",
							"usedErrors": [
								59,
								64,
								205,
								210,
								215,
								224,
								229,
								234,
								1221,
								1502,
								1507,
								1510
							],
							"usedEvents": [
								70,
								341,
								346,
								1030,
								1039
							]
						}
					],
					"src": "32:3772:14"
				},
				"id": 14
			}
		}
	}
}