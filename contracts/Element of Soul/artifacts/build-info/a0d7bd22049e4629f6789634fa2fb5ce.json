{
	"id": "a0d7bd22049e4629f6789634fa2fb5ce",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Element of Soul/Land.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n// Import OpenZeppelin's ERC721 standard implementation and its extensions.\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n// @title LandMinting\n// @author LandMinting Team\n// @notice This contract implements an ERC721 token with whitelisting and metadata storage functionalities.\ncontract SuperVet is ERC721, ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;  // Use Counters library from OpenZeppelin.\n    Counters.Counter private _itemsId;  // Private counter to track token IDs.\n\n    // Structure to store NFT information.\n    struct NFT { \n        uint256 tokenId;    \n        uint256 count;\n        string uri;\n        uint mintTime;        \n        bool minted;\n    }\n\n    // Mappings to store various data related to NFTs and their owners.\n    mapping(address => mapping(uint => uint)) public NftId;  // Maps address to a mapping of an index to a token ID.\n    mapping(address => uint) public count;  // Maps address to the number of NFTs they own.\n    mapping(uint => NFT) public NftMinting;  // Maps token ID to the NFT structure.\n    mapping(address => bool) public whitelisted;  // Maps address to their whitelist status.\n\n    // @dev Initializes the contract by setting a custom token name and symbol, and transferring ownership.\n    // @param initialOwner The address to be set as the initial owner of the contract.\n    constructor(address initialOwner) ERC721(\"Lands\", \"Land\") Ownable(initialOwner) {\n    }\n\n    /*@notice Adds an address to the whitelist.\n     @dev Can only be called by the contract owner.\n     @param _authorized The address to be whitelisted.*/\n    function whitelist(address _authorized) public onlyOwner {\n        whitelisted[_authorized] = true;\n    }\n\n    /*@notice Removes an address from the whitelist.\n    *@dev Can only be called by the contract owner.\n    *@param _authorized The address to be removed from the whitelist.*/\n    function unwhitelist(address _authorized) public onlyOwner {\n        whitelisted[_authorized] = false;\n    }\n\n    /*@notice Mints a new token with a given URI.\n    * @dev Can only be called by whitelisted addresses.\n    * @param uri The metadata URI of the token to be minted.*/\n    function safeMint(string memory uri) public {\n        require(whitelisted[msg.sender], \"You are not authorized for minting land!!\");\n        _itemsId.increment();  \n        uint256 newItemId = _itemsId.current();  \n        NftId[msg.sender][count[msg.sender] + 1] = newItemId;\n        NftMinting[newItemId] = NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true);\n        _safeMint(msg.sender, newItemId);  \n        _setTokenURI(newItemId, uri); \n        count[msg.sender]++; \n    }\n\n    /* @notice Retrieves all tokens owned by the caller.\n     @return An array of NFTs owned by the caller.*/\n    function getTokenId(address _seller) public view returns(NFT[] memory) {\n        NFT[] memory myArray = new NFT[](count[_seller]);  \n        for (uint i = 0; i < count[_seller]; i++) { \n            uint tokenId = NftId[_seller][i + 1];\n            myArray[i] = NftMinting[tokenId]; \n        }\n        return myArray;\n    }\n\n\n    /**\n    * @dev Transfers a token ID from one owner to another and updates internal tracking.\n    * @param _to The address to receive the token ID.\n    * @param _tokenId The token ID to be transferred.\n    * @param _seller The current owner of the token ID.\n    *\n    * This function updates the internal mapping of token IDs to reflect a change in ownership.\n    * It also adjusts the count of NFTs owned by both the seller and the buyer.\n    * Note: This function does not perform the actual transfer of tokens but is intended to be called\n    * in conjunction with a transfer function that handles ownership change.\n    */\n    function updateTokenId(address _to,uint _tokenId,address _seller) public {\n        NftId[_to][count[_to] + 1] = _tokenId;\n        NFT[] memory myArray =  getTokenId(_seller);\n        for(uint i=0 ; i < myArray.length ; i++){\n            if(myArray[i].tokenId == _tokenId){\n                NftId[_seller][i+1] = NftId[_seller][count[_seller]];\n                count[_seller]--;\n            }\n        }\n        count[_to]++;\n    }\n\n    /*@notice Retrieves the URI of a specific token by its ID.\n     @param tokenId The ID of the token whose URI is to be retrieved.\n     @return The URI of the token.*/\n    function getTokenUri(uint tokenId) external view returns(string memory) {\n        return tokenURI(tokenId);\n    }\n\n    /*@dev Override the tokenURI function from ERC721 and ERC721URIStorage to provide token URI.\n     @param tokenId The ID of the token whose URI is to be retrieved.\n     @return The URI of the token.*/\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    /* @dev Override the supportsInterface function from ERC721 and ERC721URIStorage to indicate support for interfaces.\n     @param interfaceId The ID of the interface to be checked.\n     @return A boolean indicating whether the interface is supported.*/\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors{\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n                \n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n               \n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x23be80beb2b5bce2da52e2e5579137c259f582c1b3819aee7b107113053970e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ffbe7736166b19ecbe033cf1b8bc965e8066aab1060346f4fbad4d85fb8b90e\",\"dweb:/ipfs/QmP2qBJdbSF2rShE4RuMGWhJo9vhXf5NWeswaw1q9tB64r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x23be80beb2b5bce2da52e2e5579137c259f582c1b3819aee7b107113053970e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ffbe7736166b19ecbe033cf1b8bc965e8066aab1060346f4fbad4d85fb8b90e\",\"dweb:/ipfs/QmP2qBJdbSF2rShE4RuMGWhJo9vhXf5NWeswaw1q9tB64r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH21 0xFB46D2CE5ADD3934D869EF63075B206D0CDCF98379 0xE5 PUSH22 0xA2585938FA79964736F6C634300081A003300000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205174fb46d2ce5add3934d869ef63075b206d0cdcf98379e5750a2585938fa79964736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Element of Soul/Land.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xDB BLOCKHASH ADDRESS 0xCF 0x2E CALLVALUE 0xE SHL 0xF9 0xE6 GASPRICE PUSH6 0x810BBC350504 BLOBBASEFEE 0xB2 AND CALLDATACOPY 0xD3 0x4E PUSH0 0x4E SIGNEXTEND SWAP6 0xCA 0xBF EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bdb4030cf2e340e1bf9e63a65810bbc3505044ab21637d34e5f4e0b95cabf3f64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Element of Soul/Land.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xB1 0xCB CALLVALUE XOR 0xEF CODECOPY 0x29 DUP4 0xCC LOG1 0xCB PUSH9 0x45FA77B14A7C379E19 PUSH12 0x4B23D16A9F983969A164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1b1cb3418ef392983cca1cb6845fa77b14a7c379e196b4b23d16a9f983969a164736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Element of Soul/Land.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURNDATASIZE 0x26 CALLDATASIZE 0xAC PUSH11 0x656BCDDE4F25E6C5815BEC 0xEE JUMPI DUP3 0xFC DUP2 TIMESTAMP 0xB3 0xE4 DUP14 0xF SWAP13 BALANCE 0xF8 0x21 0x23 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220143d2636ac6a656bcdde4f25e6c5815becee5782fc8142b3e48d0f9c31f8212364736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Element of Soul/Land.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Element of Soul/Land.sol": {
				"SuperVet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "NftId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "NftMinting",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "mintTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "minted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "getTokenId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "count",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "uri",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "mintTime",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "minted",
											"type": "bool"
										}
									],
									"internalType": "struct SuperVet.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenUri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authorized",
									"type": "address"
								}
							],
							"name": "unwhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								}
							],
							"name": "updateTokenId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authorized",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateTokenId(address,uint256,address)": {
								"details": "Transfers a token ID from one owner to another and updates internal tracking.",
								"params": {
									"_seller": "The current owner of the token ID. This function updates the internal mapping of token IDs to reflect a change in ownership. It also adjusts the count of NFTs owned by both the seller and the buyer. Note: This function does not perform the actual transfer of tokens but is intended to be called in conjunction with a transfer function that handles ownership change.",
									"_to": "The address to receive the token ID.",
									"_tokenId": "The token ID to be transferred."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Element of Soul/Land.sol\":585:5631  contract SuperVet is ERC721, ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Element of Soul/Land.sol\":1657:1744  constructor(address initialOwner) ERC721(\"Lands\", \"Land\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Element of Soul/Land.sol\":1723:1735  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1382:1495  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4c616e6473)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x13185b99)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1448:1453  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1448:1461  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1478  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1488  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1481:1488  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1478  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1488  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Element of Soul/Land.sol\":1657:1744  constructor(address initialOwner) ERC721(\"Lands\", \"Land\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/Element of Soul/Land.sol\":585:5631  contract SuperVet is ERC721, ERC721URIStorage, Ownable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_27:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_28:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_20:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_21:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_31:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_32:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_23:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_36:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_37:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_35:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_43\n  tag_20\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1850:1947   */\n  tag_44\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_45\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_48:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_39)\n    /* \"#utility.yul\":2039:2688   */\ntag_47:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_51:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_54:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":2950:3153   */\ntag_25:\n    /* \"contracts/Element of Soul/Land.sol\":585:5631  contract SuperVet is ERC721, ERC721URIStorage, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Element of Soul/Land.sol\":585:5631  contract SuperVet is ERC721, ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ad91345\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf1537686\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfbbffcb0\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd936547e\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x8ad91345\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9a590427\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x23b872dd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x695850fb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x695850fb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6e0cee09\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05d85eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2295370a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Element of Soul/Land.sol\":5424:5629  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/Element of Soul/Land.sol\":5424:5629  function supportsInterface(bytes4 interfaceId)... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Element of Soul/Land.sol\":1192:1229  mapping(address => uint) public count */\n    tag_4:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1107:1132   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1095:1097   */\n      0x20\n        /* \"#utility.yul\":1080:1098   */\n      add\n        /* \"contracts/Element of Soul/Land.sol\":1192:1229  mapping(address => uint) public count */\n      tag_38\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2276:2327   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2264:2266   */\n      0x20\n        /* \"#utility.yul\":2249:2267   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/Element of Soul/Land.sol\":1284:1322  mapping(uint => NFT) public NftMinting */\n    tag_8:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_38\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_56\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_56\n      tag_70\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2186:2304  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_50\n      tag_73\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":2478:2972  function safeMint(string memory uri) public {... */\n    tag_12:\n      tag_56\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":4046:4474  function updateTokenId(address _to,uint _tokenId,address _seller) public {... */\n    tag_13:\n      tag_56\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_40\n      tag_85\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_56\n      tag_89\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":4650:4763  function getTokenUri(uint tokenId) external view returns(string memory) {... */\n    tag_16:\n      tag_46\n      tag_91\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_50)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2612  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_46\n      tag_98\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":2195:2303  function unwhitelist(address _authorized) public onlyOwner {... */\n    tag_19:\n      tag_56\n      tag_101\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":1907:2012  function whitelist(address _authorized) public onlyOwner {... */\n    tag_20:\n      tag_56\n      tag_104\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3863  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_21:\n      tag_56\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4986:5194  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      tag_56\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":4973:5162  function tokenURI(uint256 tokenId)... */\n    tag_23:\n      tag_46\n      tag_115\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":1368:1411  mapping(address => bool) public whitelisted */\n    tag_24:\n      tag_34\n      tag_119\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_119:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_25:\n      tag_34\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":3088:3410  function getTokenId(address _seller) public view returns(NFT[] memory) {... */\n    tag_26:\n      tag_127\n      tag_128\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_56\n      tag_133\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":1075:1129  mapping(address => mapping(uint => uint)) public NftId */\n    tag_28:\n      tag_40\n      tag_136\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_136:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Element of Soul/Land.sol\":5424:5629  function supportsInterface(bytes4 interfaceId)... */\n    tag_37:\n        /* \"contracts/Element of Soul/Land.sol\":5559:5563  bool */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":5586:5622  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"contracts/Element of Soul/Land.sol\":5610:5621  interfaceId */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":5586:5609  super.supportsInterface */\n      tag_141\n        /* \"contracts/Element of Soul/Land.sol\":5586:5622  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Element of Soul/Land.sol\":5579:5622  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/Element of Soul/Land.sol\":5424:5629  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2411:2424  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2443:2448  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2436:2448  return _name */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_144\n      jump\t// in\n    tag_145:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_147\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_146)\n    tag_147:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_148:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_148\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3565:3572  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3606  _requireOwned(tokenId) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3598:3605  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3597  _requireOwned */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3606  _requireOwned(tokenId) */\n      jump\t// in\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6009:6016  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6059  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6050  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6059  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3624:3645  _getApproved(tokenId) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5939:6066  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3430  _approve(to, tokenId, _msgSender()) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3404:3406  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3408:3415  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3403  _approve */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3430  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Element of Soul/Land.sol\":1284:1322  mapping(uint => NFT) public NftMinting */\n    tag_62:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      swap4\n      swap2\n      swap3\n      tag_159\n      swap1\n      tag_144\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_144\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4238:4254  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4234:4321  if (to == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4277:4310  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4307:4308  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4277:4310  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4277:4310  ERC721InvalidReceiver(address(0)) */\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4234:4321  if (to == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4539:4560  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4597  _update(to, tokenId, _msgSender()) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4571:4573  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4575:4582  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4570  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4597  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4539:4597  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4628:4632  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4632  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4624  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4632  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4716  if (previousOwner != from) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4655:4705  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8383:8415   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4655:4705  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8365:8416   */\n      mstore\n        /* \"#utility.yul\":8432:8450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8425:8459   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8495:8527   */\n      dup3\n      and\n        /* \"#utility.yul\":8475:8493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8468:8528   */\n      mstore\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4655:4705  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_166\n        /* \"#utility.yul\":8163:8534   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4716  if (previousOwner != from) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4224:4722  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4891:4895  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4897:4899  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4901:4908  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4890  safeTransferFrom */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2186:2304  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2249:2256  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2297  _requireOwned(tokenId) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2289:2296  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2288  _requireOwned */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2297  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":2478:2972  function safeMint(string memory uri) public {... */\n    tag_79:\n        /* \"contracts/Element of Soul/Land.sol\":2552:2562  msg.sender */\n      caller\n        /* \"contracts/Element of Soul/Land.sol\":2540:2563  whitelisted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2540:2551  whitelisted */\n      0x0c\n        /* \"contracts/Element of Soul/Land.sol\":2540:2563  whitelisted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Element of Soul/Land.sol\":2532:2609  require(whitelisted[msg.sender], \"You are not authorized for minting land!!\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8741:8743   */\n      0x20\n        /* \"contracts/Element of Soul/Land.sol\":2532:2609  require(whitelisted[msg.sender], \"You are not authorized for minting land!!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8723:8744   */\n      mstore\n        /* \"#utility.yul\":8780:8782   */\n      0x29\n        /* \"#utility.yul\":8760:8778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8753:8783   */\n      mstore\n        /* \"#utility.yul\":8819:8853   */\n      0x596f7520617265206e6f7420617574686f72697a656420666f72206d696e7469\n        /* \"#utility.yul\":8799:8817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8792:8854   */\n      mstore\n      shl(0xb8, 0x6e67206c616e642121)\n        /* \"#utility.yul\":8870:8888   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8863:8902   */\n      mstore\n        /* \"#utility.yul\":8919:8938   */\n      0x84\n      add\n        /* \"contracts/Element of Soul/Land.sol\":2532:2609  require(whitelisted[msg.sender], \"You are not authorized for minting land!!\") */\n      tag_166\n        /* \"#utility.yul\":8539:8944   */\n      jump\n        /* \"contracts/Element of Soul/Land.sol\":2532:2609  require(whitelisted[msg.sender], \"You are not authorized for minting land!!\") */\n    tag_178:\n        /* \"contracts/Element of Soul/Land.sol\":2619:2639  _itemsId.increment() */\n      tag_181\n        /* \"contracts/Element of Soul/Land.sol\":2619:2627  _itemsId */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Element of Soul/Land.sol\":2619:2639  _itemsId.increment() */\n    tag_181:\n        /* \"contracts/Element of Soul/Land.sol\":2651:2668  uint256 newItemId */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":2671:2689  _itemsId.current() */\n      tag_183\n        /* \"contracts/Element of Soul/Land.sol\":2671:2679  _itemsId */\n      0x08\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Element of Soul/Land.sol\":2671:2689  _itemsId.current() */\n    tag_183:\n        /* \"contracts/Element of Soul/Land.sol\":2707:2717  msg.sender */\n      caller\n        /* \"contracts/Element of Soul/Land.sol\":2701:2718  NftId[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2701:2706  NftId */\n      0x09\n        /* \"contracts/Element of Soul/Land.sol\":2701:2718  NftId[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":2719:2724  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":2719:2736  count[msg.sender] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":2651:2689  uint256 newItemId = _itemsId.current() */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/Element of Soul/Land.sol\":2701:2718  NftId[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":2719:2740  count[msg.sender] + 1 */\n      tag_185\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":2739:2740  1 */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":2719:2740  count[msg.sender] + 1 */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/Element of Soul/Land.sol\":2701:2741  NftId[msg.sender][count[msg.sender] + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":2701:2753  NftId[msg.sender][count[msg.sender] + 1] = newItemId */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2808:2818  msg.sender */\n      caller\n        /* \"contracts/Element of Soul/Land.sol\":2802:2819  count[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2802:2807  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":2802:2819  count[msg.sender] */\n      dup4\n      mstore\n      swap3\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":2802:2823  count[msg.sender] + 1 */\n      tag_187\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":2822:2823  1 */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":2802:2823  count[msg.sender] + 1 */\n      tag_186\n      jump\t// in\n    tag_187:\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Element of Soul/Land.sol\":2825:2828  uri */\n      dup4\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Element of Soul/Land.sol\":2830:2845  block.timestamp */\n      timestamp\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Element of Soul/Land.sol\":2847:2851  true */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":2787:2852  NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":2763:2773  NftMinting */\n      0x0b\n        /* \"contracts/Element of Soul/Land.sol\":2763:2784  NftMinting[newItemId] */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":2774:2783  newItemId */\n      dup4\n        /* \"contracts/Element of Soul/Land.sol\":2763:2784  NftMinting[newItemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":2763:2852  NftMinting[newItemId] = NFT(newItemId, count[msg.sender] + 1, uri, block.timestamp, true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Element of Soul/Land.sol\":2862:2894  _safeMint(msg.sender, newItemId) */\n      tag_190\n        /* \"contracts/Element of Soul/Land.sol\":2872:2882  msg.sender */\n      caller\n        /* \"contracts/Element of Soul/Land.sol\":2884:2893  newItemId */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":2862:2871  _safeMint */\n      tag_191\n        /* \"contracts/Element of Soul/Land.sol\":2862:2894  _safeMint(msg.sender, newItemId) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/Element of Soul/Land.sol\":2906:2934  _setTokenURI(newItemId, uri) */\n      tag_192\n        /* \"contracts/Element of Soul/Land.sol\":2919:2928  newItemId */\n      dup2\n        /* \"contracts/Element of Soul/Land.sol\":2930:2933  uri */\n      dup4\n        /* \"contracts/Element of Soul/Land.sol\":2906:2918  _setTokenURI */\n      tag_193\n        /* \"contracts/Element of Soul/Land.sol\":2906:2934  _setTokenURI(newItemId, uri) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/Element of Soul/Land.sol\":2951:2961  msg.sender */\n      caller\n        /* \"contracts/Element of Soul/Land.sol\":2945:2962  count[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2945:2950  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":2945:2962  count[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":2945:2964  count[msg.sender]++ */\n      dup1\n      sload\n      swap2\n      tag_194\n      dup4\n      tag_195\n      jump\t// in\n    tag_194:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":2522:2972  {... */\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":2478:2972  function safeMint(string memory uri) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Element of Soul/Land.sol\":4046:4474  function updateTokenId(address _to,uint _tokenId,address _seller) public {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":4129:4139  NftId[_to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":4129:4134  NftId */\n      0x09\n        /* \"contracts/Element of Soul/Land.sol\":4129:4139  NftId[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4140:4145  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":4140:4150  count[_to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":4158:4166  _tokenId */\n      dup5\n      swap3\n        /* \"contracts/Element of Soul/Land.sol\":4129:4139  NftId[_to] */\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":4140:4154  count[_to] + 1 */\n      tag_197\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":4153:4154  1 */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":4140:4154  count[_to] + 1 */\n      tag_186\n      jump\t// in\n    tag_197:\n        /* \"contracts/Element of Soul/Land.sol\":4129:4155  NftId[_to][count[_to] + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4129:4166  NftId[_to][count[_to] + 1] = _tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":4176:4196  NFT[] memory myArray */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":4200:4219  getTokenId(_seller) */\n      tag_198\n        /* \"contracts/Element of Soul/Land.sol\":4211:4218  _seller */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":4200:4210  getTokenId */\n      tag_129\n        /* \"contracts/Element of Soul/Land.sol\":4200:4219  getTokenId(_seller) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/Element of Soul/Land.sol\":4176:4219  NFT[] memory myArray =  getTokenId(_seller) */\n      swap1\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":4233:4239  uint i */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":4229:4446  for(uint i=0 ; i < myArray.length ; i++){... */\n    tag_199:\n        /* \"contracts/Element of Soul/Land.sol\":4248:4255  myArray */\n      dup2\n        /* \"contracts/Element of Soul/Land.sol\":4248:4262  myArray.length */\n      mload\n        /* \"contracts/Element of Soul/Land.sol\":4244:4245  i */\n      dup2\n        /* \"contracts/Element of Soul/Land.sol\":4244:4262  i < myArray.length */\n      lt\n        /* \"contracts/Element of Soul/Land.sol\":4229:4446  for(uint i=0 ; i < myArray.length ; i++){... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/Element of Soul/Land.sol\":4308:4316  _tokenId */\n      dup4\n        /* \"contracts/Element of Soul/Land.sol\":4286:4293  myArray */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":4294:4295  i */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":4286:4296  myArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Element of Soul/Land.sol\":4286:4304  myArray[i].tokenId */\n      0x00\n      add\n      mload\n        /* \"contracts/Element of Soul/Land.sol\":4286:4316  myArray[i].tokenId == _tokenId */\n      sub\n        /* \"contracts/Element of Soul/Land.sol\":4283:4436  if(myArray[i].tokenId == _tokenId){... */\n      tag_205\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":4357:4371  NftId[_seller] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":4357:4362  NftId */\n      0x09\n        /* \"contracts/Element of Soul/Land.sol\":4357:4371  NftId[_seller] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4372:4377  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":4372:4386  count[_seller] */\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":4357:4387  NftId[_seller][count[_seller]] */\n      dup6\n      mstore\n      dup1\n      dup4\n      mstore\n      swap1\n      dup5\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":4335:4349  NftId[_seller] */\n      swap5\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":4357:4371  NftId[_seller] */\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":4350:4353  i+1 */\n      tag_206\n        /* \"contracts/Element of Soul/Land.sol\":4350:4351  i */\n      dup5\n        /* \"contracts/Element of Soul/Land.sol\":4352:4353  1 */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":4350:4353  i+1 */\n      tag_186\n      jump\t// in\n    tag_206:\n        /* \"contracts/Element of Soul/Land.sol\":4335:4354  NftId[_seller][i+1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4335:4387  NftId[_seller][i+1] = NftId[_seller][count[_seller]] */\n      swap4\n      swap1\n      swap4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":4405:4419  count[_seller] */\n      dup7\n      and\n      dup4\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":4405:4410  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":4405:4419  count[_seller] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4405:4421  count[_seller]-- */\n      dup1\n      sload\n      swap2\n      tag_207\n      dup4\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":4283:4436  if(myArray[i].tokenId == _tokenId){... */\n    tag_205:\n        /* \"contracts/Element of Soul/Land.sol\":4265:4268  i++ */\n      0x01\n      add\n        /* \"contracts/Element of Soul/Land.sol\":4229:4446  for(uint i=0 ; i < myArray.length ; i++){... */\n      jump(tag_199)\n    tag_200:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":4455:4465  count[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":4455:4460  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":4455:4465  count[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":4455:4467  count[_to]++ */\n      dup1\n      sload\n      swap2\n      tag_209\n      dup4\n      tag_195\n      jump\t// in\n    tag_209:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":4119:4474  {... */\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":4046:4474  function updateTokenId(address _to,uint _tokenId,address _seller) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1984:1991  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2007:2026  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2003:2090  if (owner == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2049:2079  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2076:2077  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2049:2079  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2049:2079  ERC721InvalidOwner(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2003:2090  if (owner == address(0)) {... */\n    tag_211:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2122  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2115  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2122  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Element of Soul/Land.sol\":4650:4763  function getTokenUri(uint tokenId) external view returns(string memory) {... */\n    tag_92:\n        /* \"contracts/Element of Soul/Land.sol\":4707:4720  string memory */\n      0x60\n        /* \"contracts/Element of Soul/Land.sol\":4739:4756  tokenURI(tokenId) */\n      tag_140\n        /* \"contracts/Element of Soul/Land.sol\":4748:4755  tokenId */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":4739:4747  tokenURI */\n      tag_116\n        /* \"contracts/Element of Soul/Land.sol\":4739:4756  tokenURI(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2612  function symbol() public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2566:2579  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2605  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2591:2605  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":2195:2303  function unwhitelist(address _authorized) public onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":2264:2288  whitelisted[_authorized] */\n      and\n        /* \"contracts/Element of Soul/Land.sol\":2291:2296  false */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":2264:2288  whitelisted[_authorized] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":2264:2275  whitelisted */\n      0x0c\n        /* \"contracts/Element of Soul/Land.sol\":2264:2288  whitelisted[_authorized] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":2264:2296  whitelisted[_authorized] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Element of Soul/Land.sol\":2195:2303  function unwhitelist(address _authorized) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Element of Soul/Land.sol\":1907:2012  function whitelist(address _authorized) public onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":1974:1998  whitelisted[_authorized] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":1974:1985  whitelisted */\n      0x0c\n        /* \"contracts/Element of Soul/Land.sol\":1974:1998  whitelisted[_authorized] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":1974:2005  whitelisted[_authorized] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Element of Soul/Land.sol\":2001:2005  true */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":1974:2005  whitelisted[_authorized] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Element of Soul/Land.sol\":1907:2012  function whitelist(address _authorized) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3863  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3856  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3837:3845  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3847:3855  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3822  _setApprovalForAll */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3856  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4986:5194  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5130  transferFrom(from, to, tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5112:5116  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5118:5120  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5122:5129  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5111  transferFrom */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5130  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5187  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5163:5167  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5169:5171  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5173:5180  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5182:5186  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5162  _checkOnERC721Received */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5187  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"contracts/Element of Soul/Land.sol\":4973:5162  function tokenURI(uint256 tokenId)... */\n    tag_116:\n        /* \"contracts/Element of Soul/Land.sol\":5096:5109  string memory */\n      0x60\n        /* \"contracts/Element of Soul/Land.sol\":5132:5155  super.tokenURI(tokenId) */\n      tag_140\n        /* \"contracts/Element of Soul/Land.sol\":5147:5154  tokenId */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":5132:5146  super.tokenURI */\n      tag_244\n        /* \"contracts/Element of Soul/Land.sol\":5132:5155  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4065  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4017:4021  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4065  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4058  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4065  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4075  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Element of Soul/Land.sol\":3088:3410  function getTokenId(address _seller) public view returns(NFT[] memory) {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":3202:3216  count[_seller] */\n      dup2\n      and\n        /* \"contracts/Element of Soul/Land.sol\":3169:3189  NFT[] memory myArray */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":3202:3216  count[_seller] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":3202:3207  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":3202:3216  count[_seller] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":3145:3157  NFT[] memory */\n      0x60\n      swap2\n        /* \"contracts/Element of Soul/Land.sol\":3169:3189  NFT[] memory myArray */\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":3192:3217  new NFT[](count[_seller]) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_250\n      jumpi\n      dup2\n      0x20\n      add\n    tag_251:\n      tag_252\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_252:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_251\n      jumpi\n      swap1\n      pop\n    tag_250:\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":3169:3217  NFT[] memory myArray = new NFT[](count[_seller]) */\n      swap1\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":3234:3240  uint i */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":3229:3380  for (uint i = 0; i < count[_seller]; i++) { ... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":3250:3264  count[_seller] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":3250:3255  count */\n      0x0a\n        /* \"contracts/Element of Soul/Land.sol\":3250:3264  count[_seller] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":3246:3264  i < count[_seller] */\n      dup2\n      lt\n        /* \"contracts/Element of Soul/Land.sol\":3229:3380  for (uint i = 0; i < count[_seller]; i++) { ... */\n      iszero\n      tag_255\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Element of Soul/Land.sol\":3301:3315  NftId[_seller] */\n      dup5\n      and\n        /* \"contracts/Element of Soul/Land.sol\":3286:3298  uint tokenId */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":3301:3315  NftId[_seller] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":3301:3306  NftId */\n      0x09\n        /* \"contracts/Element of Soul/Land.sol\":3301:3315  NftId[_seller] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":3286:3298  uint tokenId */\n      dup2\n        /* \"contracts/Element of Soul/Land.sol\":3316:3321  i + 1 */\n      tag_257\n        /* \"contracts/Element of Soul/Land.sol\":3316:3317  i */\n      dup5\n        /* \"contracts/Element of Soul/Land.sol\":3320:3321  1 */\n      0x01\n        /* \"contracts/Element of Soul/Land.sol\":3316:3321  i + 1 */\n      tag_186\n      jump\t// in\n    tag_257:\n        /* \"contracts/Element of Soul/Land.sol\":3301:3322  NftId[_seller][i + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Element of Soul/Land.sol\":3286:3322  uint tokenId = NftId[_seller][i + 1] */\n      swap1\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":3349:3359  NftMinting */\n      0x0b\n        /* \"contracts/Element of Soul/Land.sol\":3349:3368  NftMinting[tokenId] */\n      0x00\n        /* \"contracts/Element of Soul/Land.sol\":3360:3367  tokenId */\n      dup3\n        /* \"contracts/Element of Soul/Land.sol\":3349:3368  NftMinting[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Element of Soul/Land.sol\":3336:3368  myArray[i] = NftMinting[tokenId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_258\n      swap1\n      tag_144\n      jump\t// in\n    tag_258:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_144\n      jump\t// in\n    tag_259:\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_261\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_260)\n    tag_261:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_262:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_262\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_260:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x03\n      dup3\n      add\n      sload\n      0x20\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x40\n      swap1\n      swap2\n      add\n      mstore\n        /* \"contracts/Element of Soul/Land.sol\":3336:3346  myArray[i] */\n      dup4\n      mload\n        /* \"contracts/Element of Soul/Land.sol\":3336:3343  myArray */\n      dup5\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":3344:3345  i */\n      dup5\n      swap1\n        /* \"contracts/Element of Soul/Land.sol\":3336:3346  myArray[i] */\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_264\n      tag_204\n      jump\t// in\n    tag_264:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Element of Soul/Land.sol\":3336:3368  myArray[i] = NftMinting[tokenId] */\n      mstore\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":3266:3269  i++ */\n      0x01\n      add\n        /* \"contracts/Element of Soul/Land.sol\":3229:3380  for (uint i = 0; i < count[_seller]; i++) { ... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"contracts/Element of Soul/Land.sol\":3396:3403  myArray */\n      swap3\n        /* \"contracts/Element of Soul/Land.sol\":3088:3410  function getTokenId(address _seller) public view returns(NFT[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      dup3\n      and\n      shl(0xe1, 0x24832483)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      tag_140\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16172:16413  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16235:16242  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5816  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5807  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5816  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16297:16385  if (owner == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16343:16374  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1107:1132   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1080:1098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16343:16374  ERC721NonexistentToken(tokenId) */\n      tag_166\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14452:14572  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14532:14565  _approve(to, tokenId, auth, true) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14541:14543  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14545:14552  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14554:14558  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14560:14564  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14532:14540  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14532:14565  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8839:9667  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8925:8932  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5816  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5807  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5800:5816  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9036:9054  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9032:9118  if (auth != address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9070:9107  _checkAuthorized(from, auth, tokenId) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9087:9091  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9093:9097  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9099:9106  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9070:9086  _checkAuthorized */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9070:9107  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9180  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9158:9431  if (from != address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9278:9326  _approve(address(0), tokenId, address(0), false) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9295:9296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9299:9306  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9316:9317  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9320:9325  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9278:9286  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9278:9326  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9369:9384  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9369:9378  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9369:9384  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9369:9389  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9158:9431  if (from != address(0)) {... */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9445:9461  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9564  if (to != address(0)) {... */\n      tag_292\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9505:9518  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9505:9514  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9505:9518  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9505:9523  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9522:9523  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9505:9523  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9564  if (to != address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9574:9590  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9574:9581  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9574:9590  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9574:9595  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9611:9638  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9574:9590  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9611:9638  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9656:9660  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8839:9667  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10667:10767  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10734:10760  _safeMint(to, tokenId, \"\") */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10744:10746  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10748:10755  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10734:10760  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10734:10743  _safeMint */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10734:10760  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      tag_189\n      jump\t// in\n    tag_299:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":1107:1132   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n      swap1\n        /* \"#utility.yul\":1095:1097   */\n      0x20\n        /* \"#utility.yul\":1080:1098   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15625:15937  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15732:15754  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15728:15819  if (operator == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15777:15808  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15777:15808  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15777:15808  ERC721InvalidOperator(operator) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15728:15819  if (operator == address(0)) {... */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15828:15853  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15828:15846  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15828:15853  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15828:15863  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15828:15874  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15889:15930  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15889:15930  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15889:15930  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15625:15937  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16952:17734  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17082  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17086  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17064:17728  if (to.code.length > 0) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17106:17177  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17106:17142  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17106:17177  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_315\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17157:17161  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17163:17170  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17172:17176  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17106:17177  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_316\n      jump\t// in\n    tag_315:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_317\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_318\n      swap2\n      dup2\n      add\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      0x01\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17102:17718  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_320\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_325\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_324)\n    tag_325:\n      0x60\n      swap2\n      pop\n    tag_324:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17415:17421  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17415:17428  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17432:17433  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17415:17433  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17411:17704  if (reason.length == 0) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17464:17489  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17464:17489  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17464:17489  ERC721InvalidReceiver(to) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17411:17704  if (reason.length == 0) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17656:17662  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17650:17663  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17641:17647  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17637:17639  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17633:17648  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17626:17664  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17102:17718  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_320:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17224:17275  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17220:17350  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17306:17331  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17306:17331  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17306:17331  ERC721InvalidReceiver(to) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17220:17350  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17178:17364  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16952:17734  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_333:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_334\n      swap1\n      tag_144\n      jump\t// in\n    tag_334:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_335\n      swap1\n      tag_144\n      jump\t// in\n    tag_335:\n      dup1\n      iszero\n      tag_336\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_337\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_336)\n    tag_337:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_338:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_338\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3251:3260  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3175:3267  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_341\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_343\n      swap3\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1562:1862  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1664:1668  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1739  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1803  interfaceId == type(IERC721).interfaceId ||... */\n      tag_348\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1755:1803  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1803  interfaceId == type(IERC721).interfaceId ||... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1855  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_140\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1819:1855  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14754:15416  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14914:14923  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14914:14945  emitEvent || auth != address(0) */\n      dup1\n      tag_354\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14945  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14914:14945  emitEvent || auth != address(0) */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14910:15370  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14974  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14977:14999  _requireOwned(tokenId) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14991:14998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14977:14990  _requireOwned */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14977:14999  _requireOwned(tokenId) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14999  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15145  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15162  auth != address(0) && owner != auth */\n      tag_357\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15158:15162  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15149:15162  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15149:15154  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15149:15162  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15162  auth != address(0) && owner != auth */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15196  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_358\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15196  isApprovedForAll(owner, auth) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15184:15189  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15191:15195  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15183  isApprovedForAll */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15167:15196  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15166:15196  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15196  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15123:15265  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15223:15250  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15223:15250  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15223:15250  ERC721InvalidApprover(auth) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15123:15265  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15292  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15279:15360  if (emitEvent) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15337:15344  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15333:15335  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15317:15345  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15326:15331  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15317:15345  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15279:15360  if (emitEvent) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14947:15370  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14910:15370  if (emitEvent || auth != address(0)) {... */\n    tag_355:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15380:15404  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15380:15395  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15380:15404  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15380:15409  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14754:15416  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7083:7451  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7195:7233  _isAuthorized(owner, spender, tokenId) */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7209:7214  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7216:7223  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7232  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7195:7208  _isAuthorized */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7195:7233  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7190:7445  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_174\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7253:7272  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7249:7435  if (owner == address(0)) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7299:7330  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1107:1132   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1080:1098   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7299:7330  ERC721NonexistentToken(tokenId) */\n      tag_166\n        /* \"#utility.yul\":961:1138   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7249:7435  if (owner == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7376:7420  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13185:13217   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7376:7420  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13167:13218   */\n      mstore\n        /* \"#utility.yul\":13234:13252   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":13227:13261   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":13140:13158   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7376:7420  ERC721InsufficientApproval(spender, tokenId) */\n      tag_166\n        /* \"#utility.yul\":12993:13267   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10988:11170  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11082:11100  _mint(to, tokenId) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11088:11090  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11092:11099  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11082:11087  _mint */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11082:11100  _mint(to, tokenId) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11110:11163  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11141:11142  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11145:11147  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11149:11156  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11158:11162  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11110:11132  _checkOnERC721Received */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11110:11163  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2933  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2789  _requireOwned(tokenId) */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2781:2788  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2780  _requireOwned */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2789  _requireOwned(tokenId) */\n      jump\t// in\n    tag_378:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2800:2821  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2824:2834  _baseURI() */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3251:3260  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3175:3267  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2824:2834  _baseURI() */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2800:2834  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2875:2876  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2857:2864  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2872  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2876  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2926  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_380\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_381)\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2893:2900  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2920  tokenId.toString() */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2909  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2918  tokenId.toString */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2920  tokenId.toString() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2879:2921  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_384\n      swap3\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_384:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2926  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2844:2926  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2933  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6377:6649  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6480:6484  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6515:6536  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6515:6642  spender != address(0) &&... */\n      tag_345\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6562:6569  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6553:6569  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6553:6558  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6553:6569  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6553:6605  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_389\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6573:6605  isApprovedForAll(owner, spender) */\n      tag_389\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6595  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6597:6604  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6573:6589  isApprovedForAll */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6573:6605  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6553:6641  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_345\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6009:6016  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6059  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6050  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6035:6059  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6609:6641  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6496:6642  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6377:6649  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9989:10316  function _mint(address to, uint256 tokenId) internal {... */\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10056:10072  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10052:10139  if (to == address(0)) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10095:10128  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10125:10126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10095:10128  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10095:10128  ERC721InvalidReceiver(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10052:10139  if (to == address(0)) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10148:10169  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10172:10204  _update(to, tokenId, address(0)) */\n      tag_395\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10182  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10191  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10201:10202  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10172:10179  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10172:10204  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10148:10204  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10218:10245  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10214:10310  if (previousOwner != address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10268:10299  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10296:10297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10268:10299  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10268:10299  ERC721InvalidSender(address(0)) */\n      tag_166\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_399\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_402\n      jumpi\n      tag_402\n      tag_249\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_403\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_403:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_404:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_404\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_411\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_430:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_36:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_443:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_381\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":592:765   */\n    tag_431:\n        /* \"#utility.yul\":660:680   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":709:740   */\n      dup2\n      and\n        /* \"#utility.yul\":699:741   */\n      dup2\n      eq\n        /* \"#utility.yul\":689:759   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":689:759   */\n    tag_447:\n        /* \"#utility.yul\":592:765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":770:956   */\n    tag_42:\n        /* \"#utility.yul\":829:835   */\n      0x00\n        /* \"#utility.yul\":882:884   */\n      0x20\n        /* \"#utility.yul\":870:879   */\n      dup3\n        /* \"#utility.yul\":861:868   */\n      dup5\n        /* \"#utility.yul\":857:880   */\n      sub\n        /* \"#utility.yul\":853:885   */\n      slt\n        /* \"#utility.yul\":850:902   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":898:899   */\n      0x00\n        /* \"#utility.yul\":895:896   */\n      dup1\n        /* \"#utility.yul\":888:900   */\n      revert\n        /* \"#utility.yul\":850:902   */\n    tag_449:\n        /* \"#utility.yul\":921:950   */\n      tag_381\n        /* \"#utility.yul\":940:949   */\n      dup3\n        /* \"#utility.yul\":921:950   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":1143:1393   */\n    tag_432:\n        /* \"#utility.yul\":1228:1229   */\n      0x00\n        /* \"#utility.yul\":1238:1351   */\n    tag_453:\n        /* \"#utility.yul\":1252:1258   */\n      dup4\n        /* \"#utility.yul\":1249:1250   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      lt\n        /* \"#utility.yul\":1238:1351   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":1328:1339   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1322:1340   */\n      mload\n        /* \"#utility.yul\":1309:1320   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1302:1341   */\n      mstore\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"#utility.yul\":1267:1277   */\n      add\n        /* \"#utility.yul\":1238:1351   */\n      jump(tag_453)\n    tag_455:\n      pop\n      pop\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1367:1383   */\n      swap2\n      add\n        /* \"#utility.yul\":1360:1387   */\n      mstore\n        /* \"#utility.yul\":1143:1393   */\n      jump\t// out\n        /* \"#utility.yul\":1398:1669   */\n    tag_433:\n        /* \"#utility.yul\":1440:1443   */\n      0x00\n        /* \"#utility.yul\":1478:1483   */\n      dup2\n        /* \"#utility.yul\":1472:1484   */\n      mload\n        /* \"#utility.yul\":1505:1511   */\n      dup1\n        /* \"#utility.yul\":1500:1503   */\n      dup5\n        /* \"#utility.yul\":1493:1512   */\n      mstore\n        /* \"#utility.yul\":1521:1597   */\n      tag_457\n        /* \"#utility.yul\":1590:1596   */\n      dup2\n        /* \"#utility.yul\":1583:1587   */\n      0x20\n        /* \"#utility.yul\":1578:1581   */\n      dup7\n        /* \"#utility.yul\":1574:1588   */\n      add\n        /* \"#utility.yul\":1567:1571   */\n      0x20\n        /* \"#utility.yul\":1560:1565   */\n      dup7\n        /* \"#utility.yul\":1556:1572   */\n      add\n        /* \"#utility.yul\":1521:1597   */\n      tag_432\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1651:1653   */\n      0x1f\n        /* \"#utility.yul\":1630:1645   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1626:1655   */\n      and\n        /* \"#utility.yul\":1617:1656   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1658:1662   */\n      0x20\n        /* \"#utility.yul\":1613:1663   */\n      add\n      swap3\n        /* \"#utility.yul\":1398:1669   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1674:1894   */\n    tag_49:\n        /* \"#utility.yul\":1823:1825   */\n      0x20\n        /* \"#utility.yul\":1812:1821   */\n      dup2\n        /* \"#utility.yul\":1805:1826   */\n      mstore\n        /* \"#utility.yul\":1786:1790   */\n      0x00\n        /* \"#utility.yul\":1843:1888   */\n      tag_381\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1873:1882   */\n      dup4\n        /* \"#utility.yul\":1869:1887   */\n      add\n        /* \"#utility.yul\":1861:1867   */\n      dup5\n        /* \"#utility.yul\":1843:1888   */\n      tag_433\n      jump\t// in\n        /* \"#utility.yul\":1899:2125   */\n    tag_52:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1990:1997   */\n      dup5\n        /* \"#utility.yul\":1986:2009   */\n      sub\n        /* \"#utility.yul\":1982:2014   */\n      slt\n        /* \"#utility.yul\":1979:2031   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":2027:2028   */\n      0x00\n        /* \"#utility.yul\":2024:2025   */\n      dup1\n        /* \"#utility.yul\":2017:2029   */\n      revert\n        /* \"#utility.yul\":1979:2031   */\n    tag_461:\n      pop\n        /* \"#utility.yul\":2072:2095   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1899:2125   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2338:2638   */\n    tag_58:\n        /* \"#utility.yul\":2406:2412   */\n      0x00\n        /* \"#utility.yul\":2414:2420   */\n      dup1\n        /* \"#utility.yul\":2467:2469   */\n      0x40\n        /* \"#utility.yul\":2455:2464   */\n      dup4\n        /* \"#utility.yul\":2446:2453   */\n      dup6\n        /* \"#utility.yul\":2442:2465   */\n      sub\n        /* \"#utility.yul\":2438:2470   */\n      slt\n        /* \"#utility.yul\":2435:2487   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2480:2481   */\n      dup1\n        /* \"#utility.yul\":2473:2485   */\n      revert\n        /* \"#utility.yul\":2435:2487   */\n    tag_464:\n        /* \"#utility.yul\":2506:2535   */\n      tag_465\n        /* \"#utility.yul\":2525:2534   */\n      dup4\n        /* \"#utility.yul\":2506:2535   */\n      tag_431\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2496:2535   */\n      swap5\n        /* \"#utility.yul\":2604:2606   */\n      0x20\n        /* \"#utility.yul\":2589:2607   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2576:2608   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2338:2638   */\n      jump\t// out\n        /* \"#utility.yul\":2643:3160   */\n    tag_64:\n        /* \"#utility.yul\":2898:2904   */\n      dup6\n        /* \"#utility.yul\":2887:2896   */\n      dup2\n        /* \"#utility.yul\":2880:2905   */\n      mstore\n        /* \"#utility.yul\":2941:2947   */\n      dup5\n        /* \"#utility.yul\":2936:2938   */\n      0x20\n        /* \"#utility.yul\":2925:2934   */\n      dup3\n        /* \"#utility.yul\":2921:2939   */\n      add\n        /* \"#utility.yul\":2914:2948   */\n      mstore\n        /* \"#utility.yul\":2984:2987   */\n      0xa0\n        /* \"#utility.yul\":2979:2981   */\n      0x40\n        /* \"#utility.yul\":2968:2977   */\n      dup3\n        /* \"#utility.yul\":2964:2982   */\n      add\n        /* \"#utility.yul\":2957:2988   */\n      mstore\n        /* \"#utility.yul\":2861:2865   */\n      0x00\n        /* \"#utility.yul\":3005:3051   */\n      tag_467\n        /* \"#utility.yul\":3046:3049   */\n      0xa0\n        /* \"#utility.yul\":3035:3044   */\n      dup4\n        /* \"#utility.yul\":3031:3050   */\n      add\n        /* \"#utility.yul\":3023:3029   */\n      dup7\n        /* \"#utility.yul\":3005:3051   */\n      tag_433\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3082:3084   */\n      0x60\n        /* \"#utility.yul\":3067:3085   */\n      dup4\n      add\n        /* \"#utility.yul\":3060:3094   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":3138:3152   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3131:3153   */\n      iszero\n        /* \"#utility.yul\":3125:3128   */\n      0x80\n        /* \"#utility.yul\":3110:3129   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3103:3154   */\n      mstore\n        /* \"#utility.yul\":2997:3051   */\n      swap4\n        /* \"#utility.yul\":2643:3160   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3165:3539   */\n    tag_67:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup1\n        /* \"#utility.yul\":3258:3264   */\n      0x00\n        /* \"#utility.yul\":3311:3313   */\n      0x60\n        /* \"#utility.yul\":3299:3308   */\n      dup5\n        /* \"#utility.yul\":3290:3297   */\n      dup7\n        /* \"#utility.yul\":3286:3309   */\n      sub\n        /* \"#utility.yul\":3282:3314   */\n      slt\n        /* \"#utility.yul\":3279:3331   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3324:3325   */\n      dup1\n        /* \"#utility.yul\":3317:3329   */\n      revert\n        /* \"#utility.yul\":3279:3331   */\n    tag_469:\n        /* \"#utility.yul\":3350:3379   */\n      tag_470\n        /* \"#utility.yul\":3369:3378   */\n      dup5\n        /* \"#utility.yul\":3350:3379   */\n      tag_431\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":3340:3379   */\n      swap3\n      pop\n        /* \"#utility.yul\":3398:3436   */\n      tag_471\n        /* \"#utility.yul\":3432:3434   */\n      0x20\n        /* \"#utility.yul\":3421:3430   */\n      dup6\n        /* \"#utility.yul\":3417:3435   */\n      add\n        /* \"#utility.yul\":3398:3436   */\n      tag_431\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":3165:3539   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3388:3436   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3505:3507   */\n      0x40\n        /* \"#utility.yul\":3490:3508   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3477:3509   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3165:3539   */\n      jump\t// out\n        /* \"#utility.yul\":3544:3671   */\n    tag_249:\n        /* \"#utility.yul\":3605:3615   */\n      0x4e487b71\n        /* \"#utility.yul\":3600:3603   */\n      0xe0\n        /* \"#utility.yul\":3596:3616   */\n      shl\n        /* \"#utility.yul\":3593:3594   */\n      0x00\n        /* \"#utility.yul\":3586:3617   */\n      mstore\n        /* \"#utility.yul\":3636:3640   */\n      0x41\n        /* \"#utility.yul\":3633:3634   */\n      0x04\n        /* \"#utility.yul\":3626:3641   */\n      mstore\n        /* \"#utility.yul\":3660:3664   */\n      0x24\n        /* \"#utility.yul\":3657:3658   */\n      0x00\n        /* \"#utility.yul\":3650:3665   */\n      revert\n        /* \"#utility.yul\":3676:4392   */\n    tag_434:\n        /* \"#utility.yul\":3741:3746   */\n      0x00\n        /* \"#utility.yul\":3773:3774   */\n      dup1\n        /* \"#utility.yul\":3797:3815   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3789:3795   */\n      dup5\n        /* \"#utility.yul\":3786:3816   */\n      gt\n        /* \"#utility.yul\":3783:3839   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3819:3837   */\n      tag_475\n      tag_249\n      jump\t// in\n    tag_475:\n      pop\n        /* \"#utility.yul\":3974:3976   */\n      0x40\n        /* \"#utility.yul\":3968:3977   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":3887:3889   */\n      0x1f\n        /* \"#utility.yul\":3866:3881   */\n      dup6\n      add\n        /* \"#utility.yul\":3862:3891   */\n      dup2\n      and\n        /* \"#utility.yul\":4032:4034   */\n      0x3f\n        /* \"#utility.yul\":4020:4035   */\n      add\n        /* \"#utility.yul\":4016:4045   */\n      and\n        /* \"#utility.yul\":4004:4046   */\n      dup2\n      add\n        /* \"#utility.yul\":4097:4119   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":4076:4094   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4061:4095   */\n      dup3\n      gt\n        /* \"#utility.yul\":4058:4120   */\n      or\n        /* \"#utility.yul\":4055:4143   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":4123:4141   */\n      tag_477\n      tag_249\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4159:4161   */\n      0x40\n        /* \"#utility.yul\":4152:4174   */\n      mstore\n        /* \"#utility.yul\":4207:4229   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4192:4198   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":4244:4260   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":4241:4266   */\n      dup6\n      lt\n        /* \"#utility.yul\":4238:4283   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4279:4280   */\n      0x00\n        /* \"#utility.yul\":4276:4277   */\n      dup1\n        /* \"#utility.yul\":4269:4281   */\n      revert\n        /* \"#utility.yul\":4238:4283   */\n    tag_478:\n        /* \"#utility.yul\":4329:4335   */\n      dup4\n        /* \"#utility.yul\":4324:4327   */\n      dup4\n        /* \"#utility.yul\":4317:4321   */\n      0x20\n        /* \"#utility.yul\":4309:4315   */\n      dup4\n        /* \"#utility.yul\":4305:4322   */\n      add\n        /* \"#utility.yul\":4292:4336   */\n      calldatacopy\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4377:4381   */\n      0x20\n        /* \"#utility.yul\":4368:4374   */\n      dup6\n        /* \"#utility.yul\":4360:4366   */\n      dup4\n        /* \"#utility.yul\":4356:4375   */\n      add\n        /* \"#utility.yul\":4352:4382   */\n      add\n        /* \"#utility.yul\":4345:4386   */\n      mstore\n      pop\n        /* \"#utility.yul\":3676:4392   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4397:4848   */\n    tag_78:\n        /* \"#utility.yul\":4466:4472   */\n      0x00\n        /* \"#utility.yul\":4519:4521   */\n      0x20\n        /* \"#utility.yul\":4507:4516   */\n      dup3\n        /* \"#utility.yul\":4498:4505   */\n      dup5\n        /* \"#utility.yul\":4494:4517   */\n      sub\n        /* \"#utility.yul\":4490:4522   */\n      slt\n        /* \"#utility.yul\":4487:4539   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4535:4536   */\n      0x00\n        /* \"#utility.yul\":4532:4533   */\n      dup1\n        /* \"#utility.yul\":4525:4537   */\n      revert\n        /* \"#utility.yul\":4487:4539   */\n    tag_480:\n        /* \"#utility.yul\":4575:4584   */\n      dup2\n        /* \"#utility.yul\":4562:4585   */\n      calldataload\n        /* \"#utility.yul\":4608:4626   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4600:4606   */\n      dup2\n        /* \"#utility.yul\":4597:4627   */\n      gt\n        /* \"#utility.yul\":4594:4644   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4640:4641   */\n      0x00\n        /* \"#utility.yul\":4637:4638   */\n      dup1\n        /* \"#utility.yul\":4630:4642   */\n      revert\n        /* \"#utility.yul\":4594:4644   */\n    tag_481:\n        /* \"#utility.yul\":4663:4685   */\n      dup3\n      add\n        /* \"#utility.yul\":4716:4720   */\n      0x1f\n        /* \"#utility.yul\":4708:4721   */\n      dup2\n      add\n        /* \"#utility.yul\":4704:4731   */\n      dup5\n      sgt\n        /* \"#utility.yul\":4694:4749   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":4745:4746   */\n      0x00\n        /* \"#utility.yul\":4742:4743   */\n      dup1\n        /* \"#utility.yul\":4735:4747   */\n      revert\n        /* \"#utility.yul\":4694:4749   */\n    tag_482:\n        /* \"#utility.yul\":4768:4842   */\n      tag_345\n        /* \"#utility.yul\":4834:4841   */\n      dup5\n        /* \"#utility.yul\":4829:4831   */\n      dup3\n        /* \"#utility.yul\":4816:4832   */\n      calldataload\n        /* \"#utility.yul\":4811:4813   */\n      0x20\n        /* \"#utility.yul\":4807:4809   */\n      dup5\n        /* \"#utility.yul\":4803:4814   */\n      add\n        /* \"#utility.yul\":4768:4842   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":4853:5227   */\n    tag_82:\n        /* \"#utility.yul\":4930:4936   */\n      0x00\n        /* \"#utility.yul\":4938:4944   */\n      dup1\n        /* \"#utility.yul\":4946:4952   */\n      0x00\n        /* \"#utility.yul\":4999:5001   */\n      0x60\n        /* \"#utility.yul\":4987:4996   */\n      dup5\n        /* \"#utility.yul\":4978:4985   */\n      dup7\n        /* \"#utility.yul\":4974:4997   */\n      sub\n        /* \"#utility.yul\":4970:5002   */\n      slt\n        /* \"#utility.yul\":4967:5019   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":5015:5016   */\n      0x00\n        /* \"#utility.yul\":5012:5013   */\n      dup1\n        /* \"#utility.yul\":5005:5017   */\n      revert\n        /* \"#utility.yul\":4967:5019   */\n    tag_485:\n        /* \"#utility.yul\":5038:5067   */\n      tag_486\n        /* \"#utility.yul\":5057:5066   */\n      dup5\n        /* \"#utility.yul\":5038:5067   */\n      tag_431\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5028:5067   */\n      swap3\n      pop\n        /* \"#utility.yul\":5136:5138   */\n      0x20\n        /* \"#utility.yul\":5121:5139   */\n      dup5\n      add\n        /* \"#utility.yul\":5108:5140   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5183:5221   */\n      tag_487\n        /* \"#utility.yul\":5217:5219   */\n      0x40\n        /* \"#utility.yul\":5202:5220   */\n      dup6\n      add\n        /* \"#utility.yul\":5183:5221   */\n      tag_431\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":5173:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:5227   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5232:5579   */\n    tag_108:\n        /* \"#utility.yul\":5297:5303   */\n      0x00\n        /* \"#utility.yul\":5305:5311   */\n      dup1\n        /* \"#utility.yul\":5358:5360   */\n      0x40\n        /* \"#utility.yul\":5346:5355   */\n      dup4\n        /* \"#utility.yul\":5337:5344   */\n      dup6\n        /* \"#utility.yul\":5333:5356   */\n      sub\n        /* \"#utility.yul\":5329:5361   */\n      slt\n        /* \"#utility.yul\":5326:5378   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":5374:5375   */\n      0x00\n        /* \"#utility.yul\":5371:5372   */\n      dup1\n        /* \"#utility.yul\":5364:5376   */\n      revert\n        /* \"#utility.yul\":5326:5378   */\n    tag_489:\n        /* \"#utility.yul\":5397:5426   */\n      tag_490\n        /* \"#utility.yul\":5416:5425   */\n      dup4\n        /* \"#utility.yul\":5397:5426   */\n      tag_431\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":5387:5426   */\n      swap2\n      pop\n        /* \"#utility.yul\":5476:5478   */\n      0x20\n        /* \"#utility.yul\":5465:5474   */\n      dup4\n        /* \"#utility.yul\":5461:5479   */\n      add\n        /* \"#utility.yul\":5448:5480   */\n      calldataload\n        /* \"#utility.yul\":5523:5528   */\n      dup1\n        /* \"#utility.yul\":5516:5529   */\n      iszero\n        /* \"#utility.yul\":5509:5530   */\n      iszero\n        /* \"#utility.yul\":5502:5507   */\n      dup2\n        /* \"#utility.yul\":5499:5531   */\n      eq\n        /* \"#utility.yul\":5489:5549   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":5545:5546   */\n      0x00\n        /* \"#utility.yul\":5542:5543   */\n      dup1\n        /* \"#utility.yul\":5535:5547   */\n      revert\n        /* \"#utility.yul\":5489:5549   */\n    tag_491:\n        /* \"#utility.yul\":5568:5573   */\n      dup1\n        /* \"#utility.yul\":5558:5573   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5232:5579   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5584:6297   */\n    tag_112:\n        /* \"#utility.yul\":5679:5685   */\n      0x00\n        /* \"#utility.yul\":5687:5693   */\n      dup1\n        /* \"#utility.yul\":5695:5701   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup1\n        /* \"#utility.yul\":5756:5759   */\n      0x80\n        /* \"#utility.yul\":5744:5753   */\n      dup6\n        /* \"#utility.yul\":5735:5742   */\n      dup8\n        /* \"#utility.yul\":5731:5754   */\n      sub\n        /* \"#utility.yul\":5727:5760   */\n      slt\n        /* \"#utility.yul\":5724:5777   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5773:5774   */\n      0x00\n        /* \"#utility.yul\":5770:5771   */\n      dup1\n        /* \"#utility.yul\":5763:5775   */\n      revert\n        /* \"#utility.yul\":5724:5777   */\n    tag_493:\n        /* \"#utility.yul\":5796:5825   */\n      tag_494\n        /* \"#utility.yul\":5815:5824   */\n      dup6\n        /* \"#utility.yul\":5796:5825   */\n      tag_431\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5786:5825   */\n      swap4\n      pop\n        /* \"#utility.yul\":5844:5882   */\n      tag_495\n        /* \"#utility.yul\":5878:5880   */\n      0x20\n        /* \"#utility.yul\":5867:5876   */\n      dup7\n        /* \"#utility.yul\":5863:5881   */\n      add\n        /* \"#utility.yul\":5844:5882   */\n      tag_431\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":5834:5882   */\n      swap3\n      pop\n        /* \"#utility.yul\":5951:5953   */\n      0x40\n        /* \"#utility.yul\":5936:5954   */\n      dup6\n      add\n        /* \"#utility.yul\":5923:5955   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6030:6032   */\n      0x60\n        /* \"#utility.yul\":6015:6033   */\n      dup6\n      add\n        /* \"#utility.yul\":6002:6034   */\n      calldataload\n        /* \"#utility.yul\":6057:6075   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6046:6076   */\n      dup2\n      gt\n        /* \"#utility.yul\":6043:6093   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":6089:6090   */\n      0x00\n        /* \"#utility.yul\":6086:6087   */\n      dup1\n        /* \"#utility.yul\":6079:6091   */\n      revert\n        /* \"#utility.yul\":6043:6093   */\n    tag_496:\n        /* \"#utility.yul\":6112:6134   */\n      dup6\n      add\n        /* \"#utility.yul\":6165:6169   */\n      0x1f\n        /* \"#utility.yul\":6157:6170   */\n      dup2\n      add\n        /* \"#utility.yul\":6153:6180   */\n      dup8\n      sgt\n        /* \"#utility.yul\":6143:6198   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6194:6195   */\n      0x00\n        /* \"#utility.yul\":6191:6192   */\n      dup1\n        /* \"#utility.yul\":6184:6196   */\n      revert\n        /* \"#utility.yul\":6143:6198   */\n    tag_497:\n        /* \"#utility.yul\":6217:6291   */\n      tag_498\n        /* \"#utility.yul\":6283:6290   */\n      dup8\n        /* \"#utility.yul\":6278:6280   */\n      dup3\n        /* \"#utility.yul\":6265:6281   */\n      calldataload\n        /* \"#utility.yul\":6260:6262   */\n      0x20\n        /* \"#utility.yul\":6256:6258   */\n      dup5\n        /* \"#utility.yul\":6252:6263   */\n      add\n        /* \"#utility.yul\":6217:6291   */\n      tag_434\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6207:6291   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5584:6297   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6302:6562   */\n    tag_124:\n        /* \"#utility.yul\":6370:6376   */\n      0x00\n        /* \"#utility.yul\":6378:6384   */\n      dup1\n        /* \"#utility.yul\":6431:6433   */\n      0x40\n        /* \"#utility.yul\":6419:6428   */\n      dup4\n        /* \"#utility.yul\":6410:6417   */\n      dup6\n        /* \"#utility.yul\":6406:6429   */\n      sub\n        /* \"#utility.yul\":6402:6434   */\n      slt\n        /* \"#utility.yul\":6399:6451   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":6447:6448   */\n      0x00\n        /* \"#utility.yul\":6444:6445   */\n      dup1\n        /* \"#utility.yul\":6437:6449   */\n      revert\n        /* \"#utility.yul\":6399:6451   */\n    tag_500:\n        /* \"#utility.yul\":6470:6499   */\n      tag_501\n        /* \"#utility.yul\":6489:6498   */\n      dup4\n        /* \"#utility.yul\":6470:6499   */\n      tag_431\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":6460:6499   */\n      swap2\n      pop\n        /* \"#utility.yul\":6518:6556   */\n      tag_502\n        /* \"#utility.yul\":6552:6554   */\n      0x20\n        /* \"#utility.yul\":6541:6550   */\n      dup5\n        /* \"#utility.yul\":6537:6555   */\n      add\n        /* \"#utility.yul\":6518:6556   */\n      tag_431\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6508:6556   */\n      swap1\n      pop\n        /* \"#utility.yul\":6302:6562   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6567:7773   */\n    tag_131:\n        /* \"#utility.yul\":6751:6755   */\n      0x00\n        /* \"#utility.yul\":6799:6801   */\n      0x20\n        /* \"#utility.yul\":6788:6797   */\n      dup3\n        /* \"#utility.yul\":6784:6802   */\n      add\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6818:6827   */\n      dup4\n        /* \"#utility.yul\":6811:6832   */\n      mstore\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6887:6893   */\n      dup5\n        /* \"#utility.yul\":6881:6894   */\n      mload\n        /* \"#utility.yul\":6918:6924   */\n      dup1\n        /* \"#utility.yul\":6910:6916   */\n      dup4\n        /* \"#utility.yul\":6903:6925   */\n      mstore\n        /* \"#utility.yul\":6956:6958   */\n      0x40\n        /* \"#utility.yul\":6945:6954   */\n      dup6\n        /* \"#utility.yul\":6941:6959   */\n      add\n        /* \"#utility.yul\":6934:6959   */\n      swap2\n      pop\n        /* \"#utility.yul\":7018:7020   */\n      0x40\n        /* \"#utility.yul\":7008:7014   */\n      dup2\n        /* \"#utility.yul\":7005:7006   */\n      0x05\n        /* \"#utility.yul\":7001:7015   */\n      shl\n        /* \"#utility.yul\":6990:6999   */\n      dup7\n        /* \"#utility.yul\":6986:7016   */\n      add\n        /* \"#utility.yul\":6982:7021   */\n      add\n        /* \"#utility.yul\":6968:7021   */\n      swap3\n      pop\n        /* \"#utility.yul\":7056:7058   */\n      0x20\n        /* \"#utility.yul\":7048:7054   */\n      dup7\n        /* \"#utility.yul\":7044:7059   */\n      add\n        /* \"#utility.yul\":7077:7078   */\n      0x00\n        /* \"#utility.yul\":7087:7744   */\n    tag_504:\n        /* \"#utility.yul\":7101:7107   */\n      dup3\n        /* \"#utility.yul\":7098:7099   */\n      dup2\n        /* \"#utility.yul\":7095:7108   */\n      lt\n        /* \"#utility.yul\":7087:7744   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":7194:7196   */\n      0x3f\n        /* \"#utility.yul\":7190:7197   */\n      not\n        /* \"#utility.yul\":7178:7187   */\n      dup8\n        /* \"#utility.yul\":7170:7176   */\n      dup7\n        /* \"#utility.yul\":7166:7188   */\n      sub\n        /* \"#utility.yul\":7162:7198   */\n      add\n        /* \"#utility.yul\":7157:7160   */\n      dup5\n        /* \"#utility.yul\":7150:7199   */\n      mstore\n        /* \"#utility.yul\":7228:7234   */\n      dup2\n        /* \"#utility.yul\":7222:7235   */\n      mload\n        /* \"#utility.yul\":7269:7271   */\n      dup1\n        /* \"#utility.yul\":7263:7272   */\n      mload\n        /* \"#utility.yul\":7255:7261   */\n      dup7\n        /* \"#utility.yul\":7248:7273   */\n      mstore\n        /* \"#utility.yul\":7324:7326   */\n      0x20\n        /* \"#utility.yul\":7320:7322   */\n      dup2\n        /* \"#utility.yul\":7316:7327   */\n      add\n        /* \"#utility.yul\":7310:7328   */\n      mload\n        /* \"#utility.yul\":7305:7307   */\n      0x20\n        /* \"#utility.yul\":7297:7303   */\n      dup8\n        /* \"#utility.yul\":7293:7308   */\n      add\n        /* \"#utility.yul\":7286:7329   */\n      mstore\n        /* \"#utility.yul\":7376:7378   */\n      0x40\n        /* \"#utility.yul\":7372:7374   */\n      dup2\n        /* \"#utility.yul\":7368:7379   */\n      add\n        /* \"#utility.yul\":7362:7380   */\n      mload\n        /* \"#utility.yul\":7417:7421   */\n      0xa0\n        /* \"#utility.yul\":7412:7414   */\n      0x40\n        /* \"#utility.yul\":7404:7410   */\n      dup9\n        /* \"#utility.yul\":7400:7415   */\n      add\n        /* \"#utility.yul\":7393:7422   */\n      mstore\n        /* \"#utility.yul\":7449:7499   */\n      tag_507\n        /* \"#utility.yul\":7493:7497   */\n      0xa0\n        /* \"#utility.yul\":7485:7491   */\n      dup9\n        /* \"#utility.yul\":7481:7498   */\n      add\n        /* \"#utility.yul\":7467:7479   */\n      dup3\n        /* \"#utility.yul\":7449:7499   */\n      tag_433\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":7552:7556   */\n      0x60\n        /* \"#utility.yul\":7544:7557   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7538:7558   */\n      mload\n        /* \"#utility.yul\":7519:7536   */\n      swap1\n      dup10\n      add\n        /* \"#utility.yul\":7512:7559   */\n      mstore\n        /* \"#utility.yul\":7626:7630   */\n      0x80\n        /* \"#utility.yul\":7618:7631   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":7612:7632   */\n      mload\n        /* \"#utility.yul\":7605:7633   */\n      iszero\n        /* \"#utility.yul\":7598:7634   */\n      iszero\n        /* \"#utility.yul\":7579:7596   */\n      swap3\n      swap1\n      swap8\n      add\n        /* \"#utility.yul\":7572:7635   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"#utility.yul\":7699:7701   */\n      0x20\n        /* \"#utility.yul\":7722:7734   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":7687:7702   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7123:7124   */\n      0x01\n        /* \"#utility.yul\":7116:7125   */\n      add\n        /* \"#utility.yul\":7087:7744   */\n      jump(tag_504)\n    tag_506:\n      pop\n        /* \"#utility.yul\":7761:7767   */\n      swap3\n      swap7\n        /* \"#utility.yul\":6567:7773   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7778:8158   */\n    tag_144:\n        /* \"#utility.yul\":7857:7858   */\n      0x01\n        /* \"#utility.yul\":7853:7865   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7900:7912   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7921:7982   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":7975:7979   */\n      0x7f\n        /* \"#utility.yul\":7967:7973   */\n      dup3\n        /* \"#utility.yul\":7963:7980   */\n      and\n        /* \"#utility.yul\":7953:7980   */\n      swap2\n      pop\n        /* \"#utility.yul\":7921:7982   */\n    tag_509:\n        /* \"#utility.yul\":8028:8030   */\n      0x20\n        /* \"#utility.yul\":8020:8026   */\n      dup3\n        /* \"#utility.yul\":8017:8031   */\n      lt\n        /* \"#utility.yul\":7997:8015   */\n      dup2\n        /* \"#utility.yul\":7994:8032   */\n      sub\n        /* \"#utility.yul\":7991:8152   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":8074:8084   */\n      0x4e487b71\n        /* \"#utility.yul\":8069:8072   */\n      0xe0\n        /* \"#utility.yul\":8065:8085   */\n      shl\n        /* \"#utility.yul\":8062:8063   */\n      0x00\n        /* \"#utility.yul\":8055:8086   */\n      mstore\n        /* \"#utility.yul\":8109:8113   */\n      0x22\n        /* \"#utility.yul\":8106:8107   */\n      0x04\n        /* \"#utility.yul\":8099:8114   */\n      mstore\n        /* \"#utility.yul\":8137:8141   */\n      0x24\n        /* \"#utility.yul\":8134:8135   */\n      0x00\n        /* \"#utility.yul\":8127:8142   */\n      revert\n        /* \"#utility.yul\":7991:8152   */\n    tag_510:\n      pop\n        /* \"#utility.yul\":7778:8158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8949:9076   */\n    tag_435:\n        /* \"#utility.yul\":9010:9020   */\n      0x4e487b71\n        /* \"#utility.yul\":9005:9008   */\n      0xe0\n        /* \"#utility.yul\":9001:9021   */\n      shl\n        /* \"#utility.yul\":8998:8999   */\n      0x00\n        /* \"#utility.yul\":8991:9022   */\n      mstore\n        /* \"#utility.yul\":9041:9045   */\n      0x11\n        /* \"#utility.yul\":9038:9039   */\n      0x04\n        /* \"#utility.yul\":9031:9046   */\n      mstore\n        /* \"#utility.yul\":9065:9069   */\n      0x24\n        /* \"#utility.yul\":9062:9063   */\n      0x00\n        /* \"#utility.yul\":9055:9070   */\n      revert\n        /* \"#utility.yul\":9081:9206   */\n    tag_186:\n        /* \"#utility.yul\":9146:9155   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9167:9177   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9164:9200   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":9180:9198   */\n      tag_140\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":9337:9855   */\n    tag_437:\n        /* \"#utility.yul\":9439:9441   */\n      0x1f\n        /* \"#utility.yul\":9434:9437   */\n      dup3\n        /* \"#utility.yul\":9431:9442   */\n      gt\n        /* \"#utility.yul\":9428:9849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":9475:9480   */\n      dup1\n        /* \"#utility.yul\":9472:9473   */\n      0x00\n        /* \"#utility.yul\":9465:9481   */\n      mstore\n        /* \"#utility.yul\":9519:9523   */\n      0x20\n        /* \"#utility.yul\":9516:9517   */\n      0x00\n        /* \"#utility.yul\":9506:9524   */\n      keccak256\n        /* \"#utility.yul\":9589:9591   */\n      0x1f\n        /* \"#utility.yul\":9577:9587   */\n      dup5\n        /* \"#utility.yul\":9573:9592   */\n      add\n        /* \"#utility.yul\":9570:9571   */\n      0x05\n        /* \"#utility.yul\":9566:9593   */\n      shr\n        /* \"#utility.yul\":9560:9564   */\n      dup2\n        /* \"#utility.yul\":9556:9594   */\n      add\n        /* \"#utility.yul\":9625:9629   */\n      0x20\n        /* \"#utility.yul\":9613:9623   */\n      dup6\n        /* \"#utility.yul\":9610:9630   */\n      lt\n        /* \"#utility.yul\":9607:9654   */\n      iszero\n      tag_520\n      jumpi\n      pop\n        /* \"#utility.yul\":9648:9652   */\n      dup1\n        /* \"#utility.yul\":9607:9654   */\n    tag_520:\n        /* \"#utility.yul\":9703:9705   */\n      0x1f\n        /* \"#utility.yul\":9698:9701   */\n      dup5\n        /* \"#utility.yul\":9694:9706   */\n      add\n        /* \"#utility.yul\":9691:9692   */\n      0x05\n        /* \"#utility.yul\":9687:9707   */\n      shr\n        /* \"#utility.yul\":9681:9685   */\n      dup3\n        /* \"#utility.yul\":9677:9708   */\n      add\n        /* \"#utility.yul\":9667:9708   */\n      swap2\n      pop\n        /* \"#utility.yul\":9758:9839   */\n    tag_521:\n        /* \"#utility.yul\":9776:9778   */\n      dup2\n        /* \"#utility.yul\":9769:9774   */\n      dup2\n        /* \"#utility.yul\":9766:9779   */\n      lt\n        /* \"#utility.yul\":9758:9839   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":9835:9836   */\n      0x00\n        /* \"#utility.yul\":9821:9837   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9802:9803   */\n      0x01\n        /* \"#utility.yul\":9791:9804   */\n      add\n        /* \"#utility.yul\":9758:9839   */\n      jump(tag_521)\n        /* \"#utility.yul\":10031:11330   */\n    tag_189:\n        /* \"#utility.yul\":10157:10160   */\n      dup2\n        /* \"#utility.yul\":10151:10161   */\n      mload\n        /* \"#utility.yul\":10184:10202   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10176:10182   */\n      dup2\n        /* \"#utility.yul\":10173:10203   */\n      gt\n        /* \"#utility.yul\":10170:10226   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":10206:10224   */\n      tag_527\n      tag_249\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10235:10332   */\n      tag_528\n        /* \"#utility.yul\":10325:10331   */\n      dup2\n        /* \"#utility.yul\":10285:10323   */\n      tag_529\n        /* \"#utility.yul\":10317:10321   */\n      dup5\n        /* \"#utility.yul\":10311:10322   */\n      sload\n        /* \"#utility.yul\":10285:10323   */\n      tag_144\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10279:10283   */\n      dup5\n        /* \"#utility.yul\":10235:10332   */\n      tag_437\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10381:10385   */\n      0x20\n        /* \"#utility.yul\":10412:10414   */\n      0x1f\n        /* \"#utility.yul\":10401:10415   */\n      dup3\n      gt\n        /* \"#utility.yul\":10429:10430   */\n      0x01\n        /* \"#utility.yul\":10424:11073   */\n      dup2\n      eq\n      tag_531\n      jumpi\n        /* \"#utility.yul\":11117:11118   */\n      0x00\n        /* \"#utility.yul\":11134:11140   */\n      dup4\n        /* \"#utility.yul\":11131:11220   */\n      iszero\n      tag_532\n      jumpi\n      pop\n        /* \"#utility.yul\":11186:11205   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":11180:11206   */\n      mload\n        /* \"#utility.yul\":11131:11220   */\n    tag_532:\n      not(0x00)\n        /* \"#utility.yul\":9988:9989   */\n      0x03\n        /* \"#utility.yul\":9984:9995   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":9980:10004   */\n      shr\n        /* \"#utility.yul\":9976:10005   */\n      not\n        /* \"#utility.yul\":9966:10006   */\n      and\n        /* \"#utility.yul\":10012:10013   */\n      0x01\n        /* \"#utility.yul\":10008:10019   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":9963:10020   */\n      or\n        /* \"#utility.yul\":11233:11314   */\n      dup5\n      sstore\n        /* \"#utility.yul\":10394:11324   */\n      jump(tag_330)\n        /* \"#utility.yul\":10424:11073   */\n    tag_531:\n        /* \"#utility.yul\":9284:9285   */\n      0x00\n        /* \"#utility.yul\":9277:9291   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":9321:9325   */\n      0x20\n        /* \"#utility.yul\":9308:9326   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10460:10480   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":10578:10800   */\n    tag_535:\n        /* \"#utility.yul\":10592:10599   */\n      dup3\n        /* \"#utility.yul\":10589:10590   */\n      dup2\n        /* \"#utility.yul\":10586:10600   */\n      lt\n        /* \"#utility.yul\":10578:10800   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":10674:10693   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":10668:10694   */\n      mload\n        /* \"#utility.yul\":10653:10695   */\n      dup3\n      sstore\n        /* \"#utility.yul\":10781:10785   */\n      0x20\n        /* \"#utility.yul\":10766:10786   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":10734:10735   */\n      0x01\n        /* \"#utility.yul\":10722:10736   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":10608:10620   */\n      add\n        /* \"#utility.yul\":10578:10800   */\n      jump(tag_535)\n    tag_537:\n        /* \"#utility.yul\":10582:10585   */\n      pop\n        /* \"#utility.yul\":10828:10834   */\n      dup5\n        /* \"#utility.yul\":10819:10826   */\n      dup3\n        /* \"#utility.yul\":10816:10835   */\n      lt\n        /* \"#utility.yul\":10813:11014   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":10889:10908   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":10883:10909   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":10972:10973   */\n      0x03\n        /* \"#utility.yul\":10968:10982   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":10984:10987   */\n      0xf8\n        /* \"#utility.yul\":10964:10988   */\n      and\n        /* \"#utility.yul\":10960:10997   */\n      shr\n        /* \"#utility.yul\":10956:10998   */\n      not\n        /* \"#utility.yul\":10941:10999   */\n      and\n        /* \"#utility.yul\":10926:11000   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10813:11014   */\n    tag_538:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11060:11061   */\n      0x01\n        /* \"#utility.yul\":11044:11058   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":11040:11062   */\n      add\n        /* \"#utility.yul\":11027:11063   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":10031:11330   */\n      jump\t// out\n        /* \"#utility.yul\":11335:11470   */\n    tag_195:\n        /* \"#utility.yul\":11374:11377   */\n      0x00\n        /* \"#utility.yul\":11395:11412   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11392:11435   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":11415:11433   */\n      tag_541\n      tag_435\n      jump\t// in\n    tag_541:\n      pop\n        /* \"#utility.yul\":11462:11463   */\n      0x01\n        /* \"#utility.yul\":11451:11464   */\n      add\n      swap1\n        /* \"#utility.yul\":11335:11470   */\n      jump\t// out\n        /* \"#utility.yul\":11475:11602   */\n    tag_204:\n        /* \"#utility.yul\":11536:11546   */\n      0x4e487b71\n        /* \"#utility.yul\":11531:11534   */\n      0xe0\n        /* \"#utility.yul\":11527:11547   */\n      shl\n        /* \"#utility.yul\":11524:11525   */\n      0x00\n        /* \"#utility.yul\":11517:11548   */\n      mstore\n        /* \"#utility.yul\":11567:11571   */\n      0x32\n        /* \"#utility.yul\":11564:11565   */\n      0x04\n        /* \"#utility.yul\":11557:11572   */\n      mstore\n        /* \"#utility.yul\":11591:11595   */\n      0x24\n        /* \"#utility.yul\":11588:11589   */\n      0x00\n        /* \"#utility.yul\":11581:11596   */\n      revert\n        /* \"#utility.yul\":11607:11743   */\n    tag_208:\n        /* \"#utility.yul\":11646:11649   */\n      0x00\n        /* \"#utility.yul\":11674:11679   */\n      dup2\n        /* \"#utility.yul\":11664:11703   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":11683:11701   */\n      tag_545\n      tag_435\n      jump\t// in\n    tag_545:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":11719:11737   */\n      add\n      swap1\n        /* \"#utility.yul\":11607:11743   */\n      jump\t// out\n        /* \"#utility.yul\":11748:12233   */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11979:12011   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11961:12012   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12048:12080   */\n      dup5\n      and\n        /* \"#utility.yul\":12043:12045   */\n      0x20\n        /* \"#utility.yul\":12028:12046   */\n      dup3\n      add\n        /* \"#utility.yul\":12021:12081   */\n      mstore\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12097:12115   */\n      dup2\n      add\n        /* \"#utility.yul\":12090:12124   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12160:12163   */\n      0x80\n        /* \"#utility.yul\":12155:12157   */\n      0x60\n        /* \"#utility.yul\":12140:12158   */\n      dup3\n      add\n        /* \"#utility.yul\":12133:12164   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":12181:12227   */\n      tag_547\n      swap1\n        /* \"#utility.yul\":12207:12226   */\n      dup4\n      add\n        /* \"#utility.yul\":12199:12205   */\n      dup5\n        /* \"#utility.yul\":12181:12227   */\n      tag_433\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12173:12227   */\n      swap7\n        /* \"#utility.yul\":11748:12233   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12238:12487   */\n    tag_319:\n        /* \"#utility.yul\":12307:12313   */\n      0x00\n        /* \"#utility.yul\":12360:12362   */\n      0x20\n        /* \"#utility.yul\":12348:12357   */\n      dup3\n        /* \"#utility.yul\":12339:12346   */\n      dup5\n        /* \"#utility.yul\":12335:12358   */\n      sub\n        /* \"#utility.yul\":12331:12363   */\n      slt\n        /* \"#utility.yul\":12328:12380   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":12376:12377   */\n      0x00\n        /* \"#utility.yul\":12373:12374   */\n      dup1\n        /* \"#utility.yul\":12366:12378   */\n      revert\n        /* \"#utility.yul\":12328:12380   */\n    tag_549:\n        /* \"#utility.yul\":12408:12417   */\n      dup2\n        /* \"#utility.yul\":12402:12418   */\n      mload\n        /* \"#utility.yul\":12427:12457   */\n      tag_381\n        /* \"#utility.yul\":12451:12456   */\n      dup2\n        /* \"#utility.yul\":12427:12457   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":12492:12988   */\n    tag_344:\n        /* \"#utility.yul\":12671:12674   */\n      0x00\n        /* \"#utility.yul\":12709:12715   */\n      dup4\n        /* \"#utility.yul\":12703:12716   */\n      mload\n        /* \"#utility.yul\":12725:12791   */\n      tag_552\n        /* \"#utility.yul\":12784:12790   */\n      dup2\n        /* \"#utility.yul\":12779:12782   */\n      dup5\n        /* \"#utility.yul\":12772:12776   */\n      0x20\n        /* \"#utility.yul\":12764:12770   */\n      dup9\n        /* \"#utility.yul\":12760:12777   */\n      add\n        /* \"#utility.yul\":12725:12791   */\n      tag_432\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12854:12867   */\n      dup4\n      mload\n        /* \"#utility.yul\":12813:12829   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":12876:12946   */\n      tag_553\n        /* \"#utility.yul\":12854:12867   */\n      dup2\n        /* \"#utility.yul\":12813:12829   */\n      dup4\n        /* \"#utility.yul\":12923:12927   */\n      0x20\n        /* \"#utility.yul\":12911:12928   */\n      dup9\n      add\n        /* \"#utility.yul\":12876:12946   */\n      tag_432\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12962:12982   */\n      add\n      swap5\n        /* \"#utility.yul\":12492:12988   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204652f29962e722fdf5a173a6f90335a94db26def1f729e2dde59b79e4b4c32a064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3230": {
									"entryPoint": null,
									"id": 3230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 200,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3155:18",
										"nodeType": "YulBlock",
										"src": "0:3155:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:18",
													"nodeType": "YulBlock",
													"src": "95:209:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:18",
																"nodeType": "YulBlock",
																"src": "141:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:18",
																					"nodeType": "YulLiteral",
																					"src": "150:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "153:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:18"
																			},
																			"nativeSrc": "143:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:18"
																		},
																		"nativeSrc": "143:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:18"
																		},
																		"nativeSrc": "112:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:18",
																		"nodeType": "YulLiteral",
																		"src": "137:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:18"
																},
																"nativeSrc": "108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "108:32:18"
															},
															"nativeSrc": "105:52:18",
															"nodeType": "YulIf",
															"src": "105:52:18"
														},
														{
															"nativeSrc": "166:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:18"
																},
																"nativeSrc": "179:16:18",
																"nodeType": "YulFunctionCall",
																"src": "179:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:18",
																	"nodeType": "YulTypedName",
																	"src": "170:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:18",
																"nodeType": "YulBlock",
																"src": "258:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:18",
																					"nodeType": "YulLiteral",
																					"src": "267:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:18",
																					"nodeType": "YulLiteral",
																					"src": "270:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:18"
																			},
																			"nativeSrc": "260:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:18"
																		},
																		"nativeSrc": "260:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:18",
																										"nodeType": "YulLiteral",
																										"src": "243:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:18",
																										"nodeType": "YulLiteral",
																										"src": "248:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:18"
																								},
																								"nativeSrc": "239:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:18",
																								"nodeType": "YulLiteral",
																								"src": "252:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:18"
																						},
																						"nativeSrc": "235:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:18"
																				},
																				"nativeSrc": "224:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:18"
																		},
																		"nativeSrc": "214:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:18"
																},
																"nativeSrc": "207:50:18",
																"nodeType": "YulFunctionCall",
																"src": "207:50:18"
															},
															"nativeSrc": "204:70:18",
															"nodeType": "YulIf",
															"src": "204:70:18"
														},
														{
															"nativeSrc": "283:15:18",
															"nodeType": "YulAssignment",
															"src": "283:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:18",
																"nodeType": "YulIdentifier",
																"src": "293:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:18",
														"nodeType": "YulTypedName",
														"src": "61:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:18",
														"nodeType": "YulTypedName",
														"src": "72:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:18",
														"nodeType": "YulTypedName",
														"src": "84:6:18",
														"type": ""
													}
												],
												"src": "14:290:18"
											},
											{
												"body": {
													"nativeSrc": "341:95:18",
													"nodeType": "YulBlock",
													"src": "341:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:18",
																		"nodeType": "YulLiteral",
																		"src": "358:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:18",
																				"nodeType": "YulLiteral",
																				"src": "365:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:18",
																				"nodeType": "YulLiteral",
																				"src": "370:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:18"
																		},
																		"nativeSrc": "361:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:18"
																},
																"nativeSrc": "351:31:18",
																"nodeType": "YulFunctionCall",
																"src": "351:31:18"
															},
															"nativeSrc": "351:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:18",
																		"nodeType": "YulLiteral",
																		"src": "398:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:18",
																		"nodeType": "YulLiteral",
																		"src": "401:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:18"
																},
																"nativeSrc": "391:15:18",
																"nodeType": "YulFunctionCall",
																"src": "391:15:18"
															},
															"nativeSrc": "391:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:18",
																		"nodeType": "YulLiteral",
																		"src": "422:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:18",
																		"nodeType": "YulLiteral",
																		"src": "425:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:18"
																},
																"nativeSrc": "415:15:18",
																"nodeType": "YulFunctionCall",
																"src": "415:15:18"
															},
															"nativeSrc": "415:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:18"
											},
											{
												"body": {
													"nativeSrc": "496:325:18",
													"nodeType": "YulBlock",
													"src": "496:325:18",
													"statements": [
														{
															"nativeSrc": "506:22:18",
															"nodeType": "YulAssignment",
															"src": "506:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:18",
																		"nodeType": "YulLiteral",
																		"src": "520:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:18"
																},
																"nativeSrc": "516:12:18",
																"nodeType": "YulFunctionCall",
																"src": "516:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:18"
																}
															]
														},
														{
															"nativeSrc": "537:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:18",
																		"nodeType": "YulLiteral",
																		"src": "573:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:18"
																},
																"nativeSrc": "563:12:18",
																"nodeType": "YulFunctionCall",
																"src": "563:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:18",
																	"nodeType": "YulTypedName",
																	"src": "541:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:18",
																"nodeType": "YulBlock",
																"src": "614:31:18",
																"statements": [
																	{
																		"nativeSrc": "616:27:18",
																		"nodeType": "YulAssignment",
																		"src": "616:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:18",
																					"nodeType": "YulLiteral",
																					"src": "638:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:18"
																			},
																			"nativeSrc": "626:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:18"
																},
																"nativeSrc": "587:26:18",
																"nodeType": "YulFunctionCall",
																"src": "587:26:18"
															},
															"nativeSrc": "584:61:18",
															"nodeType": "YulIf",
															"src": "584:61:18"
														},
														{
															"body": {
																"nativeSrc": "704:111:18",
																"nodeType": "YulBlock",
																"src": "704:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:18",
																					"nodeType": "YulLiteral",
																					"src": "725:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:18",
																							"nodeType": "YulLiteral",
																							"src": "732:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:18",
																							"nodeType": "YulLiteral",
																							"src": "737:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:18"
																					},
																					"nativeSrc": "728:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:18"
																			},
																			"nativeSrc": "718:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:18"
																		},
																		"nativeSrc": "718:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:18",
																					"nodeType": "YulLiteral",
																					"src": "769:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:18",
																					"nodeType": "YulLiteral",
																					"src": "772:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:18"
																			},
																			"nativeSrc": "762:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:18"
																		},
																		"nativeSrc": "762:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:18",
																					"nodeType": "YulLiteral",
																					"src": "797:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:18",
																					"nodeType": "YulLiteral",
																					"src": "800:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:18"
																			},
																			"nativeSrc": "790:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:18"
																		},
																		"nativeSrc": "790:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:18",
																				"nodeType": "YulLiteral",
																				"src": "691:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:18"
																		},
																		"nativeSrc": "680:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:18"
																},
																"nativeSrc": "657:38:18",
																"nodeType": "YulFunctionCall",
																"src": "657:38:18"
															},
															"nativeSrc": "654:161:18",
															"nodeType": "YulIf",
															"src": "654:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:18",
														"nodeType": "YulTypedName",
														"src": "476:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:18",
														"nodeType": "YulTypedName",
														"src": "485:6:18",
														"type": ""
													}
												],
												"src": "441:380:18"
											},
											{
												"body": {
													"nativeSrc": "882:65:18",
													"nodeType": "YulBlock",
													"src": "882:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:18",
																		"nodeType": "YulLiteral",
																		"src": "899:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:18"
																},
																"nativeSrc": "892:14:18",
																"nodeType": "YulFunctionCall",
																"src": "892:14:18"
															},
															"nativeSrc": "892:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:18"
														},
														{
															"nativeSrc": "915:26:18",
															"nodeType": "YulAssignment",
															"src": "915:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:18",
																		"nodeType": "YulLiteral",
																		"src": "933:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:18",
																		"nodeType": "YulLiteral",
																		"src": "936:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:18"
																},
																"nativeSrc": "923:18:18",
																"nodeType": "YulFunctionCall",
																"src": "923:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:18",
														"nodeType": "YulTypedName",
														"src": "865:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:18",
														"nodeType": "YulTypedName",
														"src": "873:4:18",
														"type": ""
													}
												],
												"src": "826:121:18"
											},
											{
												"body": {
													"nativeSrc": "1033:437:18",
													"nodeType": "YulBlock",
													"src": "1033:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:18",
																"nodeType": "YulBlock",
																"src": "1066:398:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:18"
																			},
																			"nativeSrc": "1080:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:18"
																		},
																		"nativeSrc": "1080:16:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:18"
																	},
																	{
																		"nativeSrc": "1109:30:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:18",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:18",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:18"
																			},
																			"nativeSrc": "1121:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:18",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:18",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:18",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:18",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:18"
																							},
																							"nativeSrc": "1188:19:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:18"
																					},
																					"nativeSrc": "1181:27:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:18"
																			},
																			"nativeSrc": "1171:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:18",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:18",
																			"nodeType": "YulBlock",
																			"src": "1246:23:18",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:18",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:18",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:18",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:18"
																			},
																			"nativeSrc": "1225:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:18"
																		},
																		"nativeSrc": "1222:47:18",
																		"nodeType": "YulIf",
																		"src": "1222:47:18"
																	},
																	{
																		"nativeSrc": "1282:41:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:18",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:18",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:18"
																							},
																							"nativeSrc": "1309:12:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:18"
																					},
																					"nativeSrc": "1302:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:18"
																			},
																			"nativeSrc": "1292:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:18",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:18",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:18",
																			"nodeType": "YulBlock",
																			"src": "1434:20:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:18",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:18",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:18"
																						},
																						"nativeSrc": "1436:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:18"
																					},
																					"nativeSrc": "1436:16:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:18"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:18"
																			},
																			"nativeSrc": "1381:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:18"
																		},
																		"nativeSrc": "1373:81:18",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:18",
																			"nodeType": "YulBlock",
																			"src": "1395:26:18",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:18",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:18",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:18"
																						},
																						"nativeSrc": "1406:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:18",
																			"nodeType": "YulBlock",
																			"src": "1377:3:18",
																			"statements": []
																		},
																		"src": "1373:81:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:18"
																},
																"nativeSrc": "1046:11:18",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:18"
															},
															"nativeSrc": "1043:421:18",
															"nodeType": "YulIf",
															"src": "1043:421:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:18",
														"nodeType": "YulTypedName",
														"src": "1005:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:18",
														"nodeType": "YulTypedName",
														"src": "1012:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:18",
														"nodeType": "YulTypedName",
														"src": "1017:10:18",
														"type": ""
													}
												],
												"src": "952:518:18"
											},
											{
												"body": {
													"nativeSrc": "1560:81:18",
													"nodeType": "YulBlock",
													"src": "1560:81:18",
													"statements": [
														{
															"nativeSrc": "1570:65:18",
															"nodeType": "YulAssignment",
															"src": "1570:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:18",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:18"
																								},
																								"nativeSrc": "1599:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:18",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:18"
																								},
																								"nativeSrc": "1612:6:18",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:18"
																						},
																						"nativeSrc": "1595:24:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:18"
																				},
																				"nativeSrc": "1591:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:18"
																		},
																		"nativeSrc": "1581:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:18"
																		},
																		"nativeSrc": "1623:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:18"
																},
																"nativeSrc": "1578:57:18",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:18",
														"nodeType": "YulTypedName",
														"src": "1537:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:18",
														"nodeType": "YulTypedName",
														"src": "1543:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:18",
														"nodeType": "YulTypedName",
														"src": "1551:4:18",
														"type": ""
													}
												],
												"src": "1475:166:18"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:18",
													"nodeType": "YulBlock",
													"src": "1742:1203:18",
													"statements": [
														{
															"nativeSrc": "1752:24:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:18"
																},
																"nativeSrc": "1766:10:18",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:18",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:18",
																"nodeType": "YulBlock",
																"src": "1819:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:18"
																			},
																			"nativeSrc": "1821:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:18"
																		},
																		"nativeSrc": "1821:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:18",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:18",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:18",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:18"
																				},
																				"nativeSrc": "1803:10:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:18"
																		},
																		"nativeSrc": "1799:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:18"
																},
																"nativeSrc": "1788:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:18"
															},
															"nativeSrc": "1785:56:18",
															"nodeType": "YulIf",
															"src": "1785:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:18"
																				},
																				"nativeSrc": "1926:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:18"
																		},
																		"nativeSrc": "1900:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:18"
																},
																"nativeSrc": "1850:97:18",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:18"
															},
															"nativeSrc": "1850:97:18",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:18"
														},
														{
															"nativeSrc": "1956:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:18",
																"nodeType": "YulLiteral",
																"src": "1973:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:18",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:18",
															"nodeType": "YulAssignment",
															"src": "1983:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:18",
																"nodeType": "YulLiteral",
																"src": "1996:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:18",
																		"nodeType": "YulBlock",
																		"src": "2046:642:18",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:18",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:18"
																							},
																							"nativeSrc": "2087:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:18"
																					},
																					"nativeSrc": "2075:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:18",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:18",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:18"
																					},
																					"nativeSrc": "2122:35:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:18",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:18",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:18",
																					"nodeType": "YulBlock",
																					"src": "2250:165:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:18"
																												},
																												"nativeSrc": "2289:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:18"
																										},
																										"nativeSrc": "2283:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:18"
																								},
																								"nativeSrc": "2268:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:18"
																							},
																							"nativeSrc": "2268:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:18"
																						},
																						{
																							"nativeSrc": "2327:24:18",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:18",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:18"
																								},
																								"nativeSrc": "2337:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:18",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:18",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:18"
																								},
																								"nativeSrc": "2381:20:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:18"
																					},
																					"nativeSrc": "2201:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:18"
																				},
																				"nativeSrc": "2193:222:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:18",
																					"nodeType": "YulBlock",
																					"src": "2216:21:18",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:18",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:18",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:18"
																								},
																								"nativeSrc": "2223:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:18",
																					"nodeType": "YulBlock",
																					"src": "2197:3:18",
																					"statements": []
																				},
																				"src": "2193:222:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:18",
																					"nodeType": "YulBlock",
																					"src": "2463:166:18",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:18"
																										},
																										"nativeSrc": "2504:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:18"
																								},
																								"nativeSrc": "2498:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:18",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:18",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:18",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:18",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:18"
																																		},
																																		"nativeSrc": "2583:14:18",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:18",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:18"
																																},
																																"nativeSrc": "2579:24:18",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:18",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:18"
																																},
																																"nativeSrc": "2605:6:18",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:18",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:18"
																														},
																														"nativeSrc": "2575:37:18",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:18"
																												},
																												"nativeSrc": "2571:42:18",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:18"
																										},
																										"nativeSrc": "2556:58:18",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:18"
																								},
																								"nativeSrc": "2541:74:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:18"
																							},
																							"nativeSrc": "2541:74:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:18"
																					},
																					"nativeSrc": "2431:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:18"
																				},
																				"nativeSrc": "2428:201:18",
																				"nodeType": "YulIf",
																				"src": "2428:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:18",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:18"
																									},
																									"nativeSrc": "2659:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:18",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:18"
																							},
																							"nativeSrc": "2655:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:18"
																					},
																					"nativeSrc": "2642:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:18"
																				},
																				"nativeSrc": "2642:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:18"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:18",
																	"nodeType": "YulCase",
																	"src": "2039:649:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:18",
																		"nodeType": "YulBlock",
																		"src": "2705:234:18",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:18",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:18",
																					"nodeType": "YulBlock",
																					"src": "2768:67:18",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:18",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:18"
																										},
																										"nativeSrc": "2801:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:18"
																								},
																								"nativeSrc": "2795:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:18"
																				},
																				"nativeSrc": "2746:89:18",
																				"nodeType": "YulIf",
																				"src": "2746:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:18"
																							},
																							"nativeSrc": "2861:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:18"
																					},
																					"nativeSrc": "2848:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:18"
																				},
																				"nativeSrc": "2848:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:18"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:18",
																	"nodeType": "YulCase",
																	"src": "2697:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:18"
																},
																"nativeSrc": "2016:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:18"
															},
															"nativeSrc": "2009:930:18",
															"nodeType": "YulSwitch",
															"src": "2009:930:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:18",
														"nodeType": "YulTypedName",
														"src": "1727:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:18",
														"nodeType": "YulTypedName",
														"src": "1733:3:18",
														"type": ""
													}
												],
												"src": "1646:1299:18"
											},
											{
												"body": {
													"nativeSrc": "3051:102:18",
													"nodeType": "YulBlock",
													"src": "3051:102:18",
													"statements": [
														{
															"nativeSrc": "3061:26:18",
															"nodeType": "YulAssignment",
															"src": "3061:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:18"
																},
																"nativeSrc": "3069:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:18",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:18",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:18"
																						},
																						"nativeSrc": "3130:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:18"
																				},
																				"nativeSrc": "3126:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:18"
																		},
																		"nativeSrc": "3114:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:18"
																},
																"nativeSrc": "3096:51:18",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:18"
															},
															"nativeSrc": "3096:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:18",
														"nodeType": "YulTypedName",
														"src": "3020:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:18",
														"nodeType": "YulTypedName",
														"src": "3031:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:18",
														"nodeType": "YulTypedName",
														"src": "3042:4:18",
														"type": ""
													}
												],
												"src": "2950:203:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611f6f380380611f6f83398101604081905261002f9161011a565b80604051806040016040528060058152602001644c616e647360d81b8152506040518060400160405280600481526020016313185b9960e21b815250816000908161007a91906101e9565b50600161008782826101e9565b5050506001600160a01b0381166100b857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100c1816100c8565b50506102a7565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561012c57600080fd5b81516001600160a01b038116811461014357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061017457607f821691505b60208210810361019457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101e457806000526020600020601f840160051c810160208510156101c15750805b601f840160051c820191505b818110156101e157600081556001016101cd565b50505b505050565b81516001600160401b038111156102025761020261014a565b610216816102108454610160565b8461019a565b6020601f82116001811461024a57600083156102325750848201515b600019600385901b1c1916600184901b1784556101e1565b600084815260208120601f198516915b8281101561027a578785015182556020948501946001909201910161025a565b50848210156102985786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611cb9806102b66000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ad91345116100de578063b88d4fde11610097578063e985e9c511610071578063e985e9c51461038a578063f15376861461039d578063f2fde38b146103bd578063fbbffcb0146103d057600080fd5b8063b88d4fde14610341578063c87b56dd14610354578063d936547e1461036757600080fd5b80638ad91345146102dc5780638da5cb5b146102ef57806395d89b41146103005780639a590427146103085780639b19251a1461031b578063a22cb4651461032e57600080fd5b806323b872dd1161014b578063695850fb11610125578063695850fb1461029b5780636e0cee09146102ae57806370a08231146102c1578063715018a6146102d457600080fd5b806323b872dd1461026257806342842e0e146102755780636352211e1461028857600080fd5b806301ffc9a71461019357806305d85eda146101bb57806306fdde03146101e9578063081812fc146101fe578063095ea7b3146102295780632295370a1461023e575b600080fd5b6101a66101a1366004611640565b6103fb565b60405190151581526020015b60405180910390f35b6101db6101c9366004611679565b600a6020526000908152604090205481565b6040519081526020016101b2565b6101f161040c565b6040516101b291906116e4565b61021161020c3660046116f7565b61049e565b6040516001600160a01b0390911681526020016101b2565b61023c610237366004611710565b6104c7565b005b61025161024c3660046116f7565b6104d6565b6040516101b295949392919061173a565b61023c610270366004611772565b610591565b61023c610283366004611772565b610621565b6102116102963660046116f7565b610641565b61023c6102a936600461183f565b61064c565b61023c6102bc366004611888565b6107f1565b6101db6102cf366004611679565b610925565b61023c61096d565b6101f16102ea3660046116f7565b610981565b6007546001600160a01b0316610211565b6101f161098c565b61023c610316366004611679565b61099b565b61023c610329366004611679565b6109c4565b61023c61033c3660046118c4565b6109f0565b61023c61034f366004611900565b6109fb565b6101f16103623660046116f7565b610a12565b6101a6610375366004611679565b600c6020526000908152604090205460ff1681565b6101a661039836600461197c565b610a1d565b6103b06103ab366004611679565b610a4b565b6040516101b291906119af565b61023c6103cb366004611679565b610c4d565b6101db6103de366004611710565b600960209081526000928352604080842090915290825290205481565b600061040682610c8b565b92915050565b60606000805461041b90611a4b565b80601f016020809104026020016040519081016040528092919081815260200182805461044790611a4b565b80156104945780601f1061046957610100808354040283529160200191610494565b820191906000526020600020905b81548152906001019060200180831161047757829003601f168201915b5050505050905090565b60006104a982610cb0565b506000828152600460205260409020546001600160a01b0316610406565b6104d2828233610ce9565b5050565b600b60205260009081526040902080546001820154600283018054929391926104fe90611a4b565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90611a4b565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b50505050600383015460049093015491929160ff16905085565b6001600160a01b0382166105c057604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105cd838333610cf6565b9050836001600160a01b0316816001600160a01b03161461061b576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105b7565b50505050565b61063c838383604051806020016040528060008152506109fb565b505050565b600061040682610cb0565b336000908152600c602052604090205460ff166106bd5760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420617574686f72697a656420666f72206d696e74696044820152686e67206c616e64212160b81b60648201526084016105b7565b6106cb600880546001019055565b60006106d660085490565b336000908152600960209081526040808320600a9092528220549293508392909190610703906001611a9b565b81526020808201929092526040908101600090812093909355805160a081018252848152338452600a835292205490820190610740906001611a9b565b815260200183815260200142815260200160011515815250600b6000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816107949190611af5565b50606082015160038201556080909101516004909101805460ff19169115159190911790556107c33382610def565b6107cd8183610e09565b336000908152600a602052604081208054916107e883611bb4565b91905055505050565b6001600160a01b0383166000908152600960209081526040808320600a909252822054849290610822906001611a9b565b815260200190815260200160002081905550600061083f82610a4b565b905060005b81518110156108f5578382828151811061086057610860611bcd565b602002602001015160000151036108ed576001600160a01b0383166000818152600960208181526040808420600a835281852054855280835290842054948452919052906108af846001611a9b565b815260208082019290925260409081016000908120939093556001600160a01b0386168352600a90915281208054916108e783611be3565b91905055505b600101610844565b506001600160a01b0384166000908152600a6020526040812080549161091a83611bb4565b919050555050505050565b60006001600160a01b038216610951576040516322718ad960e21b8152600060048201526024016105b7565b506001600160a01b031660009081526003602052604090205490565b610975610e59565b61097f6000610e86565b565b606061040682610a12565b60606001805461041b90611a4b565b6109a3610e59565b6001600160a01b03166000908152600c60205260409020805460ff19169055565b6109cc610e59565b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6104d2338383610ed8565b610a06848484610591565b61061b84848484610f77565b6060610406826110a0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b0381166000908152600a60205260408120546060919067ffffffffffffffff811115610a8057610a806117af565b604051908082528060200260200182016040528015610ae557816020015b610ad26040518060a00160405280600081526020016000815260200160608152602001600081526020016000151581525090565b815260200190600190039081610a9e5790505b50905060005b6001600160a01b0384166000908152600a6020526040902054811015610c46576001600160a01b038416600090815260096020526040812081610b2f846001611a9b565b8152602001908152602001600020549050600b60008281526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610b8290611a4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bae90611a4b565b8015610bfb5780601f10610bd057610100808354040283529160200191610bfb565b820191906000526020600020905b815481529060010190602001808311610bde57829003601f168201915b50505091835250506003820154602082015260049091015460ff1615156040909101528351849084908110610c3257610c32611bcd565b602090810291909101015250600101610aeb565b5092915050565b610c55610e59565b6001600160a01b038116610c7f57604051631e4fbdf760e01b8152600060048201526024016105b7565b610c8881610e86565b50565b60006001600160e01b03198216632483248360e11b14806104065750610406826111b1565b6000818152600260205260408120546001600160a01b03168061040657604051637e27328960e01b8152600481018490526024016105b7565b61063c8383836001611201565b6000828152600260205260408120546001600160a01b0390811690831615610d2357610d23818486611307565b6001600160a01b03811615610d6157610d40600085600080611201565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610d90576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6104d282826040518060200160405280600081525061136b565b6000828152600660205260409020610e218282611af5565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6007546001600160a01b0316331461097f5760405163118cdaa760e01b81523360048201526024016105b7565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610f0a57604051630b61174360e31b81526001600160a01b03831660048201526024016105b7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561061b57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610fb9903390889087908790600401611bfa565b6020604051808303816000875af1925050508015610ff4575060408051601f3d908101601f19168201909252610ff191810190611c37565b60015b61105d573d808015611022576040519150601f19603f3d011682016040523d82523d6000602084013e611027565b606091505b50805160000361105557604051633250574960e11b81526001600160a01b03851660048201526024016105b7565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461109957604051633250574960e11b81526001600160a01b03851660048201526024016105b7565b5050505050565b60606110ab82610cb0565b50600082815260066020526040812080546110c590611a4b565b80601f01602080910402602001604051908101604052809291908181526020018280546110f190611a4b565b801561113e5780601f106111135761010080835404028352916020019161113e565b820191906000526020600020905b81548152906001019060200180831161112157829003601f168201915b50505050509050600061115c60408051602081019091526000815290565b9050805160000361116e575092915050565b8151156111a0578082604051602001611188929190611c54565b60405160208183030381529060405292505050919050565b6111a984611382565b949350505050565b60006001600160e01b031982166380ac58cd60e01b14806111e257506001600160e01b03198216635b5e139f60e01b145b8061040657506301ffc9a760e01b6001600160e01b0319831614610406565b808061121557506001600160a01b03821615155b156112d757600061122584610cb0565b90506001600160a01b038316158015906112515750826001600160a01b0316816001600160a01b031614155b801561126457506112628184610a1d565b155b1561128d5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016105b7565b81156112d55783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6113128383836113f7565b61063c576001600160a01b03831661134057604051637e27328960e01b8152600481018290526024016105b7565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105b7565b611375838361145a565b61063c6000848484610f77565b606061138d82610cb0565b5060006113a560408051602081019091526000815290565b905060008151116113c557604051806020016040528060008152506113f0565b806113cf846114bf565b6040516020016113e0929190611c54565b6040516020818303038152906040525b9392505050565b60006001600160a01b038316158015906111a95750826001600160a01b0316846001600160a01b0316148061143157506114318484610a1d565b806111a95750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b03821661148457604051633250574960e11b8152600060048201526024016105b7565b600061149283836000610cf6565b90506001600160a01b0381161561063c576040516339e3563760e11b8152600060048201526024016105b7565b606060006114cc83611552565b600101905060008167ffffffffffffffff8111156114ec576114ec6117af565b6040519080825280601f01601f191660200182016040528015611516576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461152057509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115915772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106115bd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115db57662386f26fc10000830492506010015b6305f5e10083106115f3576305f5e100830492506008015b612710831061160757612710830492506004015b60648310611619576064830492506002015b600a83106104065760010192915050565b6001600160e01b031981168114610c8857600080fd5b60006020828403121561165257600080fd5b81356113f08161162a565b80356001600160a01b038116811461167457600080fd5b919050565b60006020828403121561168b57600080fd5b6113f08261165d565b60005b838110156116af578181015183820152602001611697565b50506000910152565b600081518084526116d0816020860160208601611694565b601f01601f19169290920160200192915050565b6020815260006113f060208301846116b8565b60006020828403121561170957600080fd5b5035919050565b6000806040838503121561172357600080fd5b61172c8361165d565b946020939093013593505050565b85815284602082015260a06040820152600061175960a08301866116b8565b6060830194909452509015156080909101529392505050565b60008060006060848603121561178757600080fd5b6117908461165d565b925061179e6020850161165d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff8411156117e0576117e06117af565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561180f5761180f6117af565b60405283815290508082840185101561182757600080fd5b83836020830137600060208583010152509392505050565b60006020828403121561185157600080fd5b813567ffffffffffffffff81111561186857600080fd5b8201601f8101841361187957600080fd5b6111a9848235602084016117c5565b60008060006060848603121561189d57600080fd5b6118a68461165d565b9250602084013591506118bb6040850161165d565b90509250925092565b600080604083850312156118d757600080fd5b6118e08361165d565b9150602083013580151581146118f557600080fd5b809150509250929050565b6000806000806080858703121561191657600080fd5b61191f8561165d565b935061192d6020860161165d565b925060408501359150606085013567ffffffffffffffff81111561195057600080fd5b8501601f8101871361196157600080fd5b611970878235602084016117c5565b91505092959194509250565b6000806040838503121561198f57600080fd5b6119988361165d565b91506119a66020840161165d565b90509250929050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015611a3f57603f1987860301845281518051865260208101516020870152604081015160a06040880152611a1160a08801826116b8565b60608381015190890152608092830151151592909701919091525060209384019391909101906001016119d7565b50929695505050505050565b600181811c90821680611a5f57607f821691505b602082108103611a7f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561040657610406611a85565b601f82111561063c57806000526020600020601f840160051c81016020851015611ad55750805b601f840160051c820191505b818110156110995760008155600101611ae1565b815167ffffffffffffffff811115611b0f57611b0f6117af565b611b2381611b1d8454611a4b565b84611aae565b6020601f821160018114611b575760008315611b3f5750848201515b600019600385901b1c1916600184901b178455611099565b600084815260208120601f198516915b82811015611b875787850151825560209485019460019092019101611b67565b5084821015611ba55786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060018201611bc657611bc6611a85565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600081611bf257611bf2611a85565b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c2d908301846116b8565b9695505050505050565b600060208284031215611c4957600080fd5b81516113f08161162a565b60008351611c66818460208801611694565b835190830190611c7a818360208801611694565b0194935050505056fea26469706673582212204652f29962e722fdf5a173a6f90335a94db26def1f729e2dde59b79e4b4c32a064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F6F CODESIZE SUB DUP1 PUSH2 0x1F6F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x11A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4C616E6473 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x13185B99 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x87 DUP3 DUP3 PUSH2 0x1E9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0xC8 JUMP JUMPDEST POP POP PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x174 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x194 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E4 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x202 JUMPI PUSH2 0x202 PUSH2 0x14A JUMP JUMPDEST PUSH2 0x216 DUP2 PUSH2 0x210 DUP5 SLOAD PUSH2 0x160 JUMP JUMPDEST DUP5 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x232 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x25A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x298 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1CB9 DUP1 PUSH2 0x2B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AD91345 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xFBBFFCB0 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AD91345 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x9A590427 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x695850FB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x695850FB EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6E0CEE09 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x5D85EDA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x2295370A EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x23C PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x96D JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x211 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x23C PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x23C PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x18C4 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x23C PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x447 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x494 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x469 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x494 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x477 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x406 JUMP JUMPDEST PUSH2 0x4D2 DUP3 DUP3 CALLER PUSH2 0xCE9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x4FE SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP4 DUP4 CALLER PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x63C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0xCB0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420666F72206D696E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6E67206C616E642121 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x703 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE CALLER DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP1 DUP3 ADD SWAP1 PUSH2 0x740 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x7C3 CALLER DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x7CD DUP2 DUP4 PUSH2 0xE09 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x7E8 DUP4 PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x822 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8F5 JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x860 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SUB PUSH2 0x8ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP6 MSTORE DUP1 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 PUSH2 0x8AF DUP5 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x8E7 DUP4 PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x844 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x91A DUP4 PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x975 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x97F PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9CC PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4D2 CALLER DUP4 DUP4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xA06 DUP5 DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x61B DUP5 DUP5 DUP5 DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA80 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAD2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA9E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0xB2F DUP5 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xB82 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xAEB JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC55 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xC88 DUP2 PUSH2 0xE86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x406 JUMPI POP PUSH2 0x406 DUP3 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x63C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 DUP2 DUP5 DUP7 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD40 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4D2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x136B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE21 DUP3 DUP3 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFB9 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFF4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFF1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x105D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10AB DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x10C5 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F1 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1113 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x113E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1121 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x115C PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x116E JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x11A0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1188 SWAP3 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A9 DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x11E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x406 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x406 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1215 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 PUSH2 0x1225 DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1251 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1264 JUMPI POP PUSH2 0x1262 DUP2 DUP5 PUSH2 0xA1D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D5 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1312 DUP4 DUP4 DUP4 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x63C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x1375 DUP4 DUP4 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x63C PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x138D DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13A5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13F0 JUMP JUMPDEST DUP1 PUSH2 0x13CF DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11A9 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1431 JUMPI POP PUSH2 0x1431 DUP5 DUP5 PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH2 0x11A9 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1492 DUP4 DUP4 PUSH1 0x0 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14CC DUP4 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EC PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1516 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1520 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1591 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15BD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15DB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x15F3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1607 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1619 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x406 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13F0 DUP2 PUSH2 0x162A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F0 DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1697 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x16D0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172C DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1759 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1790 DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH2 0x179E PUSH1 0x20 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17E0 PUSH2 0x17AF JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A9 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A6 DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x18BB PUSH1 0x40 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E0 DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191F DUP6 PUSH2 0x165D JUMP JUMPDEST SWAP4 POP PUSH2 0x192D PUSH1 0x20 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1970 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1998 DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP2 POP PUSH2 0x19A6 PUSH1 0x20 DUP5 ADD PUSH2 0x165D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP7 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1A11 PUSH1 0xA0 DUP9 ADD DUP3 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x60 DUP4 DUP2 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP8 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19D7 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A5F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x63C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AD5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AE1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0F PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1B1D DUP5 SLOAD PUSH2 0x1A4B JUMP JUMPDEST DUP5 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B3F JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B87 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1B67 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1BA5 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1BC6 JUMPI PUSH2 0x1BC6 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BF2 JUMPI PUSH2 0x1BF2 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C2D SWAP1 DUP4 ADD DUP5 PUSH2 0x16B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13F0 DUP2 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C66 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1694 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1C7A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1694 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID MSTORE CALLCODE SWAP10 PUSH3 0xE722FD CREATE2 LOG1 PUSH20 0xA6F90335A94DB26DEF1F729E2DDE59B79E4B4C32 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "585:5046:17:-:0;;;1657:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1723:12;1382:113:5;;;;;;;;;;;;;-1:-1:-1;;;1382:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1382:113:5;;;1456:5;1448;:13;;;;;;:::i;:::-;-1:-1:-1;1471:7:5;:17;1481:7;1471;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:18;3069:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1657:87:17;585:5046;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:18;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:18;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:18;;;2795:26;2746:89;-1:-1:-1;;1603:1:18;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:18;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:18;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:18;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:18:o;2950:203::-;585:5046:17;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NftId_3204": {
									"entryPoint": null,
									"id": 3204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NftMinting_3213": {
									"entryPoint": 1238,
									"id": 3213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1128": {
									"entryPoint": 3305,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 4609,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": null,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 4871,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 3959,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3673,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 5111,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 5210,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": null,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3248,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 3567,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 4971,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 3800,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1585": {
									"entryPoint": 3593,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3718,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3318,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1223,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 2341,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@count_3208": {
									"entryPoint": null,
									"id": 3208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1662": {
									"entryPoint": null,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1182,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenId_3390": {
									"entryPoint": 2635,
									"id": 3390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenUri_3481": {
									"entryPoint": 2433,
									"id": 3481,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1676": {
									"entryPoint": null,
									"id": 1676,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_587": {
									"entryPoint": 2589,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2883": {
									"entryPoint": 5458,
									"id": 2883,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 1036,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1601,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2413,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3332": {
									"entryPoint": 1612,
									"id": 3332,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1569,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2555,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2544,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 3211,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1996": {
									"entryPoint": null,
									"id": 1996,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3513": {
									"entryPoint": 1019,
									"id": 3513,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 4529,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2444,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1786": {
									"entryPoint": 5311,
									"id": 1786,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1566": {
									"entryPoint": 4256,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3497": {
									"entryPoint": 2578,
									"id": 3497,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 4994,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1425,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3149,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unwhitelist_3258": {
									"entryPoint": 2459,
									"id": 3258,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTokenId_3469": {
									"entryPoint": 2033,
									"id": 3469,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@whitelist_3244": {
									"entryPoint": 2500,
									"id": 3244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelisted_3217": {
									"entryPoint": null,
									"id": 3217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0857ca2ab96eb0bca607d99a40522e0bce8a8d7e5db4afb0608a9031d239c2f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13401:18",
										"nodeType": "YulBlock",
										"src": "0:13401:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:18",
													"nodeType": "YulBlock",
													"src": "58:87:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:18",
																"nodeType": "YulBlock",
																"src": "123:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:18",
																					"nodeType": "YulLiteral",
																					"src": "132:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:18",
																					"nodeType": "YulLiteral",
																					"src": "135:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:18"
																			},
																			"nativeSrc": "125:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:18"
																		},
																		"nativeSrc": "125:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:18",
																								"nodeType": "YulLiteral",
																								"src": "103:3:18",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:18",
																								"nodeType": "YulLiteral",
																								"src": "108:10:18",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:18"
																						},
																						"nativeSrc": "99:20:18",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:18"
																				},
																				"nativeSrc": "88:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:18"
																		},
																		"nativeSrc": "78:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:18"
																},
																"nativeSrc": "71:51:18",
																"nodeType": "YulFunctionCall",
																"src": "71:51:18"
															},
															"nativeSrc": "68:71:18",
															"nodeType": "YulIf",
															"src": "68:71:18"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:18",
														"nodeType": "YulTypedName",
														"src": "47:5:18",
														"type": ""
													}
												],
												"src": "14:131:18"
											},
											{
												"body": {
													"nativeSrc": "219:176:18",
													"nodeType": "YulBlock",
													"src": "219:176:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:18",
																"nodeType": "YulBlock",
																"src": "265:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:18",
																					"nodeType": "YulLiteral",
																					"src": "274:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:18",
																					"nodeType": "YulLiteral",
																					"src": "277:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:18"
																			},
																			"nativeSrc": "267:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:18"
																		},
																		"nativeSrc": "267:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:18"
																		},
																		"nativeSrc": "236:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:18",
																		"nodeType": "YulLiteral",
																		"src": "261:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:18"
																},
																"nativeSrc": "232:32:18",
																"nodeType": "YulFunctionCall",
																"src": "232:32:18"
															},
															"nativeSrc": "229:52:18",
															"nodeType": "YulIf",
															"src": "229:52:18"
														},
														{
															"nativeSrc": "290:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:18"
																},
																"nativeSrc": "303:23:18",
																"nodeType": "YulFunctionCall",
																"src": "303:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:18",
																	"nodeType": "YulTypedName",
																	"src": "294:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:18"
																},
																"nativeSrc": "335:30:18",
																"nodeType": "YulFunctionCall",
																"src": "335:30:18"
															},
															"nativeSrc": "335:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:18"
														},
														{
															"nativeSrc": "374:15:18",
															"nodeType": "YulAssignment",
															"src": "374:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:18",
																"nodeType": "YulIdentifier",
																"src": "384:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:18",
														"nodeType": "YulTypedName",
														"src": "185:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:18",
														"nodeType": "YulTypedName",
														"src": "196:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:18",
														"nodeType": "YulTypedName",
														"src": "208:6:18",
														"type": ""
													}
												],
												"src": "150:245:18"
											},
											{
												"body": {
													"nativeSrc": "495:92:18",
													"nodeType": "YulBlock",
													"src": "495:92:18",
													"statements": [
														{
															"nativeSrc": "505:26:18",
															"nodeType": "YulAssignment",
															"src": "505:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:18",
																		"nodeType": "YulLiteral",
																		"src": "528:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:18"
																},
																"nativeSrc": "513:18:18",
																"nodeType": "YulFunctionCall",
																"src": "513:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:18"
																				},
																				"nativeSrc": "565:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:18"
																		},
																		"nativeSrc": "558:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:18"
																},
																"nativeSrc": "540:41:18",
																"nodeType": "YulFunctionCall",
																"src": "540:41:18"
															},
															"nativeSrc": "540:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:18",
														"nodeType": "YulTypedName",
														"src": "464:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:18",
														"nodeType": "YulTypedName",
														"src": "475:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:18",
														"nodeType": "YulTypedName",
														"src": "486:4:18",
														"type": ""
													}
												],
												"src": "400:187:18"
											},
											{
												"body": {
													"nativeSrc": "641:124:18",
													"nodeType": "YulBlock",
													"src": "641:124:18",
													"statements": [
														{
															"nativeSrc": "651:29:18",
															"nodeType": "YulAssignment",
															"src": "651:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "673:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "660:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "660:12:18"
																},
																"nativeSrc": "660:20:18",
																"nodeType": "YulFunctionCall",
																"src": "660:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "651:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "651:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "743:16:18",
																"nodeType": "YulBlock",
																"src": "743:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "752:1:18",
																					"nodeType": "YulLiteral",
																					"src": "752:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:18",
																					"nodeType": "YulLiteral",
																					"src": "755:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "745:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:18"
																			},
																			"nativeSrc": "745:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "745:12:18"
																		},
																		"nativeSrc": "745:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "745:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "702:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "702:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "713:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "713:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "728:3:18",
																										"nodeType": "YulLiteral",
																										"src": "728:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "733:1:18",
																										"nodeType": "YulLiteral",
																										"src": "733:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "724:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "724:3:18"
																								},
																								"nativeSrc": "724:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "724:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "737:1:18",
																								"nodeType": "YulLiteral",
																								"src": "737:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "720:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "720:3:18"
																						},
																						"nativeSrc": "720:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "720:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "709:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:18"
																				},
																				"nativeSrc": "709:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "709:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "699:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:18"
																		},
																		"nativeSrc": "699:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "699:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "692:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:18"
																},
																"nativeSrc": "692:50:18",
																"nodeType": "YulFunctionCall",
																"src": "692:50:18"
															},
															"nativeSrc": "689:70:18",
															"nodeType": "YulIf",
															"src": "689:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "592:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "620:6:18",
														"nodeType": "YulTypedName",
														"src": "620:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "631:5:18",
														"nodeType": "YulTypedName",
														"src": "631:5:18",
														"type": ""
													}
												],
												"src": "592:173:18"
											},
											{
												"body": {
													"nativeSrc": "840:116:18",
													"nodeType": "YulBlock",
													"src": "840:116:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "886:16:18",
																"nodeType": "YulBlock",
																"src": "886:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "895:1:18",
																					"nodeType": "YulLiteral",
																					"src": "895:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "898:1:18",
																					"nodeType": "YulLiteral",
																					"src": "898:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "888:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:18"
																			},
																			"nativeSrc": "888:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "888:12:18"
																		},
																		"nativeSrc": "888:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "888:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "861:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "857:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:18"
																		},
																		"nativeSrc": "857:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "857:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "882:2:18",
																		"nodeType": "YulLiteral",
																		"src": "882:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "853:3:18"
																},
																"nativeSrc": "853:32:18",
																"nodeType": "YulFunctionCall",
																"src": "853:32:18"
															},
															"nativeSrc": "850:52:18",
															"nodeType": "YulIf",
															"src": "850:52:18"
														},
														{
															"nativeSrc": "911:39:18",
															"nodeType": "YulAssignment",
															"src": "911:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "940:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "940:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "921:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "921:18:18"
																},
																"nativeSrc": "921:29:18",
																"nodeType": "YulFunctionCall",
																"src": "921:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "911:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "911:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "770:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "806:9:18",
														"nodeType": "YulTypedName",
														"src": "806:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "817:7:18",
														"nodeType": "YulTypedName",
														"src": "817:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "829:6:18",
														"nodeType": "YulTypedName",
														"src": "829:6:18",
														"type": ""
													}
												],
												"src": "770:186:18"
											},
											{
												"body": {
													"nativeSrc": "1062:76:18",
													"nodeType": "YulBlock",
													"src": "1062:76:18",
													"statements": [
														{
															"nativeSrc": "1072:26:18",
															"nodeType": "YulAssignment",
															"src": "1072:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1084:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1084:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1095:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1095:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1080:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1080:3:18"
																},
																"nativeSrc": "1080:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1080:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1072:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1072:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1114:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1125:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1125:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1107:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:18"
																},
																"nativeSrc": "1107:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1107:25:18"
															},
															"nativeSrc": "1107:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1107:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "961:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1031:9:18",
														"nodeType": "YulTypedName",
														"src": "1031:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1042:6:18",
														"nodeType": "YulTypedName",
														"src": "1042:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1053:4:18",
														"nodeType": "YulTypedName",
														"src": "1053:4:18",
														"type": ""
													}
												],
												"src": "961:177:18"
											},
											{
												"body": {
													"nativeSrc": "1209:184:18",
													"nodeType": "YulBlock",
													"src": "1209:184:18",
													"statements": [
														{
															"nativeSrc": "1219:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1228:1:18",
																"nodeType": "YulLiteral",
																"src": "1228:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1223:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1223:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1288:63:18",
																"nodeType": "YulBlock",
																"src": "1288:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1313:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1318:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1318:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1309:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:18"
																					},
																					"nativeSrc": "1309:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1309:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1332:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1332:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1337:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1337:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1328:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1328:3:18"
																							},
																							"nativeSrc": "1328:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1328:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1322:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1322:5:18"
																					},
																					"nativeSrc": "1322:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1322:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1302:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:18"
																			},
																			"nativeSrc": "1302:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1302:39:18"
																		},
																		"nativeSrc": "1302:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1249:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1249:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1252:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1252:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1246:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1246:2:18"
																},
																"nativeSrc": "1246:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1246:13:18"
															},
															"nativeSrc": "1238:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1260:19:18",
																"nodeType": "YulBlock",
																"src": "1260:19:18",
																"statements": [
																	{
																		"nativeSrc": "1262:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1262:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1271:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1271:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1274:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1274:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1267:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1267:3:18"
																			},
																			"nativeSrc": "1267:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1267:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1262:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1262:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1242:3:18",
																"nodeType": "YulBlock",
																"src": "1242:3:18",
																"statements": []
															},
															"src": "1238:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1371:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1371:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1376:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1367:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:18"
																		},
																		"nativeSrc": "1367:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1385:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1385:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:18"
																},
																"nativeSrc": "1360:27:18",
																"nodeType": "YulFunctionCall",
																"src": "1360:27:18"
															},
															"nativeSrc": "1360:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "1360:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1143:250:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1187:3:18",
														"nodeType": "YulTypedName",
														"src": "1187:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1192:3:18",
														"nodeType": "YulTypedName",
														"src": "1192:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1197:6:18",
														"nodeType": "YulTypedName",
														"src": "1197:6:18",
														"type": ""
													}
												],
												"src": "1143:250:18"
											},
											{
												"body": {
													"nativeSrc": "1448:221:18",
													"nodeType": "YulBlock",
													"src": "1448:221:18",
													"statements": [
														{
															"nativeSrc": "1458:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1458:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1478:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1472:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1472:5:18"
																},
																"nativeSrc": "1472:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1472:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1462:6:18",
																	"nodeType": "YulTypedName",
																	"src": "1462:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1500:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1500:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1505:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1505:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1493:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:18"
																},
																"nativeSrc": "1493:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1493:19:18"
															},
															"nativeSrc": "1493:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1493:19:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1560:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1560:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1567:4:18",
																				"nodeType": "YulLiteral",
																				"src": "1567:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1556:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:18"
																		},
																		"nativeSrc": "1556:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:16:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1578:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1578:3:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1583:4:18",
																				"nodeType": "YulLiteral",
																				"src": "1583:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1574:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1574:3:18"
																		},
																		"nativeSrc": "1574:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1574:14:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1590:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1590:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1521:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "1521:34:18"
																},
																"nativeSrc": "1521:76:18",
																"nodeType": "YulFunctionCall",
																"src": "1521:76:18"
															},
															"nativeSrc": "1521:76:18",
															"nodeType": "YulExpressionStatement",
															"src": "1521:76:18"
														},
														{
															"nativeSrc": "1606:57:18",
															"nodeType": "YulAssignment",
															"src": "1606:57:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1621:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1634:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "1634:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1642:2:18",
																								"nodeType": "YulLiteral",
																								"src": "1642:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1630:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1630:3:18"
																						},
																						"nativeSrc": "1630:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1630:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1651:2:18",
																								"nodeType": "YulLiteral",
																								"src": "1651:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1647:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1647:3:18"
																						},
																						"nativeSrc": "1647:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1647:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1626:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:18"
																				},
																				"nativeSrc": "1626:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1626:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1617:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1617:3:18"
																		},
																		"nativeSrc": "1617:39:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1617:39:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1658:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1658:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1613:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:18"
																},
																"nativeSrc": "1613:50:18",
																"nodeType": "YulFunctionCall",
																"src": "1613:50:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1606:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1398:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1425:5:18",
														"nodeType": "YulTypedName",
														"src": "1425:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1432:3:18",
														"nodeType": "YulTypedName",
														"src": "1432:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1440:3:18",
														"nodeType": "YulTypedName",
														"src": "1440:3:18",
														"type": ""
													}
												],
												"src": "1398:271:18"
											},
											{
												"body": {
													"nativeSrc": "1795:99:18",
													"nodeType": "YulBlock",
													"src": "1795:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1812:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1823:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:18"
																},
																"nativeSrc": "1805:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1805:21:18"
															},
															"nativeSrc": "1805:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "1805:21:18"
														},
														{
															"nativeSrc": "1835:53:18",
															"nodeType": "YulAssignment",
															"src": "1835:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1861:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1873:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1873:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1884:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1884:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1869:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:18"
																		},
																		"nativeSrc": "1869:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1843:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1843:17:18"
																},
																"nativeSrc": "1843:45:18",
																"nodeType": "YulFunctionCall",
																"src": "1843:45:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1674:220:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1764:9:18",
														"nodeType": "YulTypedName",
														"src": "1764:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1775:6:18",
														"nodeType": "YulTypedName",
														"src": "1775:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1786:4:18",
														"nodeType": "YulTypedName",
														"src": "1786:4:18",
														"type": ""
													}
												],
												"src": "1674:220:18"
											},
											{
												"body": {
													"nativeSrc": "1969:156:18",
													"nodeType": "YulBlock",
													"src": "1969:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2015:16:18",
																"nodeType": "YulBlock",
																"src": "2015:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2027:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2027:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2017:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2017:6:18"
																			},
																			"nativeSrc": "2017:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2017:12:18"
																		},
																		"nativeSrc": "2017:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2017:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1990:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1990:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1999:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1986:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:18"
																		},
																		"nativeSrc": "1986:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1986:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1982:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:18"
																},
																"nativeSrc": "1982:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1982:32:18"
															},
															"nativeSrc": "1979:52:18",
															"nodeType": "YulIf",
															"src": "1979:52:18"
														},
														{
															"nativeSrc": "2040:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2040:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2053:1:18",
																"nodeType": "YulLiteral",
																"src": "2053:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2044:5:18",
																	"nodeType": "YulTypedName",
																	"src": "2044:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2063:32:18",
															"nodeType": "YulAssignment",
															"src": "2063:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2085:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2085:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2072:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2072:12:18"
																},
																"nativeSrc": "2072:23:18",
																"nodeType": "YulFunctionCall",
																"src": "2072:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2063:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2063:5:18"
																}
															]
														},
														{
															"nativeSrc": "2104:15:18",
															"nodeType": "YulAssignment",
															"src": "2104:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2114:5:18",
																"nodeType": "YulIdentifier",
																"src": "2114:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1899:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1935:9:18",
														"nodeType": "YulTypedName",
														"src": "1935:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1946:7:18",
														"nodeType": "YulTypedName",
														"src": "1946:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1958:6:18",
														"nodeType": "YulTypedName",
														"src": "1958:6:18",
														"type": ""
													}
												],
												"src": "1899:226:18"
											},
											{
												"body": {
													"nativeSrc": "2231:102:18",
													"nodeType": "YulBlock",
													"src": "2231:102:18",
													"statements": [
														{
															"nativeSrc": "2241:26:18",
															"nodeType": "YulAssignment",
															"src": "2241:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2253:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2264:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2264:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2249:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:18"
																},
																"nativeSrc": "2249:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2249:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2241:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2241:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2283:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2283:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2298:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2314:3:18",
																								"nodeType": "YulLiteral",
																								"src": "2314:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2319:1:18",
																								"nodeType": "YulLiteral",
																								"src": "2319:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2310:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2310:3:18"
																						},
																						"nativeSrc": "2310:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "2310:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:18",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2306:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:18"
																				},
																				"nativeSrc": "2306:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2294:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:18"
																		},
																		"nativeSrc": "2294:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2294:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2276:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:18"
																},
																"nativeSrc": "2276:51:18",
																"nodeType": "YulFunctionCall",
																"src": "2276:51:18"
															},
															"nativeSrc": "2276:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "2276:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2130:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2200:9:18",
														"nodeType": "YulTypedName",
														"src": "2200:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2211:6:18",
														"nodeType": "YulTypedName",
														"src": "2211:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2222:4:18",
														"nodeType": "YulTypedName",
														"src": "2222:4:18",
														"type": ""
													}
												],
												"src": "2130:203:18"
											},
											{
												"body": {
													"nativeSrc": "2425:213:18",
													"nodeType": "YulBlock",
													"src": "2425:213:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2471:16:18",
																"nodeType": "YulBlock",
																"src": "2471:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2480:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2483:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2473:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2473:6:18"
																			},
																			"nativeSrc": "2473:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2473:12:18"
																		},
																		"nativeSrc": "2473:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2473:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2446:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2446:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2455:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2455:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2442:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2442:3:18"
																		},
																		"nativeSrc": "2442:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2442:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2467:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2467:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2438:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:18"
																},
																"nativeSrc": "2438:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2438:32:18"
															},
															"nativeSrc": "2435:52:18",
															"nodeType": "YulIf",
															"src": "2435:52:18"
														},
														{
															"nativeSrc": "2496:39:18",
															"nodeType": "YulAssignment",
															"src": "2496:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2525:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2506:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:18"
																},
																"nativeSrc": "2506:29:18",
																"nodeType": "YulFunctionCall",
																"src": "2506:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2496:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:18"
																}
															]
														},
														{
															"nativeSrc": "2544:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2544:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2557:1:18",
																"nodeType": "YulLiteral",
																"src": "2557:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2548:5:18",
																	"nodeType": "YulTypedName",
																	"src": "2548:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2567:41:18",
															"nodeType": "YulAssignment",
															"src": "2567:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2593:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2604:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2604:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2589:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2589:3:18"
																		},
																		"nativeSrc": "2589:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2589:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2576:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2576:12:18"
																},
																"nativeSrc": "2576:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2576:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2567:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2567:5:18"
																}
															]
														},
														{
															"nativeSrc": "2617:15:18",
															"nodeType": "YulAssignment",
															"src": "2617:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:18",
																"nodeType": "YulIdentifier",
																"src": "2627:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2617:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2338:300:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2383:9:18",
														"nodeType": "YulTypedName",
														"src": "2383:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2394:7:18",
														"nodeType": "YulTypedName",
														"src": "2394:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2406:6:18",
														"nodeType": "YulTypedName",
														"src": "2406:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2414:6:18",
														"nodeType": "YulTypedName",
														"src": "2414:6:18",
														"type": ""
													}
												],
												"src": "2338:300:18"
											},
											{
												"body": {
													"nativeSrc": "2870:290:18",
													"nodeType": "YulBlock",
													"src": "2870:290:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2887:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2887:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2898:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2898:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2880:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:18"
																},
																"nativeSrc": "2880:25:18",
																"nodeType": "YulFunctionCall",
																"src": "2880:25:18"
															},
															"nativeSrc": "2880:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "2880:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2925:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2925:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2936:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2921:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:18"
																		},
																		"nativeSrc": "2921:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2941:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2914:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2914:6:18"
																},
																"nativeSrc": "2914:34:18",
																"nodeType": "YulFunctionCall",
																"src": "2914:34:18"
															},
															"nativeSrc": "2914:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "2914:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2968:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2968:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2979:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2979:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2964:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2964:3:18"
																		},
																		"nativeSrc": "2964:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2964:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:3:18",
																		"nodeType": "YulLiteral",
																		"src": "2984:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2957:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:18"
																},
																"nativeSrc": "2957:31:18",
																"nodeType": "YulFunctionCall",
																"src": "2957:31:18"
															},
															"nativeSrc": "2957:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "2957:31:18"
														},
														{
															"nativeSrc": "2997:54:18",
															"nodeType": "YulAssignment",
															"src": "2997:54:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3023:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3035:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3046:3:18",
																				"nodeType": "YulLiteral",
																				"src": "3046:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3031:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:18"
																		},
																		"nativeSrc": "3031:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3031:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3005:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3005:17:18"
																},
																"nativeSrc": "3005:46:18",
																"nodeType": "YulFunctionCall",
																"src": "3005:46:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2997:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2997:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3071:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3082:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3067:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:18"
																		},
																		"nativeSrc": "3067:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3087:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3060:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3060:6:18"
																},
																"nativeSrc": "3060:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3060:34:18"
															},
															"nativeSrc": "3060:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "3060:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3114:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3114:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3125:3:18",
																				"nodeType": "YulLiteral",
																				"src": "3125:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3110:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3110:3:18"
																		},
																		"nativeSrc": "3110:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3110:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "3145:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3145:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3138:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "3138:6:18"
																				},
																				"nativeSrc": "3138:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3138:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3131:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3131:6:18"
																		},
																		"nativeSrc": "3131:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3103:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3103:6:18"
																},
																"nativeSrc": "3103:51:18",
																"nodeType": "YulFunctionCall",
																"src": "3103:51:18"
															},
															"nativeSrc": "3103:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "3103:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2643:517:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2807:9:18",
														"nodeType": "YulTypedName",
														"src": "2807:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2818:6:18",
														"nodeType": "YulTypedName",
														"src": "2818:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2826:6:18",
														"nodeType": "YulTypedName",
														"src": "2826:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2834:6:18",
														"nodeType": "YulTypedName",
														"src": "2834:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2842:6:18",
														"nodeType": "YulTypedName",
														"src": "2842:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2850:6:18",
														"nodeType": "YulTypedName",
														"src": "2850:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2861:4:18",
														"nodeType": "YulTypedName",
														"src": "2861:4:18",
														"type": ""
													}
												],
												"src": "2643:517:18"
											},
											{
												"body": {
													"nativeSrc": "3269:270:18",
													"nodeType": "YulBlock",
													"src": "3269:270:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3315:16:18",
																"nodeType": "YulBlock",
																"src": "3315:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3324:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3327:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3327:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3317:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:18"
																			},
																			"nativeSrc": "3317:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3317:12:18"
																		},
																		"nativeSrc": "3317:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3317:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3290:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3290:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3299:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:18"
																		},
																		"nativeSrc": "3286:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3311:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3311:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3282:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3282:3:18"
																},
																"nativeSrc": "3282:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3282:32:18"
															},
															"nativeSrc": "3279:52:18",
															"nodeType": "YulIf",
															"src": "3279:52:18"
														},
														{
															"nativeSrc": "3340:39:18",
															"nodeType": "YulAssignment",
															"src": "3340:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3369:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3369:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3350:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3350:18:18"
																},
																"nativeSrc": "3350:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3350:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3340:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:18"
																}
															]
														},
														{
															"nativeSrc": "3388:48:18",
															"nodeType": "YulAssignment",
															"src": "3388:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:18"
																		},
																		"nativeSrc": "3417:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3398:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3398:18:18"
																},
																"nativeSrc": "3398:38:18",
																"nodeType": "YulFunctionCall",
																"src": "3398:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3388:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:18"
																}
															]
														},
														{
															"nativeSrc": "3445:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3445:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3458:1:18",
																"nodeType": "YulLiteral",
																"src": "3458:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3449:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3449:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3468:41:18",
															"nodeType": "YulAssignment",
															"src": "3468:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3494:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3494:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3505:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3505:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3490:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3490:3:18"
																		},
																		"nativeSrc": "3490:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3490:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3477:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3477:12:18"
																},
																"nativeSrc": "3477:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3477:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3468:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3468:5:18"
																}
															]
														},
														{
															"nativeSrc": "3518:15:18",
															"nodeType": "YulAssignment",
															"src": "3518:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "3528:5:18",
																"nodeType": "YulIdentifier",
																"src": "3528:5:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3518:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3165:374:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3219:9:18",
														"nodeType": "YulTypedName",
														"src": "3219:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3230:7:18",
														"nodeType": "YulTypedName",
														"src": "3230:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3242:6:18",
														"nodeType": "YulTypedName",
														"src": "3242:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3250:6:18",
														"nodeType": "YulTypedName",
														"src": "3250:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3258:6:18",
														"nodeType": "YulTypedName",
														"src": "3258:6:18",
														"type": ""
													}
												],
												"src": "3165:374:18"
											},
											{
												"body": {
													"nativeSrc": "3576:95:18",
													"nodeType": "YulBlock",
													"src": "3576:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3593:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3593:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3600:3:18",
																				"nodeType": "YulLiteral",
																				"src": "3600:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3605:10:18",
																				"nodeType": "YulLiteral",
																				"src": "3605:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3596:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:18"
																		},
																		"nativeSrc": "3596:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3586:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:18"
																},
																"nativeSrc": "3586:31:18",
																"nodeType": "YulFunctionCall",
																"src": "3586:31:18"
															},
															"nativeSrc": "3586:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "3586:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3633:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3633:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3636:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3626:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3626:6:18"
																},
																"nativeSrc": "3626:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3626:15:18"
															},
															"nativeSrc": "3626:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3626:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3657:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3657:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3660:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3660:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3650:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:18"
																},
																"nativeSrc": "3650:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3650:15:18"
															},
															"nativeSrc": "3650:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3650:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3544:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3544:127:18"
											},
											{
												"body": {
													"nativeSrc": "3751:641:18",
													"nodeType": "YulBlock",
													"src": "3751:641:18",
													"statements": [
														{
															"nativeSrc": "3761:13:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3761:13:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3773:1:18",
																"nodeType": "YulLiteral",
																"src": "3773:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "3765:4:18",
																	"nodeType": "YulTypedName",
																	"src": "3765:4:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3817:22:18",
																"nodeType": "YulBlock",
																"src": "3817:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3819:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "3819:16:18"
																			},
																			"nativeSrc": "3819:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3819:18:18"
																		},
																		"nativeSrc": "3819:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3819:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3789:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3789:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3797:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3797:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3786:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3786:2:18"
																},
																"nativeSrc": "3786:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3786:30:18"
															},
															"nativeSrc": "3783:56:18",
															"nodeType": "YulIf",
															"src": "3783:56:18"
														},
														{
															"nativeSrc": "3848:43:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3848:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3870:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3870:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3878:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3878:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3866:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:18"
																		},
																		"nativeSrc": "3866:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3887:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3887:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3883:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:18"
																		},
																		"nativeSrc": "3883:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3862:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3862:3:18"
																},
																"nativeSrc": "3862:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3862:29:18"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "3852:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3852:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3900:25:18",
															"nodeType": "YulAssignment",
															"src": "3900:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "3912:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3920:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3920:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3908:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:18"
																},
																"nativeSrc": "3908:17:18",
																"nodeType": "YulFunctionCall",
																"src": "3908:17:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3900:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3900:4:18"
																}
															]
														},
														{
															"nativeSrc": "3934:15:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3934:15:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3948:1:18",
																"nodeType": "YulLiteral",
																"src": "3948:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3938:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3938:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3958:19:18",
															"nodeType": "YulAssignment",
															"src": "3958:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3974:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3968:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3968:5:18"
																},
																"nativeSrc": "3968:9:18",
																"nodeType": "YulFunctionCall",
																"src": "3968:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3958:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3958:6:18"
																}
															]
														},
														{
															"nativeSrc": "3986:60:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3986:60:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4008:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4008:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "4024:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4024:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4032:2:18",
																						"nodeType": "YulLiteral",
																						"src": "4032:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:18"
																				},
																				"nativeSrc": "4020:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:15:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4041:2:18",
																						"nodeType": "YulLiteral",
																						"src": "4041:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4037:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4037:3:18"
																				},
																				"nativeSrc": "4037:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4037:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4016:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:18"
																		},
																		"nativeSrc": "4016:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4004:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4004:3:18"
																},
																"nativeSrc": "4004:42:18",
																"nodeType": "YulFunctionCall",
																"src": "4004:42:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3990:10:18",
																	"nodeType": "YulTypedName",
																	"src": "3990:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4121:22:18",
																"nodeType": "YulBlock",
																"src": "4121:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4123:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4123:16:18"
																			},
																			"nativeSrc": "4123:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4123:18:18"
																		},
																		"nativeSrc": "4123:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4123:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4064:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "4064:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4076:18:18",
																				"nodeType": "YulLiteral",
																				"src": "4076:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4061:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4061:2:18"
																		},
																		"nativeSrc": "4061:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4100:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "4100:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4112:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4097:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4097:2:18"
																		},
																		"nativeSrc": "4097:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4097:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4058:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4058:2:18"
																},
																"nativeSrc": "4058:62:18",
																"nodeType": "YulFunctionCall",
																"src": "4058:62:18"
															},
															"nativeSrc": "4055:88:18",
															"nodeType": "YulIf",
															"src": "4055:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4163:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "4163:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4152:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:18"
																},
																"nativeSrc": "4152:22:18",
																"nodeType": "YulFunctionCall",
																"src": "4152:22:18"
															},
															"nativeSrc": "4152:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "4152:22:18"
														},
														{
															"nativeSrc": "4183:15:18",
															"nodeType": "YulAssignment",
															"src": "4183:15:18",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4192:6:18",
																"nodeType": "YulIdentifier",
																"src": "4192:6:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4183:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4214:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4214:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4222:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4207:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:18"
																},
																"nativeSrc": "4207:22:18",
																"nodeType": "YulFunctionCall",
																"src": "4207:22:18"
															},
															"nativeSrc": "4207:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "4207:22:18"
														},
														{
															"body": {
																"nativeSrc": "4267:16:18",
																"nodeType": "YulBlock",
																"src": "4267:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4276:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4276:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4279:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4279:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4269:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4269:6:18"
																			},
																			"nativeSrc": "4269:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:12:18"
																		},
																		"nativeSrc": "4269:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4248:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4248:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4253:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4253:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4244:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:18"
																		},
																		"nativeSrc": "4244:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4244:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4262:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4262:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4241:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4241:2:18"
																},
																"nativeSrc": "4241:25:18",
																"nodeType": "YulFunctionCall",
																"src": "4241:25:18"
															},
															"nativeSrc": "4238:45:18",
															"nodeType": "YulIf",
															"src": "4238:45:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4309:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4309:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4317:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4317:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4305:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4305:3:18"
																		},
																		"nativeSrc": "4305:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4305:17:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4324:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4324:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4329:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4329:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4292:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4292:12:18"
																},
																"nativeSrc": "4292:44:18",
																"nodeType": "YulFunctionCall",
																"src": "4292:44:18"
															},
															"nativeSrc": "4292:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "4292:44:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4360:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4360:6:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4368:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4368:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4356:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4356:3:18"
																				},
																				"nativeSrc": "4356:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4356:19:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4377:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4377:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4352:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4352:3:18"
																		},
																		"nativeSrc": "4352:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4352:30:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4384:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4345:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4345:6:18"
																},
																"nativeSrc": "4345:41:18",
																"nodeType": "YulFunctionCall",
																"src": "4345:41:18"
															},
															"nativeSrc": "4345:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "4345:41:18"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "3676:716:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3720:3:18",
														"nodeType": "YulTypedName",
														"src": "3720:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3725:6:18",
														"nodeType": "YulTypedName",
														"src": "3725:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3733:3:18",
														"nodeType": "YulTypedName",
														"src": "3733:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3741:5:18",
														"nodeType": "YulTypedName",
														"src": "3741:5:18",
														"type": ""
													}
												],
												"src": "3676:716:18"
											},
											{
												"body": {
													"nativeSrc": "4477:371:18",
													"nodeType": "YulBlock",
													"src": "4477:371:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4523:16:18",
																"nodeType": "YulBlock",
																"src": "4523:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4532:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4532:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4535:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4535:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4525:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4525:6:18"
																			},
																			"nativeSrc": "4525:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4525:12:18"
																		},
																		"nativeSrc": "4525:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4525:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4498:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4498:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4507:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4507:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4494:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:18"
																		},
																		"nativeSrc": "4494:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4519:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4519:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4490:3:18"
																},
																"nativeSrc": "4490:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4490:32:18"
															},
															"nativeSrc": "4487:52:18",
															"nodeType": "YulIf",
															"src": "4487:52:18"
														},
														{
															"nativeSrc": "4548:37:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4548:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4575:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4575:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4562:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4562:12:18"
																},
																"nativeSrc": "4562:23:18",
																"nodeType": "YulFunctionCall",
																"src": "4562:23:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4552:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4552:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4628:16:18",
																"nodeType": "YulBlock",
																"src": "4628:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4637:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4637:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4640:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4640:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4630:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4630:6:18"
																			},
																			"nativeSrc": "4630:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4630:12:18"
																		},
																		"nativeSrc": "4630:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4630:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4600:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4600:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4608:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4597:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4597:2:18"
																},
																"nativeSrc": "4597:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4597:30:18"
															},
															"nativeSrc": "4594:50:18",
															"nodeType": "YulIf",
															"src": "4594:50:18"
														},
														{
															"nativeSrc": "4653:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4653:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4667:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4667:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4678:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4678:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4663:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4663:3:18"
																},
																"nativeSrc": "4663:22:18",
																"nodeType": "YulFunctionCall",
																"src": "4663:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4657:2:18",
																	"nodeType": "YulTypedName",
																	"src": "4657:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4733:16:18",
																"nodeType": "YulBlock",
																"src": "4733:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4742:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4745:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4745:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4735:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4735:6:18"
																			},
																			"nativeSrc": "4735:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4735:12:18"
																		},
																		"nativeSrc": "4735:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4735:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4712:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4712:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4716:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4716:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4708:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4708:3:18"
																				},
																				"nativeSrc": "4708:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4708:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4723:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4723:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4704:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:18"
																		},
																		"nativeSrc": "4704:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4697:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:18"
																},
																"nativeSrc": "4697:35:18",
																"nodeType": "YulFunctionCall",
																"src": "4697:35:18"
															},
															"nativeSrc": "4694:55:18",
															"nodeType": "YulIf",
															"src": "4694:55:18"
														},
														{
															"nativeSrc": "4758:84:18",
															"nodeType": "YulAssignment",
															"src": "4758:84:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4807:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "4807:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4811:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4811:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4803:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:18"
																		},
																		"nativeSrc": "4803:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:11:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4829:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "4829:2:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4816:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "4816:12:18"
																		},
																		"nativeSrc": "4816:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4816:16:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4834:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "4834:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4768:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "4768:34:18"
																},
																"nativeSrc": "4768:74:18",
																"nodeType": "YulFunctionCall",
																"src": "4768:74:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4758:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "4397:451:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4443:9:18",
														"nodeType": "YulTypedName",
														"src": "4443:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4454:7:18",
														"nodeType": "YulTypedName",
														"src": "4454:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4466:6:18",
														"nodeType": "YulTypedName",
														"src": "4466:6:18",
														"type": ""
													}
												],
												"src": "4397:451:18"
											},
											{
												"body": {
													"nativeSrc": "4957:270:18",
													"nodeType": "YulBlock",
													"src": "4957:270:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5003:16:18",
																"nodeType": "YulBlock",
																"src": "5003:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5012:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5012:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5015:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5015:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5005:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5005:6:18"
																			},
																			"nativeSrc": "5005:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5005:12:18"
																		},
																		"nativeSrc": "5005:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5005:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4978:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4978:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4987:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4987:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4974:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:18"
																		},
																		"nativeSrc": "4974:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4974:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4999:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4970:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:18"
																},
																"nativeSrc": "4970:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4970:32:18"
															},
															"nativeSrc": "4967:52:18",
															"nodeType": "YulIf",
															"src": "4967:52:18"
														},
														{
															"nativeSrc": "5028:39:18",
															"nodeType": "YulAssignment",
															"src": "5028:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5057:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5057:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5038:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5038:18:18"
																},
																"nativeSrc": "5038:29:18",
																"nodeType": "YulFunctionCall",
																"src": "5038:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5028:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:18"
																}
															]
														},
														{
															"nativeSrc": "5076:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5076:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "5089:1:18",
																"nodeType": "YulLiteral",
																"src": "5089:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5080:5:18",
																	"nodeType": "YulTypedName",
																	"src": "5080:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5099:41:18",
															"nodeType": "YulAssignment",
															"src": "5099:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5125:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5125:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5136:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5136:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5121:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5121:3:18"
																		},
																		"nativeSrc": "5121:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5121:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5108:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5108:12:18"
																},
																"nativeSrc": "5108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5108:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5099:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5099:5:18"
																}
															]
														},
														{
															"nativeSrc": "5149:15:18",
															"nodeType": "YulAssignment",
															"src": "5149:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "5159:5:18",
																"nodeType": "YulIdentifier",
																"src": "5159:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:18"
																}
															]
														},
														{
															"nativeSrc": "5173:48:18",
															"nodeType": "YulAssignment",
															"src": "5173:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5206:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5217:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5217:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5202:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:18"
																		},
																		"nativeSrc": "5202:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5202:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5183:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5183:18:18"
																},
																"nativeSrc": "5183:38:18",
																"nodeType": "YulFunctionCall",
																"src": "5183:38:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5173:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nativeSrc": "4853:374:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4907:9:18",
														"nodeType": "YulTypedName",
														"src": "4907:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4918:7:18",
														"nodeType": "YulTypedName",
														"src": "4918:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4930:6:18",
														"nodeType": "YulTypedName",
														"src": "4930:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4938:6:18",
														"nodeType": "YulTypedName",
														"src": "4938:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4946:6:18",
														"nodeType": "YulTypedName",
														"src": "4946:6:18",
														"type": ""
													}
												],
												"src": "4853:374:18"
											},
											{
												"body": {
													"nativeSrc": "5316:263:18",
													"nodeType": "YulBlock",
													"src": "5316:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5362:16:18",
																"nodeType": "YulBlock",
																"src": "5362:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5371:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5371:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5374:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5374:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5364:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5364:6:18"
																			},
																			"nativeSrc": "5364:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5364:12:18"
																		},
																		"nativeSrc": "5364:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5364:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5337:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5337:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5346:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5346:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5333:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:18"
																		},
																		"nativeSrc": "5333:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5333:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5358:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5329:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:18"
																},
																"nativeSrc": "5329:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5329:32:18"
															},
															"nativeSrc": "5326:52:18",
															"nodeType": "YulIf",
															"src": "5326:52:18"
														},
														{
															"nativeSrc": "5387:39:18",
															"nodeType": "YulAssignment",
															"src": "5387:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5416:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5397:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5397:18:18"
																},
																"nativeSrc": "5397:29:18",
																"nodeType": "YulFunctionCall",
																"src": "5397:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5387:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:18"
																}
															]
														},
														{
															"nativeSrc": "5435:45:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5435:45:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5465:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5465:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5476:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5476:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5461:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5461:3:18"
																		},
																		"nativeSrc": "5461:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5461:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5448:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5448:12:18"
																},
																"nativeSrc": "5448:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5448:32:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5439:5:18",
																	"nodeType": "YulTypedName",
																	"src": "5439:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5533:16:18",
																"nodeType": "YulBlock",
																"src": "5533:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5542:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5542:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5545:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5545:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5535:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:18"
																			},
																			"nativeSrc": "5535:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5535:12:18"
																		},
																		"nativeSrc": "5535:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5535:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5502:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5502:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5523:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "5523:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5516:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "5516:6:18"
																						},
																						"nativeSrc": "5516:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5516:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5509:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5509:6:18"
																				},
																				"nativeSrc": "5509:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5499:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "5499:2:18"
																		},
																		"nativeSrc": "5499:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5499:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5492:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:18"
																},
																"nativeSrc": "5492:40:18",
																"nodeType": "YulFunctionCall",
																"src": "5492:40:18"
															},
															"nativeSrc": "5489:60:18",
															"nodeType": "YulIf",
															"src": "5489:60:18"
														},
														{
															"nativeSrc": "5558:15:18",
															"nodeType": "YulAssignment",
															"src": "5558:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "5568:5:18",
																"nodeType": "YulIdentifier",
																"src": "5568:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5558:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5232:347:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5274:9:18",
														"nodeType": "YulTypedName",
														"src": "5274:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5285:7:18",
														"nodeType": "YulTypedName",
														"src": "5285:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5297:6:18",
														"nodeType": "YulTypedName",
														"src": "5297:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5305:6:18",
														"nodeType": "YulTypedName",
														"src": "5305:6:18",
														"type": ""
													}
												],
												"src": "5232:347:18"
											},
											{
												"body": {
													"nativeSrc": "5714:583:18",
													"nodeType": "YulBlock",
													"src": "5714:583:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5761:16:18",
																"nodeType": "YulBlock",
																"src": "5761:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5770:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5770:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5773:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5773:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5763:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5763:6:18"
																			},
																			"nativeSrc": "5763:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5763:12:18"
																		},
																		"nativeSrc": "5763:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5763:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5735:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5735:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5744:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:18"
																		},
																		"nativeSrc": "5731:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5731:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5756:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5756:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5727:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:18"
																},
																"nativeSrc": "5727:33:18",
																"nodeType": "YulFunctionCall",
																"src": "5727:33:18"
															},
															"nativeSrc": "5724:53:18",
															"nodeType": "YulIf",
															"src": "5724:53:18"
														},
														{
															"nativeSrc": "5786:39:18",
															"nodeType": "YulAssignment",
															"src": "5786:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5815:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5815:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5796:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5796:18:18"
																},
																"nativeSrc": "5796:29:18",
																"nodeType": "YulFunctionCall",
																"src": "5796:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5786:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5786:6:18"
																}
															]
														},
														{
															"nativeSrc": "5834:48:18",
															"nodeType": "YulAssignment",
															"src": "5834:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5867:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5878:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5878:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5863:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:18"
																		},
																		"nativeSrc": "5863:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5844:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5844:18:18"
																},
																"nativeSrc": "5844:38:18",
																"nodeType": "YulFunctionCall",
																"src": "5844:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5834:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:18"
																}
															]
														},
														{
															"nativeSrc": "5891:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5891:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "5904:1:18",
																"nodeType": "YulLiteral",
																"src": "5904:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5895:5:18",
																	"nodeType": "YulTypedName",
																	"src": "5895:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5914:41:18",
															"nodeType": "YulAssignment",
															"src": "5914:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5940:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5940:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5951:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5951:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5936:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5936:3:18"
																		},
																		"nativeSrc": "5936:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5936:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5923:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5923:12:18"
																},
																"nativeSrc": "5923:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5923:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5914:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5914:5:18"
																}
															]
														},
														{
															"nativeSrc": "5964:15:18",
															"nodeType": "YulAssignment",
															"src": "5964:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "5974:5:18",
																"nodeType": "YulIdentifier",
																"src": "5974:5:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5964:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:18"
																}
															]
														},
														{
															"nativeSrc": "5988:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5988:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:18"
																		},
																		"nativeSrc": "6015:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6002:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6002:12:18"
																},
																"nativeSrc": "6002:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6002:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5992:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5992:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6077:16:18",
																"nodeType": "YulBlock",
																"src": "6077:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6086:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6086:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6089:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6089:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6079:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6079:6:18"
																			},
																			"nativeSrc": "6079:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6079:12:18"
																		},
																		"nativeSrc": "6079:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6079:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6049:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6049:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6057:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6057:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6046:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6046:2:18"
																},
																"nativeSrc": "6046:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6046:30:18"
															},
															"nativeSrc": "6043:50:18",
															"nodeType": "YulIf",
															"src": "6043:50:18"
														},
														{
															"nativeSrc": "6102:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6102:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6116:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6127:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6127:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6112:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:18"
																},
																"nativeSrc": "6112:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6112:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6106:2:18",
																	"nodeType": "YulTypedName",
																	"src": "6106:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6182:16:18",
																"nodeType": "YulBlock",
																"src": "6182:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6191:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6191:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6194:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6194:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6184:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6184:6:18"
																			},
																			"nativeSrc": "6184:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6184:12:18"
																		},
																		"nativeSrc": "6184:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6184:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6161:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "6161:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6165:4:18",
																						"nodeType": "YulLiteral",
																						"src": "6165:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6157:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6157:3:18"
																				},
																				"nativeSrc": "6157:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6157:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6172:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6172:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6153:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:18"
																		},
																		"nativeSrc": "6153:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6153:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6146:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6146:6:18"
																},
																"nativeSrc": "6146:35:18",
																"nodeType": "YulFunctionCall",
																"src": "6146:35:18"
															},
															"nativeSrc": "6143:55:18",
															"nodeType": "YulIf",
															"src": "6143:55:18"
														},
														{
															"nativeSrc": "6207:84:18",
															"nodeType": "YulAssignment",
															"src": "6207:84:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6256:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "6256:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6260:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6260:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:18"
																		},
																		"nativeSrc": "6252:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:11:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6278:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "6278:2:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6265:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "6265:12:18"
																		},
																		"nativeSrc": "6265:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6265:16:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6283:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "6283:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "6217:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "6217:34:18"
																},
																"nativeSrc": "6217:74:18",
																"nodeType": "YulFunctionCall",
																"src": "6217:74:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6207:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "5584:713:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5656:9:18",
														"nodeType": "YulTypedName",
														"src": "5656:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5667:7:18",
														"nodeType": "YulTypedName",
														"src": "5667:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5679:6:18",
														"nodeType": "YulTypedName",
														"src": "5679:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5687:6:18",
														"nodeType": "YulTypedName",
														"src": "5687:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5695:6:18",
														"nodeType": "YulTypedName",
														"src": "5695:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5703:6:18",
														"nodeType": "YulTypedName",
														"src": "5703:6:18",
														"type": ""
													}
												],
												"src": "5584:713:18"
											},
											{
												"body": {
													"nativeSrc": "6389:173:18",
													"nodeType": "YulBlock",
													"src": "6389:173:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6435:16:18",
																"nodeType": "YulBlock",
																"src": "6435:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6444:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6444:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6447:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6447:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6437:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6437:6:18"
																			},
																			"nativeSrc": "6437:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6437:12:18"
																		},
																		"nativeSrc": "6437:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6437:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6410:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6410:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6419:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6419:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6406:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:18"
																		},
																		"nativeSrc": "6406:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6406:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6431:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6431:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6402:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:18"
																},
																"nativeSrc": "6402:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6402:32:18"
															},
															"nativeSrc": "6399:52:18",
															"nodeType": "YulIf",
															"src": "6399:52:18"
														},
														{
															"nativeSrc": "6460:39:18",
															"nodeType": "YulAssignment",
															"src": "6460:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6489:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6489:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6470:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6470:18:18"
																},
																"nativeSrc": "6470:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6470:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6460:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6460:6:18"
																}
															]
														},
														{
															"nativeSrc": "6508:48:18",
															"nodeType": "YulAssignment",
															"src": "6508:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6541:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6552:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6552:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6537:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:18"
																		},
																		"nativeSrc": "6537:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6537:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6518:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6518:18:18"
																},
																"nativeSrc": "6518:38:18",
																"nodeType": "YulFunctionCall",
																"src": "6518:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6508:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6302:260:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6347:9:18",
														"nodeType": "YulTypedName",
														"src": "6347:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6358:7:18",
														"nodeType": "YulTypedName",
														"src": "6358:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6370:6:18",
														"nodeType": "YulTypedName",
														"src": "6370:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6378:6:18",
														"nodeType": "YulTypedName",
														"src": "6378:6:18",
														"type": ""
													}
												],
												"src": "6302:260:18"
											},
											{
												"body": {
													"nativeSrc": "6760:1013:18",
													"nodeType": "YulBlock",
													"src": "6760:1013:18",
													"statements": [
														{
															"nativeSrc": "6770:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6770:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6788:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6788:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6799:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6799:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6784:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:18"
																},
																"nativeSrc": "6784:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6784:18:18"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "6774:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6774:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6818:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6818:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6811:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6811:6:18"
																},
																"nativeSrc": "6811:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6811:21:18"
															},
															"nativeSrc": "6811:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6811:21:18"
														},
														{
															"nativeSrc": "6841:17:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6841:17:18",
															"value": {
																"name": "tail_1",
																"nativeSrc": "6852:6:18",
																"nodeType": "YulIdentifier",
																"src": "6852:6:18"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "6845:3:18",
																	"nodeType": "YulTypedName",
																	"src": "6845:3:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6867:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6867:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6887:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6887:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6881:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6881:5:18"
																},
																"nativeSrc": "6881:13:18",
																"nodeType": "YulFunctionCall",
																"src": "6881:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6871:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6871:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "6910:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6910:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6918:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6918:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6903:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:18"
																},
																"nativeSrc": "6903:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6903:22:18"
															},
															"nativeSrc": "6903:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6903:22:18"
														},
														{
															"nativeSrc": "6934:25:18",
															"nodeType": "YulAssignment",
															"src": "6934:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6945:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6945:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6956:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6956:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6941:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6941:3:18"
																},
																"nativeSrc": "6941:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6941:18:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6934:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6934:3:18"
																}
															]
														},
														{
															"nativeSrc": "6968:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6968:53:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6990:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6990:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7005:1:18",
																						"nodeType": "YulLiteral",
																						"src": "7005:1:18",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7008:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7008:6:18"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7001:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7001:3:18"
																				},
																				"nativeSrc": "7001:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7001:14:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6986:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6986:3:18"
																		},
																		"nativeSrc": "6986:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:30:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6982:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6982:3:18"
																},
																"nativeSrc": "6982:39:18",
																"nodeType": "YulFunctionCall",
																"src": "6982:39:18"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "6972:6:18",
																	"nodeType": "YulTypedName",
																	"src": "6972:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7030:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7030:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7048:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7048:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7056:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7056:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7044:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7044:3:18"
																},
																"nativeSrc": "7044:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7044:15:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7034:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7034:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7068:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7068:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "7077:1:18",
																"nodeType": "YulLiteral",
																"src": "7077:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7072:1:18",
																	"nodeType": "YulTypedName",
																	"src": "7072:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7136:608:18",
																"nodeType": "YulBlock",
																"src": "7136:608:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7157:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7157:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nativeSrc": "7170:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "7170:6:18"
																								},
																								{
																									"name": "headStart",
																									"nativeSrc": "7178:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "7178:9:18"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "7166:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7166:3:18"
																							},
																							"nativeSrc": "7166:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7166:22:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7194:2:18",
																									"nodeType": "YulLiteral",
																									"src": "7194:2:18",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7190:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7190:3:18"
																							},
																							"nativeSrc": "7190:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7190:7:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7162:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7162:3:18"
																					},
																					"nativeSrc": "7162:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7162:36:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7150:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7150:6:18"
																			},
																			"nativeSrc": "7150:49:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7150:49:18"
																		},
																		"nativeSrc": "7150:49:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7150:49:18"
																	},
																	{
																		"nativeSrc": "7212:23:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7212:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7228:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7228:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7222:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7222:5:18"
																			},
																			"nativeSrc": "7222:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:13:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "7216:2:18",
																				"nodeType": "YulTypedName",
																				"src": "7216:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nativeSrc": "7255:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7255:6:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_1",
																							"nativeSrc": "7269:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7269:2:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7263:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7263:5:18"
																					},
																					"nativeSrc": "7263:9:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7263:9:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7248:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7248:6:18"
																			},
																			"nativeSrc": "7248:25:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7248:25:18"
																		},
																		"nativeSrc": "7248:25:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7248:25:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7297:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7297:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7305:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7305:2:18",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7293:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7293:3:18"
																					},
																					"nativeSrc": "7293:15:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7293:15:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "7320:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7320:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7324:2:18",
																									"nodeType": "YulLiteral",
																									"src": "7324:2:18",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7316:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7316:3:18"
																							},
																							"nativeSrc": "7316:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7316:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7310:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7310:5:18"
																					},
																					"nativeSrc": "7310:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7310:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7286:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7286:6:18"
																			},
																			"nativeSrc": "7286:43:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7286:43:18"
																		},
																		"nativeSrc": "7286:43:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7286:43:18"
																	},
																	{
																		"nativeSrc": "7342:38:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7342:38:18",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_1",
																							"nativeSrc": "7372:2:18",
																							"nodeType": "YulIdentifier",
																							"src": "7372:2:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7376:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7376:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7368:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7368:3:18"
																					},
																					"nativeSrc": "7368:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7368:11:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7362:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7362:5:18"
																			},
																			"nativeSrc": "7362:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7362:18:18"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7346:12:18",
																				"nodeType": "YulTypedName",
																				"src": "7346:12:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7404:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7404:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7412:2:18",
																							"nodeType": "YulLiteral",
																							"src": "7412:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7400:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7400:3:18"
																					},
																					"nativeSrc": "7400:15:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7400:15:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7417:4:18",
																					"nodeType": "YulLiteral",
																					"src": "7417:4:18",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7393:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7393:6:18"
																			},
																			"nativeSrc": "7393:29:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7393:29:18"
																		},
																		"nativeSrc": "7393:29:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7393:29:18"
																	},
																	{
																		"nativeSrc": "7435:64:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7435:64:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nativeSrc": "7467:12:18",
																					"nodeType": "YulIdentifier",
																					"src": "7467:12:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7485:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7485:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7493:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7493:4:18",
																							"type": "",
																							"value": "0xa0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7481:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7481:3:18"
																					},
																					"nativeSrc": "7481:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7481:17:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_string",
																				"nativeSrc": "7449:17:18",
																				"nodeType": "YulIdentifier",
																				"src": "7449:17:18"
																			},
																			"nativeSrc": "7449:50:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7449:50:18"
																		},
																		"variables": [
																			{
																				"name": "tail_3",
																				"nativeSrc": "7439:6:18",
																				"nodeType": "YulTypedName",
																				"src": "7439:6:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7523:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7523:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7531:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7531:4:18",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7519:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7519:3:18"
																					},
																					"nativeSrc": "7519:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7519:17:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "7548:2:18",
																									"nodeType": "YulIdentifier",
																									"src": "7548:2:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7552:4:18",
																									"nodeType": "YulLiteral",
																									"src": "7552:4:18",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7544:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "7544:3:18"
																							},
																							"nativeSrc": "7544:13:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7544:13:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7538:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "7538:5:18"
																					},
																					"nativeSrc": "7538:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7538:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7512:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7512:6:18"
																			},
																			"nativeSrc": "7512:47:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7512:47:18"
																		},
																		"nativeSrc": "7512:47:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7512:47:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nativeSrc": "7583:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7583:6:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7591:4:18",
																							"nodeType": "YulLiteral",
																							"src": "7591:4:18",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7579:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7579:3:18"
																					},
																					"nativeSrc": "7579:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7579:17:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_1",
																													"nativeSrc": "7622:2:18",
																													"nodeType": "YulIdentifier",
																													"src": "7622:2:18"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "7626:4:18",
																													"nodeType": "YulLiteral",
																													"src": "7626:4:18",
																													"type": "",
																													"value": "0x80"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "7618:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "7618:3:18"
																											},
																											"nativeSrc": "7618:13:18",
																											"nodeType": "YulFunctionCall",
																											"src": "7618:13:18"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "7612:5:18",
																										"nodeType": "YulIdentifier",
																										"src": "7612:5:18"
																									},
																									"nativeSrc": "7612:20:18",
																									"nodeType": "YulFunctionCall",
																									"src": "7612:20:18"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "7605:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "7605:6:18"
																							},
																							"nativeSrc": "7605:28:18",
																							"nodeType": "YulFunctionCall",
																							"src": "7605:28:18"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "7598:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7598:6:18"
																					},
																					"nativeSrc": "7598:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7598:36:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7572:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7572:6:18"
																			},
																			"nativeSrc": "7572:63:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7572:63:18"
																		},
																		"nativeSrc": "7572:63:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7572:63:18"
																	},
																	{
																		"nativeSrc": "7648:16:18",
																		"nodeType": "YulAssignment",
																		"src": "7648:16:18",
																		"value": {
																			"name": "tail_3",
																			"nativeSrc": "7658:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "7658:6:18"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "7648:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7648:6:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7677:25:18",
																		"nodeType": "YulAssignment",
																		"src": "7677:25:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7691:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7691:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7699:2:18",
																					"nodeType": "YulLiteral",
																					"src": "7699:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7687:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7687:3:18"
																			},
																			"nativeSrc": "7687:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7687:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7677:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7677:6:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7715:19:18",
																		"nodeType": "YulAssignment",
																		"src": "7715:19:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7726:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7726:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7731:2:18",
																					"nodeType": "YulLiteral",
																					"src": "7731:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7722:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7722:3:18"
																			},
																			"nativeSrc": "7722:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7722:12:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7715:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7715:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7098:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7098:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7101:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7095:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7095:2:18"
																},
																"nativeSrc": "7095:13:18",
																"nodeType": "YulFunctionCall",
																"src": "7095:13:18"
															},
															"nativeSrc": "7087:657:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7109:18:18",
																"nodeType": "YulBlock",
																"src": "7109:18:18",
																"statements": [
																	{
																		"nativeSrc": "7111:14:18",
																		"nodeType": "YulAssignment",
																		"src": "7111:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7120:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "7120:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7123:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7123:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7116:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7116:3:18"
																			},
																			"nativeSrc": "7116:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7116:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7111:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "7111:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7091:3:18",
																"nodeType": "YulBlock",
																"src": "7091:3:18",
																"statements": []
															},
															"src": "7087:657:18"
														},
														{
															"nativeSrc": "7753:14:18",
															"nodeType": "YulAssignment",
															"src": "7753:14:18",
															"value": {
																"name": "tail_2",
																"nativeSrc": "7761:6:18",
																"nodeType": "YulIdentifier",
																"src": "7761:6:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7753:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7753:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6567:1206:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6729:9:18",
														"nodeType": "YulTypedName",
														"src": "6729:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6740:6:18",
														"nodeType": "YulTypedName",
														"src": "6740:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6751:4:18",
														"nodeType": "YulTypedName",
														"src": "6751:4:18",
														"type": ""
													}
												],
												"src": "6567:1206:18"
											},
											{
												"body": {
													"nativeSrc": "7833:325:18",
													"nodeType": "YulBlock",
													"src": "7833:325:18",
													"statements": [
														{
															"nativeSrc": "7843:22:18",
															"nodeType": "YulAssignment",
															"src": "7843:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7857:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7857:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7860:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7860:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7853:3:18"
																},
																"nativeSrc": "7853:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7853:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7843:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:18"
																}
															]
														},
														{
															"nativeSrc": "7874:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7874:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7904:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7904:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7910:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7910:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7900:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7900:3:18"
																},
																"nativeSrc": "7900:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7900:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7878:18:18",
																	"nodeType": "YulTypedName",
																	"src": "7878:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7951:31:18",
																"nodeType": "YulBlock",
																"src": "7951:31:18",
																"statements": [
																	{
																		"nativeSrc": "7953:27:18",
																		"nodeType": "YulAssignment",
																		"src": "7953:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7967:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7967:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7975:4:18",
																					"nodeType": "YulLiteral",
																					"src": "7975:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7963:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7963:3:18"
																			},
																			"nativeSrc": "7963:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7963:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7953:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7931:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "7931:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7924:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:18"
																},
																"nativeSrc": "7924:26:18",
																"nodeType": "YulFunctionCall",
																"src": "7924:26:18"
															},
															"nativeSrc": "7921:61:18",
															"nodeType": "YulIf",
															"src": "7921:61:18"
														},
														{
															"body": {
																"nativeSrc": "8041:111:18",
																"nodeType": "YulBlock",
																"src": "8041:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8062:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8062:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8069:3:18",
																							"nodeType": "YulLiteral",
																							"src": "8069:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8074:10:18",
																							"nodeType": "YulLiteral",
																							"src": "8074:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8065:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8065:3:18"
																					},
																					"nativeSrc": "8065:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8065:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8055:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8055:6:18"
																			},
																			"nativeSrc": "8055:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:31:18"
																		},
																		"nativeSrc": "8055:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8106:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8106:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8109:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8109:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8099:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8099:6:18"
																			},
																			"nativeSrc": "8099:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8099:15:18"
																		},
																		"nativeSrc": "8099:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8099:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8134:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8134:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8137:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8137:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8127:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:18"
																			},
																			"nativeSrc": "8127:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8127:15:18"
																		},
																		"nativeSrc": "8127:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8127:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7997:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "7997:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8020:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8020:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8028:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8028:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8017:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8017:2:18"
																		},
																		"nativeSrc": "8017:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7994:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7994:2:18"
																},
																"nativeSrc": "7994:38:18",
																"nodeType": "YulFunctionCall",
																"src": "7994:38:18"
															},
															"nativeSrc": "7991:161:18",
															"nodeType": "YulIf",
															"src": "7991:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7778:380:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7813:4:18",
														"nodeType": "YulTypedName",
														"src": "7813:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7822:6:18",
														"nodeType": "YulTypedName",
														"src": "7822:6:18",
														"type": ""
													}
												],
												"src": "7778:380:18"
											},
											{
												"body": {
													"nativeSrc": "8320:214:18",
													"nodeType": "YulBlock",
													"src": "8320:214:18",
													"statements": [
														{
															"nativeSrc": "8330:26:18",
															"nodeType": "YulAssignment",
															"src": "8330:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8342:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8342:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8353:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8353:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8338:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:18"
																},
																"nativeSrc": "8338:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8338:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8330:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8330:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8372:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8372:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8387:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8387:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8403:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8403:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8408:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8408:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8399:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8399:3:18"
																						},
																						"nativeSrc": "8399:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8399:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8412:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8412:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8395:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8395:3:18"
																				},
																				"nativeSrc": "8395:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8395:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8383:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8383:3:18"
																		},
																		"nativeSrc": "8383:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8383:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8365:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8365:6:18"
																},
																"nativeSrc": "8365:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8365:51:18"
															},
															"nativeSrc": "8365:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8365:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8436:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8447:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8447:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8432:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:18"
																		},
																		"nativeSrc": "8432:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8432:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8452:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8452:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8425:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:18"
																},
																"nativeSrc": "8425:34:18",
																"nodeType": "YulFunctionCall",
																"src": "8425:34:18"
															},
															"nativeSrc": "8425:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "8425:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8479:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8479:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8490:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8490:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8475:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:18"
																		},
																		"nativeSrc": "8475:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8475:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8499:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8499:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8515:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8515:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8520:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8520:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8511:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8511:3:18"
																						},
																						"nativeSrc": "8511:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8511:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8524:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8524:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8507:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8507:3:18"
																				},
																				"nativeSrc": "8507:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8507:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8495:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8495:3:18"
																		},
																		"nativeSrc": "8495:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8495:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8468:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:18"
																},
																"nativeSrc": "8468:60:18",
																"nodeType": "YulFunctionCall",
																"src": "8468:60:18"
															},
															"nativeSrc": "8468:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "8468:60:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8163:371:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8273:9:18",
														"nodeType": "YulTypedName",
														"src": "8273:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8284:6:18",
														"nodeType": "YulTypedName",
														"src": "8284:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8292:6:18",
														"nodeType": "YulTypedName",
														"src": "8292:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8300:6:18",
														"nodeType": "YulTypedName",
														"src": "8300:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8311:4:18",
														"nodeType": "YulTypedName",
														"src": "8311:4:18",
														"type": ""
													}
												],
												"src": "8163:371:18"
											},
											{
												"body": {
													"nativeSrc": "8713:231:18",
													"nodeType": "YulBlock",
													"src": "8713:231:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8730:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8730:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8741:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8741:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8723:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:18"
																},
																"nativeSrc": "8723:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8723:21:18"
															},
															"nativeSrc": "8723:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8723:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8764:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8764:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8775:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8775:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8760:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8760:3:18"
																		},
																		"nativeSrc": "8760:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8760:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8780:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8780:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8753:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:18"
																},
																"nativeSrc": "8753:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8753:30:18"
															},
															"nativeSrc": "8753:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8753:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8803:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8803:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8814:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8814:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8799:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:18"
																		},
																		"nativeSrc": "8799:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8799:18:18"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420617574686f72697a656420666f72206d696e7469",
																		"kind": "string",
																		"nativeSrc": "8819:34:18",
																		"nodeType": "YulLiteral",
																		"src": "8819:34:18",
																		"type": "",
																		"value": "You are not authorized for minti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8792:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:18"
																},
																"nativeSrc": "8792:62:18",
																"nodeType": "YulFunctionCall",
																"src": "8792:62:18"
															},
															"nativeSrc": "8792:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "8792:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8874:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8874:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8885:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8885:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8870:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8870:3:18"
																		},
																		"nativeSrc": "8870:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8870:18:18"
																	},
																	{
																		"hexValue": "6e67206c616e642121",
																		"kind": "string",
																		"nativeSrc": "8890:11:18",
																		"nodeType": "YulLiteral",
																		"src": "8890:11:18",
																		"type": "",
																		"value": "ng land!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8863:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8863:6:18"
																},
																"nativeSrc": "8863:39:18",
																"nodeType": "YulFunctionCall",
																"src": "8863:39:18"
															},
															"nativeSrc": "8863:39:18",
															"nodeType": "YulExpressionStatement",
															"src": "8863:39:18"
														},
														{
															"nativeSrc": "8911:27:18",
															"nodeType": "YulAssignment",
															"src": "8911:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8923:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8923:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:3:18",
																		"nodeType": "YulLiteral",
																		"src": "8934:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8919:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8919:3:18"
																},
																"nativeSrc": "8919:19:18",
																"nodeType": "YulFunctionCall",
																"src": "8919:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8911:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8911:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0857ca2ab96eb0bca607d99a40522e0bce8a8d7e5db4afb0608a9031d239c2f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8539:405:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8690:9:18",
														"nodeType": "YulTypedName",
														"src": "8690:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8704:4:18",
														"nodeType": "YulTypedName",
														"src": "8704:4:18",
														"type": ""
													}
												],
												"src": "8539:405:18"
											},
											{
												"body": {
													"nativeSrc": "8981:95:18",
													"nodeType": "YulBlock",
													"src": "8981:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8998:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8998:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9005:3:18",
																				"nodeType": "YulLiteral",
																				"src": "9005:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9010:10:18",
																				"nodeType": "YulLiteral",
																				"src": "9010:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9001:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9001:3:18"
																		},
																		"nativeSrc": "9001:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9001:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8991:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8991:6:18"
																},
																"nativeSrc": "8991:31:18",
																"nodeType": "YulFunctionCall",
																"src": "8991:31:18"
															},
															"nativeSrc": "8991:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "8991:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9038:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9041:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9041:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9031:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:18"
																},
																"nativeSrc": "9031:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9031:15:18"
															},
															"nativeSrc": "9031:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9031:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9062:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9062:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9065:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9065:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9055:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:18"
																},
																"nativeSrc": "9055:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9055:15:18"
															},
															"nativeSrc": "9055:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "9055:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8949:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8949:127:18"
											},
											{
												"body": {
													"nativeSrc": "9129:77:18",
													"nodeType": "YulBlock",
													"src": "9129:77:18",
													"statements": [
														{
															"nativeSrc": "9139:16:18",
															"nodeType": "YulAssignment",
															"src": "9139:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9150:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9150:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9153:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9153:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9146:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:18"
																},
																"nativeSrc": "9146:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9146:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9139:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9139:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9178:22:18",
																"nodeType": "YulBlock",
																"src": "9178:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9180:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9180:16:18"
																			},
																			"nativeSrc": "9180:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9180:18:18"
																		},
																		"nativeSrc": "9180:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9180:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9170:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9170:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9173:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9173:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9167:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9167:2:18"
																},
																"nativeSrc": "9167:10:18",
																"nodeType": "YulFunctionCall",
																"src": "9167:10:18"
															},
															"nativeSrc": "9164:36:18",
															"nodeType": "YulIf",
															"src": "9164:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9081:125:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9112:1:18",
														"nodeType": "YulTypedName",
														"src": "9112:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9115:1:18",
														"nodeType": "YulTypedName",
														"src": "9115:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9121:3:18",
														"nodeType": "YulTypedName",
														"src": "9121:3:18",
														"type": ""
													}
												],
												"src": "9081:125:18"
											},
											{
												"body": {
													"nativeSrc": "9267:65:18",
													"nodeType": "YulBlock",
													"src": "9267:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9284:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9284:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9287:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9287:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9277:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9277:6:18"
																},
																"nativeSrc": "9277:14:18",
																"nodeType": "YulFunctionCall",
																"src": "9277:14:18"
															},
															"nativeSrc": "9277:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "9277:14:18"
														},
														{
															"nativeSrc": "9300:26:18",
															"nodeType": "YulAssignment",
															"src": "9300:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9318:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9318:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9321:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9321:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9308:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "9308:9:18"
																},
																"nativeSrc": "9308:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9308:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9300:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9300:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "9211:121:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9250:3:18",
														"nodeType": "YulTypedName",
														"src": "9250:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9258:4:18",
														"nodeType": "YulTypedName",
														"src": "9258:4:18",
														"type": ""
													}
												],
												"src": "9211:121:18"
											},
											{
												"body": {
													"nativeSrc": "9418:437:18",
													"nodeType": "YulBlock",
													"src": "9418:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9451:398:18",
																"nodeType": "YulBlock",
																"src": "9451:398:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9472:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9472:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "9475:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "9475:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9465:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9465:6:18"
																			},
																			"nativeSrc": "9465:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9465:16:18"
																		},
																		"nativeSrc": "9465:16:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9465:16:18"
																	},
																	{
																		"nativeSrc": "9494:30:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9494:30:18",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9516:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9516:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9519:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9519:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "9506:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9506:9:18"
																			},
																			"nativeSrc": "9506:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9506:18:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "9498:4:18",
																				"nodeType": "YulTypedName",
																				"src": "9498:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9537:57:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9537:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9560:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "9560:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9570:1:18",
																							"nodeType": "YulLiteral",
																							"src": "9570:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "9577:10:18",
																									"nodeType": "YulIdentifier",
																									"src": "9577:10:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9589:2:18",
																									"nodeType": "YulLiteral",
																									"src": "9589:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9573:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "9573:3:18"
																							},
																							"nativeSrc": "9573:19:18",
																							"nodeType": "YulFunctionCall",
																							"src": "9573:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9566:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9566:3:18"
																					},
																					"nativeSrc": "9566:27:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9566:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9556:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9556:3:18"
																			},
																			"nativeSrc": "9556:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9556:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9541:11:18",
																				"nodeType": "YulTypedName",
																				"src": "9541:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9631:23:18",
																			"nodeType": "YulBlock",
																			"src": "9631:23:18",
																			"statements": [
																				{
																					"nativeSrc": "9633:19:18",
																					"nodeType": "YulAssignment",
																					"src": "9633:19:18",
																					"value": {
																						"name": "data",
																						"nativeSrc": "9648:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "9648:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9633:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "9633:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9613:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "9613:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9625:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9625:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9610:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "9610:2:18"
																			},
																			"nativeSrc": "9610:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9610:20:18"
																		},
																		"nativeSrc": "9607:47:18",
																		"nodeType": "YulIf",
																		"src": "9607:47:18"
																	},
																	{
																		"nativeSrc": "9667:41:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9667:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "9681:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "9681:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9691:1:18",
																							"nodeType": "YulLiteral",
																							"src": "9691:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9698:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "9698:3:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9703:2:18",
																									"nodeType": "YulLiteral",
																									"src": "9703:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9694:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "9694:3:18"
																							},
																							"nativeSrc": "9694:12:18",
																							"nodeType": "YulFunctionCall",
																							"src": "9694:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "9687:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9687:3:18"
																					},
																					"nativeSrc": "9687:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9687:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9677:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9677:3:18"
																			},
																			"nativeSrc": "9677:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9677:31:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "9671:2:18",
																				"nodeType": "YulTypedName",
																				"src": "9671:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9721:24:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9721:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "9734:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "9734:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "9725:5:18",
																				"nodeType": "YulTypedName",
																				"src": "9725:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9819:20:18",
																			"nodeType": "YulBlock",
																			"src": "9819:20:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9828:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "9828:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9835:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9835:1:18",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "9821:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "9821:6:18"
																						},
																						"nativeSrc": "9821:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9821:16:18"
																					},
																					"nativeSrc": "9821:16:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "9821:16:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9769:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "9769:5:18"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9776:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "9776:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9766:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "9766:2:18"
																			},
																			"nativeSrc": "9766:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9766:13:18"
																		},
																		"nativeSrc": "9758:81:18",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "9780:26:18",
																			"nodeType": "YulBlock",
																			"src": "9780:26:18",
																			"statements": [
																				{
																					"nativeSrc": "9782:22:18",
																					"nodeType": "YulAssignment",
																					"src": "9782:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "9795:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "9795:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9802:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9802:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9791:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9791:3:18"
																						},
																						"nativeSrc": "9791:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9791:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "9782:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "9782:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "9762:3:18",
																			"nodeType": "YulBlock",
																			"src": "9762:3:18",
																			"statements": []
																		},
																		"src": "9758:81:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9434:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9434:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9439:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9439:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9431:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9431:2:18"
																},
																"nativeSrc": "9431:11:18",
																"nodeType": "YulFunctionCall",
																"src": "9431:11:18"
															},
															"nativeSrc": "9428:421:18",
															"nodeType": "YulIf",
															"src": "9428:421:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "9337:518:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9390:5:18",
														"nodeType": "YulTypedName",
														"src": "9390:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9397:3:18",
														"nodeType": "YulTypedName",
														"src": "9397:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "9402:10:18",
														"nodeType": "YulTypedName",
														"src": "9402:10:18",
														"type": ""
													}
												],
												"src": "9337:518:18"
											},
											{
												"body": {
													"nativeSrc": "9945:81:18",
													"nodeType": "YulBlock",
													"src": "9945:81:18",
													"statements": [
														{
															"nativeSrc": "9955:65:18",
															"nodeType": "YulAssignment",
															"src": "9955:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9970:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "9970:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9988:1:18",
																										"nodeType": "YulLiteral",
																										"src": "9988:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "9991:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "9991:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "9984:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "9984:3:18"
																								},
																								"nativeSrc": "9984:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "9984:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10001:1:18",
																										"nodeType": "YulLiteral",
																										"src": "10001:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "9997:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "9997:3:18"
																								},
																								"nativeSrc": "9997:6:18",
																								"nodeType": "YulFunctionCall",
																								"src": "9997:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "9980:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9980:3:18"
																						},
																						"nativeSrc": "9980:24:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9980:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9976:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9976:3:18"
																				},
																				"nativeSrc": "9976:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9976:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9966:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9966:3:18"
																		},
																		"nativeSrc": "9966:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9966:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10012:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10012:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10015:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10015:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10008:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10008:3:18"
																		},
																		"nativeSrc": "10008:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10008:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9963:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9963:2:18"
																},
																"nativeSrc": "9963:57:18",
																"nodeType": "YulFunctionCall",
																"src": "9963:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "9955:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9955:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9860:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9922:4:18",
														"nodeType": "YulTypedName",
														"src": "9922:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9928:3:18",
														"nodeType": "YulTypedName",
														"src": "9928:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9936:4:18",
														"nodeType": "YulTypedName",
														"src": "9936:4:18",
														"type": ""
													}
												],
												"src": "9860:166:18"
											},
											{
												"body": {
													"nativeSrc": "10127:1203:18",
													"nodeType": "YulBlock",
													"src": "10127:1203:18",
													"statements": [
														{
															"nativeSrc": "10137:24:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10137:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10157:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10157:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10151:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10151:5:18"
																},
																"nativeSrc": "10151:10:18",
																"nodeType": "YulFunctionCall",
																"src": "10151:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "10141:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10141:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10204:22:18",
																"nodeType": "YulBlock",
																"src": "10204:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10206:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "10206:16:18"
																			},
																			"nativeSrc": "10206:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10206:18:18"
																		},
																		"nativeSrc": "10206:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10206:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10176:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10176:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10184:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10184:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10173:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10173:2:18"
																},
																"nativeSrc": "10173:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10173:30:18"
															},
															"nativeSrc": "10170:56:18",
															"nodeType": "YulIf",
															"src": "10170:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10279:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "10279:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "10317:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "10317:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10311:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "10311:5:18"
																				},
																				"nativeSrc": "10311:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "10285:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "10285:25:18"
																		},
																		"nativeSrc": "10285:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10285:38:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "10325:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10325:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "10235:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "10235:43:18"
																},
																"nativeSrc": "10235:97:18",
																"nodeType": "YulFunctionCall",
																"src": "10235:97:18"
															},
															"nativeSrc": "10235:97:18",
															"nodeType": "YulExpressionStatement",
															"src": "10235:97:18"
														},
														{
															"nativeSrc": "10341:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10341:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "10358:1:18",
																"nodeType": "YulLiteral",
																"src": "10358:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10345:9:18",
																	"nodeType": "YulTypedName",
																	"src": "10345:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10368:17:18",
															"nodeType": "YulAssignment",
															"src": "10368:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "10381:4:18",
																"nodeType": "YulLiteral",
																"src": "10381:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10368:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "10368:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10431:642:18",
																		"nodeType": "YulBlock",
																		"src": "10431:642:18",
																		"statements": [
																			{
																				"nativeSrc": "10445:35:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10445:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "10464:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "10464:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10476:2:18",
																									"nodeType": "YulLiteral",
																									"src": "10476:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "10472:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "10472:3:18"
																							},
																							"nativeSrc": "10472:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "10472:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10460:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "10460:3:18"
																					},
																					"nativeSrc": "10460:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10460:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "10449:7:18",
																						"nodeType": "YulTypedName",
																						"src": "10449:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10493:49:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10493:49:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10537:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "10537:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "10507:29:18",
																						"nodeType": "YulIdentifier",
																						"src": "10507:29:18"
																					},
																					"nativeSrc": "10507:35:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10507:35:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10497:6:18",
																						"nodeType": "YulTypedName",
																						"src": "10497:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10555:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10555:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10564:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10564:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10559:1:18",
																						"nodeType": "YulTypedName",
																						"src": "10559:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10635:165:18",
																					"nodeType": "YulBlock",
																					"src": "10635:165:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10660:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "10660:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10678:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "10678:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10683:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "10683:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10674:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "10674:3:18"
																												},
																												"nativeSrc": "10674:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "10674:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10668:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "10668:5:18"
																										},
																										"nativeSrc": "10668:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "10668:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10653:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "10653:6:18"
																								},
																								"nativeSrc": "10653:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10653:42:18"
																							},
																							"nativeSrc": "10653:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "10653:42:18"
																						},
																						{
																							"nativeSrc": "10712:24:18",
																							"nodeType": "YulAssignment",
																							"src": "10712:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10726:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "10726:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10734:1:18",
																										"nodeType": "YulLiteral",
																										"src": "10734:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10722:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "10722:3:18"
																								},
																								"nativeSrc": "10722:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10722:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "10712:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "10712:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "10753:33:18",
																							"nodeType": "YulAssignment",
																							"src": "10753:33:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "10770:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "10770:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10781:4:18",
																										"nodeType": "YulLiteral",
																										"src": "10781:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10766:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "10766:3:18"
																								},
																								"nativeSrc": "10766:20:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10766:20:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "10753:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "10753:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10589:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "10589:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10592:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "10592:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10586:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "10586:2:18"
																					},
																					"nativeSrc": "10586:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10586:14:18"
																				},
																				"nativeSrc": "10578:222:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10601:21:18",
																					"nodeType": "YulBlock",
																					"src": "10601:21:18",
																					"statements": [
																						{
																							"nativeSrc": "10603:17:18",
																							"nodeType": "YulAssignment",
																							"src": "10603:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10612:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "10612:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10615:4:18",
																										"nodeType": "YulLiteral",
																										"src": "10615:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10608:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "10608:3:18"
																								},
																								"nativeSrc": "10608:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10608:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10603:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "10603:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10582:3:18",
																					"nodeType": "YulBlock",
																					"src": "10582:3:18",
																					"statements": []
																				},
																				"src": "10578:222:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "10848:166:18",
																					"nodeType": "YulBlock",
																					"src": "10848:166:18",
																					"statements": [
																						{
																							"nativeSrc": "10866:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "10866:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10893:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "10893:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10898:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "10898:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10889:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "10889:3:18"
																										},
																										"nativeSrc": "10889:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "10889:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10883:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "10883:5:18"
																								},
																								"nativeSrc": "10883:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10883:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "10870:9:18",
																									"nodeType": "YulTypedName",
																									"src": "10870:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10933:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "10933:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "10945:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "10945:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "10972:1:18",
																																				"nodeType": "YulLiteral",
																																				"src": "10972:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "10975:6:18",
																																				"nodeType": "YulIdentifier",
																																				"src": "10975:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "10968:3:18",
																																			"nodeType": "YulIdentifier",
																																			"src": "10968:3:18"
																																		},
																																		"nativeSrc": "10968:14:18",
																																		"nodeType": "YulFunctionCall",
																																		"src": "10968:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10984:3:18",
																																		"nodeType": "YulLiteral",
																																		"src": "10984:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "10964:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "10964:3:18"
																																},
																																"nativeSrc": "10964:24:18",
																																"nodeType": "YulFunctionCall",
																																"src": "10964:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "10994:1:18",
																																		"nodeType": "YulLiteral",
																																		"src": "10994:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "10990:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "10990:3:18"
																																},
																																"nativeSrc": "10990:6:18",
																																"nodeType": "YulFunctionCall",
																																"src": "10990:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "10960:3:18",
																															"nodeType": "YulIdentifier",
																															"src": "10960:3:18"
																														},
																														"nativeSrc": "10960:37:18",
																														"nodeType": "YulFunctionCall",
																														"src": "10960:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "10956:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "10956:3:18"
																												},
																												"nativeSrc": "10956:42:18",
																												"nodeType": "YulFunctionCall",
																												"src": "10956:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "10941:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "10941:3:18"
																										},
																										"nativeSrc": "10941:58:18",
																										"nodeType": "YulFunctionCall",
																										"src": "10941:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10926:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "10926:6:18"
																								},
																								"nativeSrc": "10926:74:18",
																								"nodeType": "YulFunctionCall",
																								"src": "10926:74:18"
																							},
																							"nativeSrc": "10926:74:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "10926:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10819:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "10819:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "10828:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "10828:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10816:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "10816:2:18"
																					},
																					"nativeSrc": "10816:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10816:19:18"
																				},
																				"nativeSrc": "10813:201:18",
																				"nodeType": "YulIf",
																				"src": "10813:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11034:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "11034:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11048:1:18",
																											"nodeType": "YulLiteral",
																											"src": "11048:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "11051:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "11051:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "11044:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "11044:3:18"
																									},
																									"nativeSrc": "11044:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "11044:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11060:1:18",
																									"nodeType": "YulLiteral",
																									"src": "11060:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11040:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "11040:3:18"
																							},
																							"nativeSrc": "11040:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11040:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11027:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11027:6:18"
																					},
																					"nativeSrc": "11027:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11027:36:18"
																				},
																				"nativeSrc": "11027:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11027:36:18"
																			}
																		]
																	},
																	"nativeSrc": "10424:649:18",
																	"nodeType": "YulCase",
																	"src": "10424:649:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10429:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10429:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11090:234:18",
																		"nodeType": "YulBlock",
																		"src": "11090:234:18",
																		"statements": [
																			{
																				"nativeSrc": "11104:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11104:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11117:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11117:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "11108:5:18",
																						"nodeType": "YulTypedName",
																						"src": "11108:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11153:67:18",
																					"nodeType": "YulBlock",
																					"src": "11153:67:18",
																					"statements": [
																						{
																							"nativeSrc": "11171:35:18",
																							"nodeType": "YulAssignment",
																							"src": "11171:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11190:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "11190:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11195:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "11195:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11186:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "11186:3:18"
																										},
																										"nativeSrc": "11186:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "11186:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11180:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "11180:5:18"
																								},
																								"nativeSrc": "11180:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11180:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "11171:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "11171:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "11134:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "11134:6:18"
																				},
																				"nativeSrc": "11131:89:18",
																				"nodeType": "YulIf",
																				"src": "11131:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11240:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "11240:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "11299:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "11299:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "11306:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "11306:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "11246:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "11246:52:18"
																							},
																							"nativeSrc": "11246:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11246:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11233:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11233:6:18"
																					},
																					"nativeSrc": "11233:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11233:81:18"
																				},
																				"nativeSrc": "11233:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11233:81:18"
																			}
																		]
																	},
																	"nativeSrc": "11082:242:18",
																	"nodeType": "YulCase",
																	"src": "11082:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10404:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10404:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10412:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10401:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10401:2:18"
																},
																"nativeSrc": "10401:14:18",
																"nodeType": "YulFunctionCall",
																"src": "10401:14:18"
															},
															"nativeSrc": "10394:930:18",
															"nodeType": "YulSwitch",
															"src": "10394:930:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "10031:1299:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10112:4:18",
														"nodeType": "YulTypedName",
														"src": "10112:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "10118:3:18",
														"nodeType": "YulTypedName",
														"src": "10118:3:18",
														"type": ""
													}
												],
												"src": "10031:1299:18"
											},
											{
												"body": {
													"nativeSrc": "11382:88:18",
													"nodeType": "YulBlock",
													"src": "11382:88:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11413:22:18",
																"nodeType": "YulBlock",
																"src": "11413:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11415:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11415:16:18"
																			},
																			"nativeSrc": "11415:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11415:18:18"
																		},
																		"nativeSrc": "11415:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11415:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11398:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11398:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11409:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11409:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11405:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11405:3:18"
																		},
																		"nativeSrc": "11405:6:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11405:6:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11395:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11395:2:18"
																},
																"nativeSrc": "11395:17:18",
																"nodeType": "YulFunctionCall",
																"src": "11395:17:18"
															},
															"nativeSrc": "11392:43:18",
															"nodeType": "YulIf",
															"src": "11392:43:18"
														},
														{
															"nativeSrc": "11444:20:18",
															"nodeType": "YulAssignment",
															"src": "11444:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11455:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11455:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11462:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11462:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11451:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11451:3:18"
																},
																"nativeSrc": "11451:13:18",
																"nodeType": "YulFunctionCall",
																"src": "11451:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11444:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11444:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11335:135:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11364:5:18",
														"nodeType": "YulTypedName",
														"src": "11364:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11374:3:18",
														"nodeType": "YulTypedName",
														"src": "11374:3:18",
														"type": ""
													}
												],
												"src": "11335:135:18"
											},
											{
												"body": {
													"nativeSrc": "11507:95:18",
													"nodeType": "YulBlock",
													"src": "11507:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11524:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11524:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11531:3:18",
																				"nodeType": "YulLiteral",
																				"src": "11531:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11536:10:18",
																				"nodeType": "YulLiteral",
																				"src": "11536:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11527:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11527:3:18"
																		},
																		"nativeSrc": "11527:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11527:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11517:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11517:6:18"
																},
																"nativeSrc": "11517:31:18",
																"nodeType": "YulFunctionCall",
																"src": "11517:31:18"
															},
															"nativeSrc": "11517:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "11517:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11564:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11564:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11567:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11567:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11557:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:18"
																},
																"nativeSrc": "11557:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11557:15:18"
															},
															"nativeSrc": "11557:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11557:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11588:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11588:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11591:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11591:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11581:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11581:6:18"
																},
																"nativeSrc": "11581:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11581:15:18"
															},
															"nativeSrc": "11581:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11581:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11475:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "11475:127:18"
											},
											{
												"body": {
													"nativeSrc": "11654:89:18",
													"nodeType": "YulBlock",
													"src": "11654:89:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11681:22:18",
																"nodeType": "YulBlock",
																"src": "11681:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11683:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11683:16:18"
																			},
																			"nativeSrc": "11683:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11683:18:18"
																		},
																		"nativeSrc": "11683:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11683:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11674:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11674:5:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11667:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:18"
																},
																"nativeSrc": "11667:13:18",
																"nodeType": "YulFunctionCall",
																"src": "11667:13:18"
															},
															"nativeSrc": "11664:39:18",
															"nodeType": "YulIf",
															"src": "11664:39:18"
														},
														{
															"nativeSrc": "11712:25:18",
															"nodeType": "YulAssignment",
															"src": "11712:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11723:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11723:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11734:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11734:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11730:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11730:3:18"
																		},
																		"nativeSrc": "11730:6:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11719:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:18"
																},
																"nativeSrc": "11719:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11719:18:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11712:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:18"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "11607:136:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11636:5:18",
														"nodeType": "YulTypedName",
														"src": "11636:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11646:3:18",
														"nodeType": "YulTypedName",
														"src": "11646:3:18",
														"type": ""
													}
												],
												"src": "11607:136:18"
											},
											{
												"body": {
													"nativeSrc": "11951:282:18",
													"nodeType": "YulBlock",
													"src": "11951:282:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11968:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11968:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11983:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11983:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11999:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11999:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12004:1:18",
																								"nodeType": "YulLiteral",
																								"src": "12004:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11995:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11995:3:18"
																						},
																						"nativeSrc": "11995:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11995:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12008:1:18",
																						"nodeType": "YulLiteral",
																						"src": "12008:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11991:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11991:3:18"
																				},
																				"nativeSrc": "11991:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11991:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11979:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11979:3:18"
																		},
																		"nativeSrc": "11979:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11979:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11961:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:18"
																},
																"nativeSrc": "11961:51:18",
																"nodeType": "YulFunctionCall",
																"src": "11961:51:18"
															},
															"nativeSrc": "11961:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "11961:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12032:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12032:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12043:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12043:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12028:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12028:3:18"
																		},
																		"nativeSrc": "12028:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12028:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12052:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12052:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12068:3:18",
																								"nodeType": "YulLiteral",
																								"src": "12068:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12073:1:18",
																								"nodeType": "YulLiteral",
																								"src": "12073:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12064:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "12064:3:18"
																						},
																						"nativeSrc": "12064:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "12064:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12077:1:18",
																						"nodeType": "YulLiteral",
																						"src": "12077:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12060:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12060:3:18"
																				},
																				"nativeSrc": "12060:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12060:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12048:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12048:3:18"
																		},
																		"nativeSrc": "12048:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12048:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12021:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12021:6:18"
																},
																"nativeSrc": "12021:60:18",
																"nodeType": "YulFunctionCall",
																"src": "12021:60:18"
															},
															"nativeSrc": "12021:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "12021:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12101:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12101:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12112:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12112:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12097:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:18"
																		},
																		"nativeSrc": "12097:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12097:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12117:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12090:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12090:6:18"
																},
																"nativeSrc": "12090:34:18",
																"nodeType": "YulFunctionCall",
																"src": "12090:34:18"
															},
															"nativeSrc": "12090:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "12090:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12144:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12144:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12155:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12155:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12140:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:18"
																		},
																		"nativeSrc": "12140:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12140:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12160:3:18",
																		"nodeType": "YulLiteral",
																		"src": "12160:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12133:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:18"
																},
																"nativeSrc": "12133:31:18",
																"nodeType": "YulFunctionCall",
																"src": "12133:31:18"
															},
															"nativeSrc": "12133:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "12133:31:18"
														},
														{
															"nativeSrc": "12173:54:18",
															"nodeType": "YulAssignment",
															"src": "12173:54:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12199:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12199:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12211:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12211:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12222:3:18",
																				"nodeType": "YulLiteral",
																				"src": "12222:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12207:3:18"
																		},
																		"nativeSrc": "12207:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12207:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12181:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "12181:17:18"
																},
																"nativeSrc": "12181:46:18",
																"nodeType": "YulFunctionCall",
																"src": "12181:46:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12173:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12173:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11748:485:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11896:9:18",
														"nodeType": "YulTypedName",
														"src": "11896:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11907:6:18",
														"nodeType": "YulTypedName",
														"src": "11907:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11915:6:18",
														"nodeType": "YulTypedName",
														"src": "11915:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11923:6:18",
														"nodeType": "YulTypedName",
														"src": "11923:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11931:6:18",
														"nodeType": "YulTypedName",
														"src": "11931:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11942:4:18",
														"nodeType": "YulTypedName",
														"src": "11942:4:18",
														"type": ""
													}
												],
												"src": "11748:485:18"
											},
											{
												"body": {
													"nativeSrc": "12318:169:18",
													"nodeType": "YulBlock",
													"src": "12318:169:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12364:16:18",
																"nodeType": "YulBlock",
																"src": "12364:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12373:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12373:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12376:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12376:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12366:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12366:6:18"
																			},
																			"nativeSrc": "12366:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12366:12:18"
																		},
																		"nativeSrc": "12366:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12366:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12339:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12339:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12348:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12348:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12335:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12335:3:18"
																		},
																		"nativeSrc": "12335:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12335:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12360:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12360:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12331:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12331:3:18"
																},
																"nativeSrc": "12331:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12331:32:18"
															},
															"nativeSrc": "12328:52:18",
															"nodeType": "YulIf",
															"src": "12328:52:18"
														},
														{
															"nativeSrc": "12389:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12389:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12408:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12408:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12402:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12402:5:18"
																},
																"nativeSrc": "12402:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12402:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12393:5:18",
																	"nodeType": "YulTypedName",
																	"src": "12393:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12451:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12451:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "12427:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "12427:23:18"
																},
																"nativeSrc": "12427:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12427:30:18"
															},
															"nativeSrc": "12427:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "12427:30:18"
														},
														{
															"nativeSrc": "12466:15:18",
															"nodeType": "YulAssignment",
															"src": "12466:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "12476:5:18",
																"nodeType": "YulIdentifier",
																"src": "12476:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12466:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12238:249:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12284:9:18",
														"nodeType": "YulTypedName",
														"src": "12284:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12295:7:18",
														"nodeType": "YulTypedName",
														"src": "12295:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12307:6:18",
														"nodeType": "YulTypedName",
														"src": "12307:6:18",
														"type": ""
													}
												],
												"src": "12238:249:18"
											},
											{
												"body": {
													"nativeSrc": "12679:309:18",
													"nodeType": "YulBlock",
													"src": "12679:309:18",
													"statements": [
														{
															"nativeSrc": "12689:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12689:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12709:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12709:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12703:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12703:5:18"
																},
																"nativeSrc": "12703:13:18",
																"nodeType": "YulFunctionCall",
																"src": "12703:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12693:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12693:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12764:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12764:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12772:4:18",
																				"nodeType": "YulLiteral",
																				"src": "12772:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12760:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:18"
																		},
																		"nativeSrc": "12760:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12760:17:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12779:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12779:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12784:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12784:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12725:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "12725:34:18"
																},
																"nativeSrc": "12725:66:18",
																"nodeType": "YulFunctionCall",
																"src": "12725:66:18"
															},
															"nativeSrc": "12725:66:18",
															"nodeType": "YulExpressionStatement",
															"src": "12725:66:18"
														},
														{
															"nativeSrc": "12800:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12800:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12817:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12817:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12822:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12822:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12813:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12813:3:18"
																},
																"nativeSrc": "12813:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12813:16:18"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "12804:5:18",
																	"nodeType": "YulTypedName",
																	"src": "12804:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12838:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12838:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12860:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12860:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12854:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12854:5:18"
																},
																"nativeSrc": "12854:13:18",
																"nodeType": "YulFunctionCall",
																"src": "12854:13:18"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "12842:8:18",
																	"nodeType": "YulTypedName",
																	"src": "12842:8:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12915:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12915:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12923:4:18",
																				"nodeType": "YulLiteral",
																				"src": "12923:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12911:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:18"
																		},
																		"nativeSrc": "12911:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12911:17:18"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "12930:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12930:5:18"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "12937:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "12937:8:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12876:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "12876:34:18"
																},
																"nativeSrc": "12876:70:18",
																"nodeType": "YulFunctionCall",
																"src": "12876:70:18"
															},
															"nativeSrc": "12876:70:18",
															"nodeType": "YulExpressionStatement",
															"src": "12876:70:18"
														},
														{
															"nativeSrc": "12955:27:18",
															"nodeType": "YulAssignment",
															"src": "12955:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "12966:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12966:5:18"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "12973:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "12973:8:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12962:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12962:3:18"
																},
																"nativeSrc": "12962:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12962:20:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12955:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12955:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12492:496:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12647:3:18",
														"nodeType": "YulTypedName",
														"src": "12647:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12652:6:18",
														"nodeType": "YulTypedName",
														"src": "12652:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12660:6:18",
														"nodeType": "YulTypedName",
														"src": "12660:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12671:3:18",
														"nodeType": "YulTypedName",
														"src": "12671:3:18",
														"type": ""
													}
												],
												"src": "12492:496:18"
											},
											{
												"body": {
													"nativeSrc": "13122:145:18",
													"nodeType": "YulBlock",
													"src": "13122:145:18",
													"statements": [
														{
															"nativeSrc": "13132:26:18",
															"nodeType": "YulAssignment",
															"src": "13132:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13144:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13144:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13155:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13155:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13140:3:18"
																},
																"nativeSrc": "13140:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13140:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13132:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13132:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13174:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13174:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13189:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13189:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13205:3:18",
																								"nodeType": "YulLiteral",
																								"src": "13205:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13210:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13210:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13201:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13201:3:18"
																						},
																						"nativeSrc": "13201:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13201:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13214:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13214:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13197:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13197:3:18"
																				},
																				"nativeSrc": "13197:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13197:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13185:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13185:3:18"
																		},
																		"nativeSrc": "13185:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13185:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13167:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:18"
																},
																"nativeSrc": "13167:51:18",
																"nodeType": "YulFunctionCall",
																"src": "13167:51:18"
															},
															"nativeSrc": "13167:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "13167:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13238:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13238:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13249:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13249:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13234:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13234:3:18"
																		},
																		"nativeSrc": "13234:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13234:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13254:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13254:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13227:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:18"
																},
																"nativeSrc": "13227:34:18",
																"nodeType": "YulFunctionCall",
																"src": "13227:34:18"
															},
															"nativeSrc": "13227:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "13227:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12993:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13083:9:18",
														"nodeType": "YulTypedName",
														"src": "13083:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13094:6:18",
														"nodeType": "YulTypedName",
														"src": "13094:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13102:6:18",
														"nodeType": "YulTypedName",
														"src": "13102:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13113:4:18",
														"nodeType": "YulTypedName",
														"src": "13113:4:18",
														"type": ""
													}
												],
												"src": "12993:274:18"
											},
											{
												"body": {
													"nativeSrc": "13304:95:18",
													"nodeType": "YulBlock",
													"src": "13304:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13321:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13321:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13328:3:18",
																				"nodeType": "YulLiteral",
																				"src": "13328:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13333:10:18",
																				"nodeType": "YulLiteral",
																				"src": "13333:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13324:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13324:3:18"
																		},
																		"nativeSrc": "13324:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13324:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13314:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13314:6:18"
																},
																"nativeSrc": "13314:31:18",
																"nodeType": "YulFunctionCall",
																"src": "13314:31:18"
															},
															"nativeSrc": "13314:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "13314:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13361:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13361:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13364:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13364:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13354:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13354:6:18"
																},
																"nativeSrc": "13354:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13354:15:18"
															},
															"nativeSrc": "13354:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13354:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13385:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13385:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13388:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13388:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13378:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13378:6:18"
																},
																"nativeSrc": "13378:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13378:15:18"
															},
															"nativeSrc": "13378:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13378:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13272:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "13272:127:18"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_string(value2, add(headStart, 160))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _1 := mload(srcPtr)\n            mstore(tail_2, mload(_1))\n            mstore(add(tail_2, 32), mload(add(_1, 32)))\n            let memberValue0 := mload(add(_1, 64))\n            mstore(add(tail_2, 64), 0xa0)\n            let tail_3 := abi_encode_string(memberValue0, add(tail_2, 0xa0))\n            mstore(add(tail_2, 0x60), mload(add(_1, 0x60)))\n            mstore(add(tail_2, 0x80), iszero(iszero(mload(add(_1, 0x80)))))\n            tail_2 := tail_3\n            srcPtr := add(srcPtr, 32)\n            pos := add(pos, 32)\n        }\n        tail := tail_2\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0857ca2ab96eb0bca607d99a40522e0bce8a8d7e5db4afb0608a9031d239c2f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are not authorized for minti\")\n        mstore(add(headStart, 96), \"ng land!!\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AD91345 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF1537686 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xFBBFFCB0 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AD91345 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x9A590427 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x695850FB GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x695850FB EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6E0CEE09 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x5D85EDA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x2295370A EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x23C PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x96D JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x211 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x23C PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH2 0x23C PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x18C4 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x23C PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x447 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x494 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x469 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x494 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x477 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x406 JUMP JUMPDEST PUSH2 0x4D2 DUP3 DUP3 CALLER PUSH2 0xCE9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x4FE SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x577 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x577 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP4 DUP4 CALLER PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x63C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0xCB0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420617574686F72697A656420666F72206D696E7469 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6E67206C616E642121 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x6CB PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D6 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x703 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE CALLER DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP3 KECCAK256 SLOAD SWAP1 DUP3 ADD SWAP1 PUSH2 0x740 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x7C3 CALLER DUP3 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x7CD DUP2 DUP4 PUSH2 0xE09 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x7E8 DUP4 PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x822 SWAP1 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8F5 JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x860 JUMPI PUSH2 0x860 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SUB PUSH2 0x8ED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 SLOAD DUP6 MSTORE DUP1 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SLOAD SWAP5 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 PUSH2 0x8AF DUP5 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x8E7 DUP4 PUSH2 0x1BE3 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x844 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x91A DUP4 PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x975 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x97F PUSH1 0x0 PUSH2 0xE86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 DUP3 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x41B SWAP1 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x9A3 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9CC PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4D2 CALLER DUP4 DUP4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0xA06 DUP5 DUP5 DUP5 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x61B DUP5 DUP5 DUP5 DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x406 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA80 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAD2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA9E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0xB2F DUP5 PUSH1 0x1 PUSH2 0x1A9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0xB PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xB82 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC32 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xAEB JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC55 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0xC88 DUP2 PUSH2 0xE86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x406 JUMPI POP PUSH2 0x406 DUP3 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x63C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 DUP2 DUP5 DUP7 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD40 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD90 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4D2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x136B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE21 DUP3 DUP3 PUSH2 0x1AF5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFB9 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFF4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFF1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x105D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10AB DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x10C5 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F1 SWAP1 PUSH2 0x1A4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1113 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x113E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1121 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x115C PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x116E JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x11A0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1188 SWAP3 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A9 DUP5 PUSH2 0x1382 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x11E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x406 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x406 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1215 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x0 PUSH2 0x1225 DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1251 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1264 JUMPI POP PUSH2 0x1262 DUP2 DUP5 PUSH2 0xA1D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D5 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1312 DUP4 DUP4 DUP4 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x63C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x1375 DUP4 DUP4 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x63C PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x138D DUP3 PUSH2 0xCB0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13A5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13F0 JUMP JUMPDEST DUP1 PUSH2 0x13CF DUP5 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11A9 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1431 JUMPI POP PUSH2 0x1431 DUP5 DUP5 PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH2 0x11A9 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1492 DUP4 DUP4 PUSH1 0x0 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14CC DUP4 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14EC JUMPI PUSH2 0x14EC PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1516 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1520 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1591 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15BD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15DB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x15F3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1607 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1619 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x406 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13F0 DUP2 PUSH2 0x162A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F0 DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16AF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1697 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x16D0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172C DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1759 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1790 DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH2 0x179E PUSH1 0x20 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17E0 PUSH2 0x17AF JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x180F JUMPI PUSH2 0x180F PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1827 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A9 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A6 DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x18BB PUSH1 0x40 DUP6 ADD PUSH2 0x165D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E0 DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191F DUP6 PUSH2 0x165D JUMP JUMPDEST SWAP4 POP PUSH2 0x192D PUSH1 0x20 DUP7 ADD PUSH2 0x165D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1970 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1998 DUP4 PUSH2 0x165D JUMP JUMPDEST SWAP2 POP PUSH2 0x19A6 PUSH1 0x20 DUP5 ADD PUSH2 0x165D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP1 DUP5 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP7 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x3F NOT DUP8 DUP7 SUB ADD DUP5 MSTORE DUP2 MLOAD DUP1 MLOAD DUP7 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1A11 PUSH1 0xA0 DUP9 ADD DUP3 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x60 DUP4 DUP2 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 SWAP1 SWAP8 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x19D7 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A5F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0x1A85 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x63C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AD5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AE1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0F PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1B1D DUP5 SLOAD PUSH2 0x1A4B JUMP JUMPDEST DUP5 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1B3F JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B87 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1B67 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1BA5 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1BC6 JUMPI PUSH2 0x1BC6 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BF2 JUMPI PUSH2 0x1BF2 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C2D SWAP1 DUP4 ADD DUP5 PUSH2 0x16B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13F0 DUP2 PUSH2 0x162A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C66 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1694 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1C7A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1694 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID MSTORE CALLCODE SWAP10 PUSH3 0xE722FD CREATE2 LOG1 PUSH20 0xA6F90335A94DB26DEF1F729E2DDE59B79E4B4C32 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "585:5046:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5424:205;;;;;;:::i;:::-;;:::i;:::-;;;565:14:18;;558:22;540:41;;528:2;513:18;5424:205:17;;;;;;;;1192:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1107:25:18;;;1095:2;1080:18;1192:37:17;961:177:18;2366:89:5;;;:::i;:::-;;;;;;;:::i;3498:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2294:32:18;;;2276:51;;2264:2;2249:18;3498:154:5;2130:203:18;3324:113:5;;;;;;:::i;:::-;;:::i;:::-;;1284:38:17;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;4144:578:5:-;;;;;;:::i;:::-;;:::i;4788:132::-;;;;;;:::i;:::-;;:::i;2186:118::-;;;;;;:::i;:::-;;:::i;2478:494:17:-;;;;;;:::i;:::-;;:::i;4046:428::-;;;;;;:::i;:::-;;:::i;1921:208:5:-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;4650:113:17:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2519:93:5;;;:::i;2195:108:17:-;;;;;;:::i;:::-;;:::i;1907:105::-;;;;;;:::i;:::-;;:::i;3719:144:5:-;;;;;;:::i;:::-;;:::i;4986:208::-;;;;;;:::i;:::-;;:::i;4973:189:17:-;;;;;;:::i;:::-;;:::i;1368:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3929:153:5;;;;;;:::i;:::-;;:::i;3088:322:17:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1075:54:17:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5424:205;5559:4;5586:36;5610:11;5586:23;:36::i;:::-;5579:43;5424:205;-1:-1:-1;;5424:205:17:o;2366:89:5:-;2411:13;2443:5;2436:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:89;:::o;3498:154::-;3565:7;3584:22;3598:7;3584:13;:22::i;:::-;-1:-1:-1;6009:7:5;6035:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6035:24:5;3624:21;5939:127;3324:113;3395:35;3404:2;3408:7;735:10:10;3395:8:5;:35::i;:::-;3324:113;;:::o;1284:38:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1284:38:17;;;;;;;;;;;;;;;-1:-1:-1;1284:38:17;:::o;4144:578:5:-;-1:-1:-1;;;;;4238:16:5;;4234:87;;4277:33;;-1:-1:-1;;;4277:33:5;;4307:1;4277:33;;;2276:51:18;2249:18;;4277:33:5;;;;;;;;4234:87;4539:21;4563:34;4571:2;4575:7;735:10:10;4563:7:5;:34::i;:::-;4539:58;;4628:4;-1:-1:-1;;;;;4611:21:5;:13;-1:-1:-1;;;;;4611:21:5;;4607:109;;4655:50;;-1:-1:-1;;;4655:50:5;;-1:-1:-1;;;;;8383:32:18;;;4655:50:5;;;8365:51:18;8432:18;;;8425:34;;;8495:32;;8475:18;;;8468:60;8338:18;;4655:50:5;8163:371:18;4607:109:5;4224:498;4144:578;;;:::o;4788:132::-;4874:39;4891:4;4897:2;4901:7;4874:39;;;;;;;;;;;;:16;:39::i;:::-;4788:132;;;:::o;2186:118::-;2249:7;2275:22;2289:7;2275:13;:22::i;2478:494:17:-;2552:10;2540:23;;;;:11;:23;;;;;;;;2532:77;;;;-1:-1:-1;;;2532:77:17;;8741:2:18;2532:77:17;;;8723:21:18;8780:2;8760:18;;;8753:30;8819:34;8799:18;;;8792:62;-1:-1:-1;;;8870:18:18;;;8863:39;8919:19;;2532:77:17;8539:405:18;2532:77:17;2619:20;:8;1032:19:11;;1050:1;1032:19;;;945:123;2619:20:17;2651:17;2671:18;:8;918:14:11;;827:112;2671:18:17;2707:10;2701:17;;;;:5;:17;;;;;;;;2719:5;:17;;;;;;2651:38;;-1:-1:-1;2651:38:17;;2701:17;;;2719:21;;2739:1;2719:21;:::i;:::-;2701:40;;;;;;;;;;;;;;-1:-1:-1;2701:40:17;;;:52;;;;2787:65;;;;;;;;;;2808:10;2802:17;;:5;:17;;;;;2787:65;;;;2802:21;;2822:1;2802:21;:::i;:::-;2787:65;;;;2825:3;2787:65;;;;2830:15;2787:65;;;;2847:4;2787:65;;;;;2763:10;:21;2774:9;2763:21;;;;;;;;;;;:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2763:89:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2763:89:17;;;;;;;;;;2862:32;2872:10;2884:9;2862;:32::i;:::-;2906:28;2919:9;2930:3;2906:12;:28::i;:::-;2951:10;2945:17;;;;:5;:17;;;;;:19;;;;;;:::i;:::-;;;;;;2522:450;2478:494;:::o;4046:428::-;-1:-1:-1;;;;;4129:10:17;;;;;;:5;:10;;;;;;;;4140:5;:10;;;;;;4158:8;;4129:10;4140:14;;4153:1;4140:14;:::i;:::-;4129:26;;;;;;;;;;;:37;;;;4176:20;4200:19;4211:7;4200:10;:19::i;:::-;4176:43;;4233:6;4229:217;4248:7;:14;4244:1;:18;4229:217;;;4308:8;4286:7;4294:1;4286:10;;;;;;;;:::i;:::-;;;;;;;:18;;;:30;4283:153;;-1:-1:-1;;;;;4357:14:17;;;;;;:5;:14;;;;;;;;4372:5;:14;;;;;;4357:30;;;;;;;;;4335:14;;;;;;4357;4350:3;:1;4352;4350:3;:::i;:::-;4335:19;;;;;;;;;;;;;;-1:-1:-1;4335:19:17;;;:52;;;;-1:-1:-1;;;;;4405:14:17;;;;:5;:14;;;;;:16;;;;;;:::i;:::-;;;;;;4283:153;4265:3;;4229:217;;;-1:-1:-1;;;;;;4455:10:17;;;;;;:5;:10;;;;;:12;;;;;;:::i;:::-;;;;;;4119:355;4046:428;;;:::o;1921:208:5:-;1984:7;-1:-1:-1;;;;;2007:19:5;;2003:87;;2049:30;;-1:-1:-1;;;2049:30:5;;2076:1;2049:30;;;2276:51:18;2249:18;;2049:30:5;2130:203:18;2003:87:5;-1:-1:-1;;;;;;2106:16:5;;;;;:9;:16;;;;;;;1921:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4650:113:17:-;4707:13;4739:17;4748:7;4739:8;:17::i;2519:93:5:-;2566:13;2598:7;2591:14;;;;;:::i;2195:108:17:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2264:24:17::1;2291:5;2264:24:::0;;;:11:::1;:24;::::0;;;;:32;;-1:-1:-1;;2264:32:17::1;::::0;;2195:108::o;1907:105::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1974:24:17::1;;::::0;;;:11:::1;:24;::::0;;;;:31;;-1:-1:-1;;1974:31:17::1;2001:4;1974:31;::::0;;1907:105::o;3719:144:5:-;3804:52;735:10:10;3837:8:5;3847;3804:18;:52::i;4986:208::-;5099:31;5112:4;5118:2;5122:7;5099:12;:31::i;:::-;5140:47;5163:4;5169:2;5173:7;5182:4;5140:22;:47::i;4973:189:17:-;5096:13;5132:23;5147:7;5132:14;:23::i;3929:153:5:-;-1:-1:-1;;;;;4040:25:5;;;4017:4;4040:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3929:153::o;3088:322:17:-;-1:-1:-1;;;;;3202:14:17;;3169:20;3202:14;;;:5;:14;;;;;;3145:12;;3169:20;3192:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3192:25:17;;;;;;;;;;;;;;;;;3169:48;;3234:6;3229:151;-1:-1:-1;;;;;3250:14:17;;;;;;:5;:14;;;;;;3246:18;;3229:151;;;-1:-1:-1;;;;;3301:14:17;;3286:12;3301:14;;;:5;:14;;;;;3286:12;3316:5;:1;3320;3316:5;:::i;:::-;3301:21;;;;;;;;;;;;3286:36;;3349:10;:19;3360:7;3349:19;;;;;;;;;;;3336:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3336:32:17;;;-1:-1:-1;;3336:32:17;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;3344:1;;3336:10;;;;;;:::i;:::-;;;;;;;;;;:32;-1:-1:-1;3266:3:17;;3229:151;;;-1:-1:-1;3396:7:17;3088:322;-1:-1:-1;;3088:322:17:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2276:51:18::0;2249:18;;2672:31:0::1;2130:203:18::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;937:207:8:-;1039:4;-1:-1:-1;;;;;;1062:35:8;;-1:-1:-1;;;1062:35:8;;:75;;;1101:36;1125:11;1101:23;:36::i;16172:241:5:-;16235:7;5800:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5800:16:5;;16297:88;;16343:31;;-1:-1:-1;;;16343:31:5;;;;;1107:25:18;;;1080:18;;16343:31:5;961:177:18;14452:120:5;14532:33;14541:2;14545:7;14554:4;14560;14532:8;:33::i;8839:828::-;8925:7;5800:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5800:16:5;;;;9036:18;;;9032:86;;9070:37;9087:4;9093;9099:7;9070:16;:37::i;:::-;-1:-1:-1;;;;;9162:18:5;;;9158:273;;9278:48;9295:1;9299:7;9316:1;9320:5;9278:8;:48::i;:::-;-1:-1:-1;;;;;9369:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9369:20:5;;;9158:273;-1:-1:-1;;;;;9445:16:5;;;9441:123;;-1:-1:-1;;;;;9505:13:5;;;;;;:9;:13;;;;;:18;;9522:1;9505:18;;;9441:123;9574:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9574:21:5;-1:-1:-1;;;;;9574:21:5;;;;;;;;;9611:27;;9574:16;;9611:27;;;;;;;9656:4;8839:828;-1:-1:-1;;;;8839:828:5:o;10667:100::-;10734:26;10744:2;10748:7;10734:26;;;;;;;;;;;;:9;:26::i;1922:167:8:-;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:8;;1107:25:18;;;2059:23:8;;1095:2:18;1080:18;2059:23:8;;;;;;;1922:167;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:10;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:10;1901:40:0;;;2276:51:18;2249:18;;1901:40:0;2130:203:18;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15625:312:5:-;-1:-1:-1;;;;;15732:22:5;;15728:91;;15777:31;;-1:-1:-1;;;15777:31:5;;-1:-1:-1;;;;;2294:32:18;;15777:31:5;;;2276:51:18;2249:18;;15777:31:5;2130:203:18;15728:91:5;-1:-1:-1;;;;;15828:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15828:46:5;;;;;;;;;;15889:41;;540::18;;;15889::5;;513:18:18;15889:41:5;;;;;;;15625:312;;;:::o;16952:782::-;-1:-1:-1;;;;;17068:14:5;;;:18;17064:664;;17106:71;;-1:-1:-1;;;17106:71:5;;-1:-1:-1;;;;;17106:36:5;;;;;:71;;735:10:10;;17157:4:5;;17163:7;;17172:4;;17106:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17106:71:5;;;;;;;;-1:-1:-1;;17106:71:5;;;;;;;;;;;;:::i;:::-;;;17102:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17415:6;:13;17432:1;17415:18;17411:293;;17464:25;;-1:-1:-1;;;17464:25:5;;-1:-1:-1;;;;;2294:32:18;;17464:25:5;;;2276:51:18;2249:18;;17464:25:5;2130:203:18;17411:293:5;17656:6;17650:13;17641:6;17637:2;17633:15;17626:38;17102:616;-1:-1:-1;;;;;;17224:51:5;;-1:-1:-1;;;17224:51:5;17220:130;;17306:25;;-1:-1:-1;;;17306:25:5;;-1:-1:-1;;;;;2294:32:18;;17306:25:5;;;2276:51:18;2249:18;;17306:25:5;2130:203:18;17220:130:5;17178:186;16952:782;;;;:::o;1210:593:8:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:8;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3251:9:5;;;;;;;;;-1:-1:-1;3251:9:5;;;3175:92;1417:10:8;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:8;1210:593;-1:-1:-1;;1210:593:8:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:8:o;1562:300:5:-;1664:4;-1:-1:-1;;;;;;1699:40:5;;-1:-1:-1;;;1699:40:5;;:104;;-1:-1:-1;;;;;;;1755:48:5;;-1:-1:-1;;;1755:48:5;1699:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:13;;;1819:36:5;762:146:13;14754:662:5;14914:9;:31;;;-1:-1:-1;;;;;;14927:18:5;;;;14914:31;14910:460;;;14961:13;14977:22;14991:7;14977:13;:22::i;:::-;14961:38;-1:-1:-1;;;;;;15127:18:5;;;;;;:35;;;15158:4;-1:-1:-1;;;;;15149:13:5;:5;-1:-1:-1;;;;;15149:13:5;;;15127:35;:69;;;;;15167:29;15184:5;15191:4;15167:16;:29::i;:::-;15166:30;15127:69;15123:142;;;15223:27;;-1:-1:-1;;;15223:27:5;;-1:-1:-1;;;;;2294:32:18;;15223:27:5;;;2276:51:18;2249:18;;15223:27:5;2130:203:18;15123:142:5;15283:9;15279:81;;;15337:7;15333:2;-1:-1:-1;;;;;15317:28:5;15326:5;-1:-1:-1;;;;;15317:28:5;;;;;;;;;;;15279:81;14947:423;14910:460;-1:-1:-1;;15380:24:5;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15380:29:5;-1:-1:-1;;;;;15380:29:5;;;;;;;;;;14754:662::o;7083:368::-;7195:38;7209:5;7216:7;7225;7195:13;:38::i;:::-;7190:255;;-1:-1:-1;;;;;7253:19:5;;7249:186;;7299:31;;-1:-1:-1;;;7299:31:5;;;;;1107:25:18;;;1080:18;;7299:31:5;961:177:18;7249:186:5;7376:44;;-1:-1:-1;;;7376:44:5;;-1:-1:-1;;;;;13185:32:18;;7376:44:5;;;13167:51:18;13234:18;;;13227:34;;;13140:18;;7376:44:5;12993:274:18;10988:182:5;11082:18;11088:2;11092:7;11082:5;:18::i;:::-;11110:53;11141:1;11145:2;11149:7;11158:4;11110:22;:53::i;2678:255::-;2742:13;2767:22;2781:7;2767:13;:22::i;:::-;;2800:21;2824:10;3251:9;;;;;;;;;-1:-1:-1;3251:9:5;;;3175:92;2824:10;2800:34;;2875:1;2857:7;2851:21;:25;:75;;;;;;;;;;;;;;;;;2893:7;2902:18;:7;:16;:18::i;:::-;2879:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2851:75;2844:82;2678:255;-1:-1:-1;;;2678:255:5:o;6377:272::-;6480:4;-1:-1:-1;;;;;6515:21:5;;;;;;:127;;;6562:7;-1:-1:-1;;;;;6553:16:5;:5;-1:-1:-1;;;;;6553:16:5;;:52;;;;6573:32;6590:5;6597:7;6573:16;:32::i;:::-;6553:88;;;-1:-1:-1;;6009:7:5;6035:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6035:24:5;;;6609:32;;;;6496:146;-1:-1:-1;6377:272:5:o;9989:327::-;-1:-1:-1;;;;;10056:16:5;;10052:87;;10095:33;;-1:-1:-1;;;10095:33:5;;10125:1;10095:33;;;2276:51:18;2249:18;;10095:33:5;2130:203:18;10052:87:5;10148:21;10172:32;10180:2;10184:7;10201:1;10172:7;:32::i;:::-;10148:56;-1:-1:-1;;;;;;10218:27:5;;;10214:96;;10268:31;;-1:-1:-1;;;10268:31:5;;10296:1;10268:31;;;2276:51:18;2249:18;;10268:31:5;2130:203:18;637:698:12;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:12;-1:-1:-1;794:41:12;-1:-1:-1;955:28:12;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:12;-1:-1:-1;;;1175:2:12;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:12;1010:282;1256:21;-1:-1:-1;1312:6:12;637:698;-1:-1:-1;;;637:698:12:o;12214:916:15:-;12267:7;;-1:-1:-1;;;12342:17:15;;12338:103;;-1:-1:-1;;;12379:17:15;;;-1:-1:-1;12424:2:15;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:15;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:15;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:15;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:15;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:15;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:15:o;14:131:18:-;-1:-1:-1;;;;;;88:32:18;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:173::-;660:20;;-1:-1:-1;;;;;709:31:18;;699:42;;689:70;;755:1;752;745:12;689:70;592:173;;;:::o;770:186::-;829:6;882:2;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;921:29;940:9;921:29;:::i;1143:250::-;1228:1;1238:113;1252:6;1249:1;1246:13;1238:113;;;1328:11;;;1322:18;1309:11;;;1302:39;1274:2;1267:10;1238:113;;;-1:-1:-1;;1385:1:18;1367:16;;1360:27;1143:250::o;1398:271::-;1440:3;1478:5;1472:12;1505:6;1500:3;1493:19;1521:76;1590:6;1583:4;1578:3;1574:14;1567:4;1560:5;1556:16;1521:76;:::i;:::-;1651:2;1630:15;-1:-1:-1;;1626:29:18;1617:39;;;;1658:4;1613:50;;1398:271;-1:-1:-1;;1398:271:18:o;1674:220::-;1823:2;1812:9;1805:21;1786:4;1843:45;1884:2;1873:9;1869:18;1861:6;1843:45;:::i;1899:226::-;1958:6;2011:2;1999:9;1990:7;1986:23;1982:32;1979:52;;;2027:1;2024;2017:12;1979:52;-1:-1:-1;2072:23:18;;1899:226;-1:-1:-1;1899:226:18:o;2338:300::-;2406:6;2414;2467:2;2455:9;2446:7;2442:23;2438:32;2435:52;;;2483:1;2480;2473:12;2435:52;2506:29;2525:9;2506:29;:::i;:::-;2496:39;2604:2;2589:18;;;;2576:32;;-1:-1:-1;;;2338:300:18:o;2643:517::-;2898:6;2887:9;2880:25;2941:6;2936:2;2925:9;2921:18;2914:34;2984:3;2979:2;2968:9;2964:18;2957:31;2861:4;3005:46;3046:3;3035:9;3031:19;3023:6;3005:46;:::i;:::-;3082:2;3067:18;;3060:34;;;;-1:-1:-1;3138:14:18;;3131:22;3125:3;3110:19;;;3103:51;2997:54;2643:517;-1:-1:-1;;;2643:517:18:o;3165:374::-;3242:6;3250;3258;3311:2;3299:9;3290:7;3286:23;3282:32;3279:52;;;3327:1;3324;3317:12;3279:52;3350:29;3369:9;3350:29;:::i;:::-;3340:39;;3398:38;3432:2;3421:9;3417:18;3398:38;:::i;:::-;3165:374;;3388:48;;-1:-1:-1;;;3505:2:18;3490:18;;;;3477:32;;3165:374::o;3544:127::-;3605:10;3600:3;3596:20;3593:1;3586:31;3636:4;3633:1;3626:15;3660:4;3657:1;3650:15;3676:716;3741:5;3773:1;3797:18;3789:6;3786:30;3783:56;;;3819:18;;:::i;:::-;-1:-1:-1;3974:2:18;3968:9;-1:-1:-1;;3887:2:18;3866:15;;3862:29;;4032:2;4020:15;4016:29;4004:42;;4097:22;;;4076:18;4061:34;;4058:62;4055:88;;;4123:18;;:::i;:::-;4159:2;4152:22;4207;;;4192:6;-1:-1:-1;4192:6:18;4244:16;;;4241:25;-1:-1:-1;4238:45:18;;;4279:1;4276;4269:12;4238:45;4329:6;4324:3;4317:4;4309:6;4305:17;4292:44;4384:1;4377:4;4368:6;4360;4356:19;4352:30;4345:41;;3676:716;;;;;:::o;4397:451::-;4466:6;4519:2;4507:9;4498:7;4494:23;4490:32;4487:52;;;4535:1;4532;4525:12;4487:52;4575:9;4562:23;4608:18;4600:6;4597:30;4594:50;;;4640:1;4637;4630:12;4594:50;4663:22;;4716:4;4708:13;;4704:27;-1:-1:-1;4694:55:18;;4745:1;4742;4735:12;4694:55;4768:74;4834:7;4829:2;4816:16;4811:2;4807;4803:11;4768:74;:::i;4853:374::-;4930:6;4938;4946;4999:2;4987:9;4978:7;4974:23;4970:32;4967:52;;;5015:1;5012;5005:12;4967:52;5038:29;5057:9;5038:29;:::i;:::-;5028:39;-1:-1:-1;5136:2:18;5121:18;;5108:32;;-1:-1:-1;5183:38:18;5217:2;5202:18;;5183:38;:::i;:::-;5173:48;;4853:374;;;;;:::o;5232:347::-;5297:6;5305;5358:2;5346:9;5337:7;5333:23;5329:32;5326:52;;;5374:1;5371;5364:12;5326:52;5397:29;5416:9;5397:29;:::i;:::-;5387:39;;5476:2;5465:9;5461:18;5448:32;5523:5;5516:13;5509:21;5502:5;5499:32;5489:60;;5545:1;5542;5535:12;5489:60;5568:5;5558:15;;;5232:347;;;;;:::o;5584:713::-;5679:6;5687;5695;5703;5756:3;5744:9;5735:7;5731:23;5727:33;5724:53;;;5773:1;5770;5763:12;5724:53;5796:29;5815:9;5796:29;:::i;:::-;5786:39;;5844:38;5878:2;5867:9;5863:18;5844:38;:::i;:::-;5834:48;-1:-1:-1;5951:2:18;5936:18;;5923:32;;-1:-1:-1;6030:2:18;6015:18;;6002:32;6057:18;6046:30;;6043:50;;;6089:1;6086;6079:12;6043:50;6112:22;;6165:4;6157:13;;6153:27;-1:-1:-1;6143:55:18;;6194:1;6191;6184:12;6143:55;6217:74;6283:7;6278:2;6265:16;6260:2;6256;6252:11;6217:74;:::i;:::-;6207:84;;;5584:713;;;;;;;:::o;6302:260::-;6370:6;6378;6431:2;6419:9;6410:7;6406:23;6402:32;6399:52;;;6447:1;6444;6437:12;6399:52;6470:29;6489:9;6470:29;:::i;:::-;6460:39;;6518:38;6552:2;6541:9;6537:18;6518:38;:::i;:::-;6508:48;;6302:260;;;;;:::o;6567:1206::-;6751:4;6799:2;6788:9;6784:18;6829:2;6818:9;6811:21;6852:6;6887;6881:13;6918:6;6910;6903:22;6956:2;6945:9;6941:18;6934:25;;7018:2;7008:6;7005:1;7001:14;6990:9;6986:30;6982:39;6968:53;;7056:2;7048:6;7044:15;7077:1;7087:657;7101:6;7098:1;7095:13;7087:657;;;7194:2;7190:7;7178:9;7170:6;7166:22;7162:36;7157:3;7150:49;7228:6;7222:13;7269:2;7263:9;7255:6;7248:25;7324:2;7320;7316:11;7310:18;7305:2;7297:6;7293:15;7286:43;7376:2;7372;7368:11;7362:18;7417:4;7412:2;7404:6;7400:15;7393:29;7449:50;7493:4;7485:6;7481:17;7467:12;7449:50;:::i;:::-;7552:4;7544:13;;;7538:20;7519:17;;;7512:47;7626:4;7618:13;;;7612:20;7605:28;7598:36;7579:17;;;;7572:63;;;;-1:-1:-1;7699:2:18;7722:12;;;;7687:15;;;;;7123:1;7116:9;7087:657;;;-1:-1:-1;7761:6:18;;6567:1206;-1:-1:-1;;;;;;6567:1206:18:o;7778:380::-;7857:1;7853:12;;;;7900;;;7921:61;;7975:4;7967:6;7963:17;7953:27;;7921:61;8028:2;8020:6;8017:14;7997:18;7994:38;7991:161;;8074:10;8069:3;8065:20;8062:1;8055:31;8109:4;8106:1;8099:15;8137:4;8134:1;8127:15;7991:161;;7778:380;;;:::o;8949:127::-;9010:10;9005:3;9001:20;8998:1;8991:31;9041:4;9038:1;9031:15;9065:4;9062:1;9055:15;9081:125;9146:9;;;9167:10;;;9164:36;;;9180:18;;:::i;9337:518::-;9439:2;9434:3;9431:11;9428:421;;;9475:5;9472:1;9465:16;9519:4;9516:1;9506:18;9589:2;9577:10;9573:19;9570:1;9566:27;9560:4;9556:38;9625:4;9613:10;9610:20;9607:47;;;-1:-1:-1;9648:4:18;9607:47;9703:2;9698:3;9694:12;9691:1;9687:20;9681:4;9677:31;9667:41;;9758:81;9776:2;9769:5;9766:13;9758:81;;;9835:1;9821:16;;9802:1;9791:13;9758:81;;10031:1299;10157:3;10151:10;10184:18;10176:6;10173:30;10170:56;;;10206:18;;:::i;:::-;10235:97;10325:6;10285:38;10317:4;10311:11;10285:38;:::i;:::-;10279:4;10235:97;:::i;:::-;10381:4;10412:2;10401:14;;10429:1;10424:649;;;;11117:1;11134:6;11131:89;;;-1:-1:-1;11186:19:18;;;11180:26;11131:89;-1:-1:-1;;9988:1:18;9984:11;;;9980:24;9976:29;9966:40;10012:1;10008:11;;;9963:57;11233:81;;10394:930;;10424:649;9284:1;9277:14;;;9321:4;9308:18;;-1:-1:-1;;10460:20:18;;;10578:222;10592:7;10589:1;10586:14;10578:222;;;10674:19;;;10668:26;10653:42;;10781:4;10766:20;;;;10734:1;10722:14;;;;10608:12;10578:222;;;10582:3;10828:6;10819:7;10816:19;10813:201;;;10889:19;;;10883:26;-1:-1:-1;;10972:1:18;10968:14;;;10984:3;10964:24;10960:37;10956:42;10941:58;10926:74;;10813:201;-1:-1:-1;;;;11060:1:18;11044:14;;;11040:22;11027:36;;-1:-1:-1;10031:1299:18:o;11335:135::-;11374:3;11395:17;;;11392:43;;11415:18;;:::i;:::-;-1:-1:-1;11462:1:18;11451:13;;11335:135::o;11475:127::-;11536:10;11531:3;11527:20;11524:1;11517:31;11567:4;11564:1;11557:15;11591:4;11588:1;11581:15;11607:136;11646:3;11674:5;11664:39;;11683:18;;:::i;:::-;-1:-1:-1;;;11719:18:18;;11607:136::o;11748:485::-;-1:-1:-1;;;;;11979:32:18;;;11961:51;;12048:32;;12043:2;12028:18;;12021:60;12112:2;12097:18;;12090:34;;;12160:3;12155:2;12140:18;;12133:31;;;-1:-1:-1;;12181:46:18;;12207:19;;12199:6;12181:46;:::i;:::-;12173:54;11748:485;-1:-1:-1;;;;;;11748:485:18:o;12238:249::-;12307:6;12360:2;12348:9;12339:7;12335:23;12331:32;12328:52;;;12376:1;12373;12366:12;12328:52;12408:9;12402:16;12427:30;12451:5;12427:30;:::i;12492:496::-;12671:3;12709:6;12703:13;12725:66;12784:6;12779:3;12772:4;12764:6;12760:17;12725:66;:::i;:::-;12854:13;;12813:16;;;;12876:70;12854:13;12813:16;12923:4;12911:17;;12876:70;:::i;:::-;12962:20;;12492:496;-1:-1:-1;;;;12492:496:18:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1470600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NftId(address,uint256)": "2722",
								"NftMinting(uint256)": "infinite",
								"approve(address,uint256)": "31559",
								"balanceOf(address)": "2678",
								"count(address)": "2565",
								"getApproved(uint256)": "infinite",
								"getTokenId(address)": "infinite",
								"getTokenUri(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2376",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26792",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28424",
								"unwhitelist(address)": "26857",
								"updateTokenId(address,uint256,address)": "infinite",
								"whitelist(address)": "26885",
								"whitelisted(address)": "2609"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "CODESIZE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSHSIZE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1657,
									"end": 1744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "tag",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1735,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C616E6473"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "13185B99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1453,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1448,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1471,
									"end": 1478,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1481,
									"end": 1488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1478,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1471,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1657,
									"end": 1744,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 18,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 18,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 5631,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204652f29962e722fdf5a173a6f90335a94db26def1f729e2dde59b79e4b4c32a064736f6c634300081a0033",
									".code": [
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "8AD91345"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "F1537686"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "FBBFFCB0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "D936547E"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "8AD91345"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "9A590427"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "9B19251A"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "695850FB"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "695850FB"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "6E0CEE09"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "5D85EDA"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "2295370A"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 585,
											"end": 5631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 5424,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 5424,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1192,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1192,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 2478,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 2478,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 4046,
											"end": 4474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 4046,
											"end": 4474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 4650,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 4650,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2519,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 2195,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2195,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1907,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3719,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3719,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4986,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4986,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 4973,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 4973,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1368,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1411,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 3088,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 3088,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 3088,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 1075,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1129,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5559,
											"end": 5563,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 5610,
											"end": 5621,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5586,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 5586,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5586,
											"end": 5622,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 5586,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5579,
											"end": 5622,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5424,
											"end": 5629,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5424,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2443,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2436,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2436,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3584,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 6016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5939,
											"end": 6066,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3404,
											"end": 3406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3395,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1284,
											"end": 1322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 4563,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4632,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8415,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8383,
											"end": 8415,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8383,
											"end": 8415,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8416,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8425,
											"end": 8459,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8425,
											"end": 8459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8425,
											"end": 8459,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8495,
											"end": 8527,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8495,
											"end": 8527,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8475,
											"end": 8493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8468,
											"end": 8528,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8163,
											"end": 8534,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4874,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2275,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2552,
											"end": 2562,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2551,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 8743,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8723,
											"end": 8744,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8780,
											"end": 8782,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8753,
											"end": 8783,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8819,
											"end": 8853,
											"name": "PUSH",
											"source": 18,
											"value": "596F7520617265206E6F7420617574686F72697A656420666F72206D696E7469"
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8792,
											"end": 8854,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E67206C616E642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8870,
											"end": 8888,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8870,
											"end": 8888,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8870,
											"end": 8888,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8863,
											"end": 8902,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8919,
											"end": 8938,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8919,
											"end": 8938,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 8539,
											"end": 8944,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 2532,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2619,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2619,
											"end": 2627,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2619,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2619,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2651,
											"end": 2668,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2671,
											"end": 2679,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2707,
											"end": 2717,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2724,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2736,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2651,
											"end": 2689,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2651,
											"end": 2689,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2689,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2651,
											"end": 2689,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2718,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 2719,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2741,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2753,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2753,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2701,
											"end": 2753,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2808,
											"end": 2818,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2807,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2819,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 2802,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2802,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2787,
											"end": 2852,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2773,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2784,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2763,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2852,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2862,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 2872,
											"end": 2882,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2862,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 2862,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2862,
											"end": 2894,
											"name": "tag",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 2862,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2906,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 2906,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2951,
											"end": 2961,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 2945,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2964,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2522,
											"end": 2972,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2478,
											"end": 2972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4134,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4145,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4166,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 4140,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4129,
											"end": 4155,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4166,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4166,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4166,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4166,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 4211,
											"end": 4218,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 4200,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 4200,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4176,
											"end": 4219,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4176,
											"end": 4219,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4248,
											"end": 4262,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4308,
											"end": 4316,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 4286,
											"end": 4296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4283,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 4283,
											"end": 4436,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4362,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4386,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4387,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4349,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4352,
											"end": 4353,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 4350,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4354,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4387,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4387,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4387,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4387,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 4405,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4283,
											"end": 4436,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 4283,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 4229,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4460,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 4455,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "tag",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4119,
											"end": 4474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4046,
											"end": 4474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 4650,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4739,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4739,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 4739,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2579,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2591,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2195,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2288,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2291,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 2264,
											"end": 2288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2288,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2296,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2296,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2296,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2195,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 1998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 1974,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 2005,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 2005,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1974,
											"end": 2005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2001,
											"end": 2005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1974,
											"end": 2005,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 2005,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1974,
											"end": 2005,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1907,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3855,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3804,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5099,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5163,
											"end": 5167,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5140,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 4973,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5096,
											"end": 5109,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5132,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 5147,
											"end": 5154,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5132,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 5132,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3169,
											"end": 3189,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3157,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3145,
											"end": 3157,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3169,
											"end": 3189,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 3192,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3169,
											"end": 3217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3169,
											"end": 3217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3250,
											"end": 3264,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3246,
											"end": 3264,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3246,
											"end": 3264,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3298,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3298,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 3316,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3322,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3367,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3368,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 3336,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 3336,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 3336,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3269,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3266,
											"end": 3269,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 3229,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3088,
											"end": 3410,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24832483"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16172,
											"end": 16413,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 16172,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16235,
											"end": 16242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16297,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 16297,
											"end": 16385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16343,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14452,
											"end": 14572,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 14452,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14532,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 14541,
											"end": 14543,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14545,
											"end": 14552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14554,
											"end": 14558,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14560,
											"end": 14564,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14532,
											"end": 14540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 14532,
											"end": 14565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9667,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8839,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8925,
											"end": 8932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9054,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9036,
											"end": 9054,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 9032,
											"end": 9118,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9093,
											"end": 9097,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9099,
											"end": 9106,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 9070,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9107,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 9070,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9158,
											"end": 9431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9278,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9306,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9325,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9278,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9278,
											"end": 9326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9278,
											"end": 9326,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 9278,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9431,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9158,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9461,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9441,
											"end": 9564,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9518,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9564,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 9441,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9581,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9595,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9574,
											"end": 9590,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9638,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9660,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 9667,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 9667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10667,
											"end": 10767,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 10667,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10744,
											"end": 10746,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10748,
											"end": 10755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 10734,
											"end": 10760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15625,
											"end": 15937,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 15625,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15732,
											"end": 15754,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15732,
											"end": 15754,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15728,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 15728,
											"end": 15819,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15777,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15728,
											"end": 15819,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 15728,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15846,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15853,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15863,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15828,
											"end": 15874,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15889,
											"end": 15930,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15625,
											"end": 15937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15625,
											"end": 15937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15625,
											"end": 15937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15625,
											"end": 15937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17068,
											"end": 17082,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17082,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17082,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17064,
											"end": 17728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 17064,
											"end": 17728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17157,
											"end": 17161,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 17157,
											"end": 17161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17163,
											"end": 17170,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17163,
											"end": 17170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17172,
											"end": 17176,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17172,
											"end": 17176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 17106,
											"end": 17177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 17106,
											"end": 17177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 17106,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17421,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17415,
											"end": 17428,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17432,
											"end": 17433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17433,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17411,
											"end": 17704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 17411,
											"end": 17704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17464,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17411,
											"end": 17704,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 17411,
											"end": 17704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17656,
											"end": 17662,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17650,
											"end": 17663,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17641,
											"end": 17647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17637,
											"end": 17639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17633,
											"end": 17648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17626,
											"end": 17664,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 17102,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17224,
											"end": 17275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17224,
											"end": 17275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17224,
											"end": 17275,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17220,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 17220,
											"end": 17350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17306,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17220,
											"end": 17350,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 17220,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17178,
											"end": 17364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16952,
											"end": 17734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3267,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14754,
											"end": 15416,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 14754,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14914,
											"end": 14923,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14914,
											"end": 14945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14914,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 14914,
											"end": 14945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14914,
											"end": 14945,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 14914,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14910,
											"end": 15370,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14910,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14910,
											"end": 15370,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14961,
											"end": 14974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 14991,
											"end": 14998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14977,
											"end": 14999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 14999,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 14977,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14961,
											"end": 14999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 15127,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15158,
											"end": 15162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15149,
											"end": 15162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15149,
											"end": 15162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15162,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15149,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 15127,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15167,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 15184,
											"end": 15189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15191,
											"end": 15195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15167,
											"end": 15183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 15167,
											"end": 15196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15167,
											"end": 15196,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 15167,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15166,
											"end": 15196,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 15127,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15123,
											"end": 15265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15123,
											"end": 15265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 15123,
											"end": 15265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15223,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15123,
											"end": 15265,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 15123,
											"end": 15265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15279,
											"end": 15360,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15279,
											"end": 15360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 15279,
											"end": 15360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15337,
											"end": 15344,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15333,
											"end": 15335,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15326,
											"end": 15331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15317,
											"end": 15345,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15279,
											"end": 15360,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 15279,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14947,
											"end": 15370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14910,
											"end": 15370,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 14910,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15395,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15409,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14754,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7451,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 7083,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 7209,
											"end": 7214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 7195,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7233,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 7195,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7190,
											"end": 7445,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7272,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7249,
											"end": 7435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1098,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7299,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 961,
											"end": 1138,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7435,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7249,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13185,
											"end": 13217,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13185,
											"end": 13217,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13167,
											"end": 13218,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13234,
											"end": 13252,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13234,
											"end": 13252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13234,
											"end": 13252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13227,
											"end": 13261,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13227,
											"end": 13261,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13227,
											"end": 13261,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13140,
											"end": 13158,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 13140,
											"end": 13158,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7376,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 12993,
											"end": 13267,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10988,
											"end": 11170,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 10988,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11088,
											"end": 11090,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11092,
											"end": 11099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11082,
											"end": 11100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11110,
											"end": 11163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 11141,
											"end": 11142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11149,
											"end": 11156,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11158,
											"end": 11162,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11110,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11110,
											"end": 11163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2767,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3267,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2876,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2902,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 2879,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2926,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6377,
											"end": 6649,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 6377,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6480,
											"end": 6484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6515,
											"end": 6642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6569,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6558,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6569,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6569,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6553,
											"end": 6605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6590,
											"end": 6595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6604,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6573,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6605,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6573,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6553,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6009,
											"end": 6016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6059,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6496,
											"end": 6642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6377,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10316,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 9989,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10056,
											"end": 10072,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10052,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 10052,
											"end": 10139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10125,
											"end": 10126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10095,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10052,
											"end": 10139,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 10052,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 10180,
											"end": 10182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10172,
											"end": 10204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10172,
											"end": 10204,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 10172,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10148,
											"end": 10204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10218,
											"end": 10245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10245,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10214,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10214,
											"end": 10310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10296,
											"end": 10297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10268,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 592,
											"end": 765,
											"name": "tag",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 592,
											"end": 765,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 660,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 709,
											"end": 740,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 699,
											"end": 741,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 699,
											"end": 741,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 689,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 689,
											"end": 759,
											"name": "tag",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 592,
											"end": 765,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 592,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 770,
											"end": 956,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 770,
											"end": 956,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 829,
											"end": 835,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 850,
											"end": 902,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 850,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 898,
											"end": 899,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 888,
											"end": 900,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 850,
											"end": 902,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 921,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 921,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1393,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 1143,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "tag",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1309,
											"end": 1320,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1341,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1277,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1238,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1383,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1367,
											"end": 1383,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1443,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1472,
											"end": 1484,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1505,
											"end": 1511,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1500,
											"end": 1503,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1493,
											"end": 1512,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 1521,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1521,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1651,
											"end": 1653,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1630,
											"end": 1645,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1617,
											"end": 1656,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1658,
											"end": 1662,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1663,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1613,
											"end": 1663,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1398,
											"end": 1669,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1398,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1674,
											"end": 1894,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 1674,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 1826,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1882,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1843,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 1843,
											"end": 1888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2125,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 1899,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1986,
											"end": 2009,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 2014,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2027,
											"end": 2028,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1979,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2095,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2072,
											"end": 2095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2125,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2338,
											"end": 2638,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 2338,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2464,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2442,
											"end": 2465,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2438,
											"end": 2470,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2485,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "tag",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2506,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2525,
											"end": 2534,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2506,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 2506,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2506,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 2506,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2496,
											"end": 2535,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2643,
											"end": 3160,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 2643,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2898,
											"end": 2904,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2880,
											"end": 2905,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2936,
											"end": 2938,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2914,
											"end": 2948,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2957,
											"end": 2988,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3031,
											"end": 3050,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3005,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 3005,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3005,
											"end": 3051,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 3005,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3094,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3138,
											"end": 3152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3138,
											"end": 3152,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3128,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 3110,
											"end": 3129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3110,
											"end": 3129,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3110,
											"end": 3129,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3103,
											"end": 3154,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2997,
											"end": 3051,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2643,
											"end": 3160,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2643,
											"end": 3160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3165,
											"end": 3539,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 3165,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3290,
											"end": 3297,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3282,
											"end": 3314,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3279,
											"end": 3331,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3279,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 3279,
											"end": 3331,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3317,
											"end": 3329,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3279,
											"end": 3331,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 3279,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 3350,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3340,
											"end": 3379,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3340,
											"end": 3379,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3432,
											"end": 3434,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 3398,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 3398,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3165,
											"end": 3539,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3165,
											"end": 3539,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3388,
											"end": 3436,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3388,
											"end": 3436,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3490,
											"end": 3508,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3490,
											"end": 3508,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3490,
											"end": 3508,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3490,
											"end": 3508,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3477,
											"end": 3509,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3477,
											"end": 3509,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3165,
											"end": 3539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3544,
											"end": 3671,
											"name": "tag",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 3544,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3605,
											"end": 3615,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 3600,
											"end": 3603,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 3593,
											"end": 3594,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3665,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3797,
											"end": 3815,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3789,
											"end": 3795,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3786,
											"end": 3816,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3839,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 3783,
											"end": 3839,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 3819,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3866,
											"end": 3881,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3862,
											"end": 3891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3862,
											"end": 3891,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4032,
											"end": 4034,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4016,
											"end": 4045,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4046,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4046,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4119,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4119,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4119,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4061,
											"end": 4095,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4058,
											"end": 4120,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4143,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 4055,
											"end": 4143,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 4123,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4174,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4207,
											"end": 4229,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4207,
											"end": 4229,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4207,
											"end": 4229,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4241,
											"end": 4266,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4283,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 4238,
											"end": 4283,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4279,
											"end": 4280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4283,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 4238,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4324,
											"end": 4327,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4317,
											"end": 4321,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4305,
											"end": 4322,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4292,
											"end": 4336,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4356,
											"end": 4375,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4352,
											"end": 4382,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4345,
											"end": 4386,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4345,
											"end": 4386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 4392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4397,
											"end": 4848,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 4397,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4521,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4516,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4498,
											"end": 4505,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4490,
											"end": 4522,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4487,
											"end": 4539,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4487,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 4487,
											"end": 4539,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4536,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4525,
											"end": 4537,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4487,
											"end": 4539,
											"name": "tag",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 4487,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4575,
											"end": 4584,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4562,
											"end": 4585,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4597,
											"end": 4627,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4594,
											"end": 4644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4594,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4594,
											"end": 4644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4630,
											"end": 4642,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4594,
											"end": 4644,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 4594,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4708,
											"end": 4721,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4708,
											"end": 4721,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "tag",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 4694,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4768,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4816,
											"end": 4832,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4811,
											"end": 4813,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4809,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4803,
											"end": 4814,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4768,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 4768,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4930,
											"end": 4936,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4974,
											"end": 4997,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5005,
											"end": 5017,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 4967,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 5057,
											"end": 5066,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5038,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 5038,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5028,
											"end": 5067,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5136,
											"end": 5138,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5108,
											"end": 5140,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5108,
											"end": 5140,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 5217,
											"end": 5219,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5183,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5221,
											"name": "tag",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 5183,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 5227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5297,
											"end": 5303,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5355,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5337,
											"end": 5344,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5333,
											"end": 5356,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5329,
											"end": 5361,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5326,
											"end": 5378,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5326,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 5326,
											"end": 5378,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5372,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5364,
											"end": 5376,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5326,
											"end": 5378,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 5326,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5397,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 5416,
											"end": 5425,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5397,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5397,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5397,
											"end": 5426,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 5397,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5387,
											"end": 5426,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5387,
											"end": 5426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5476,
											"end": 5478,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5474,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5448,
											"end": 5480,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5523,
											"end": 5528,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5516,
											"end": 5529,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5509,
											"end": 5530,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5507,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5499,
											"end": 5531,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 5489,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 5489,
											"end": 5549,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5535,
											"end": 5547,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5489,
											"end": 5549,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 5489,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5568,
											"end": 5573,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5693,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5695,
											"end": 5701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5756,
											"end": 5759,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5735,
											"end": 5742,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5727,
											"end": 5760,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5777,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 5724,
											"end": 5777,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5773,
											"end": 5774,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5763,
											"end": 5775,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5777,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 5724,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5796,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5796,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5796,
											"end": 5825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5796,
											"end": 5825,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 5796,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5786,
											"end": 5825,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5786,
											"end": 5825,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5844,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5878,
											"end": 5880,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5867,
											"end": 5876,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5844,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5844,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5844,
											"end": 5882,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 5844,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5834,
											"end": 5882,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5951,
											"end": 5953,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6002,
											"end": 6034,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6093,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 6043,
											"end": 6093,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6087,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6079,
											"end": 6091,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6093,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 6043,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6112,
											"end": 6134,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6112,
											"end": 6134,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 6157,
											"end": 6170,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6157,
											"end": 6170,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6153,
											"end": 6180,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 6143,
											"end": 6198,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6192,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6198,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 6143,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6217,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 6283,
											"end": 6290,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6265,
											"end": 6281,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6252,
											"end": 6263,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6217,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 6217,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6217,
											"end": 6291,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 6217,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6291,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5584,
											"end": 6297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6384,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6431,
											"end": 6433,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6428,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6406,
											"end": 6429,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6402,
											"end": 6434,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6399,
											"end": 6451,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6399,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 6399,
											"end": 6451,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6399,
											"end": 6451,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 6399,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6470,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 6489,
											"end": 6498,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6470,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 6470,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6470,
											"end": 6499,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 6470,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6460,
											"end": 6499,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6460,
											"end": 6499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6518,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 6552,
											"end": 6554,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6550,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6518,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 6518,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6518,
											"end": 6556,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 6518,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6508,
											"end": 6556,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6508,
											"end": 6556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6302,
											"end": 6562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6567,
											"end": 7773,
											"name": "tag",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 6567,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6801,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6811,
											"end": 6832,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6881,
											"end": 6894,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6918,
											"end": 6924,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6910,
											"end": 6916,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6903,
											"end": 6925,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6956,
											"end": 6958,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6941,
											"end": 6959,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 6959,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6934,
											"end": 6959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7005,
											"end": 7006,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 6990,
											"end": 6999,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7021,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 7021,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 7021,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7058,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7048,
											"end": 7054,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7044,
											"end": 7059,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7095,
											"end": 7108,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7194,
											"end": 7196,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 7190,
											"end": 7197,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7162,
											"end": 7198,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7157,
											"end": 7160,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7150,
											"end": 7199,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7235,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7269,
											"end": 7271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7255,
											"end": 7261,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7248,
											"end": 7273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7324,
											"end": 7326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7316,
											"end": 7327,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7305,
											"end": 7307,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7303,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7293,
											"end": 7308,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7329,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7376,
											"end": 7378,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7368,
											"end": 7379,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7417,
											"end": 7421,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7404,
											"end": 7410,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7400,
											"end": 7415,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7393,
											"end": 7422,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7481,
											"end": 7498,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7467,
											"end": 7479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 7449,
											"end": 7499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 7449,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7544,
											"end": 7557,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7544,
											"end": 7557,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7544,
											"end": 7557,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7538,
											"end": 7558,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7536,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7536,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7512,
											"end": 7559,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7618,
											"end": 7631,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7612,
											"end": 7632,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7605,
											"end": 7633,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7598,
											"end": 7634,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7596,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7596,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7596,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 7579,
											"end": 7596,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7572,
											"end": 7635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7722,
											"end": 7734,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7722,
											"end": 7734,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7722,
											"end": 7734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7722,
											"end": 7734,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7687,
											"end": 7702,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7687,
											"end": 7702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7687,
											"end": 7702,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7687,
											"end": 7702,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7687,
											"end": 7702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7123,
											"end": 7124,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7116,
											"end": 7125,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "tag",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 7087,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6567,
											"end": 7773,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 7773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 8158,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 7778,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7857,
											"end": 7858,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7853,
											"end": 7865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7865,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7912,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7912,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7900,
											"end": 7912,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7921,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 7921,
											"end": 7982,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7975,
											"end": 7979,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7963,
											"end": 7980,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7953,
											"end": 7980,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7953,
											"end": 7980,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7921,
											"end": 7982,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 7921,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8028,
											"end": 8030,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8020,
											"end": 8026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8017,
											"end": 8031,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8032,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7991,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 7991,
											"end": 8152,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8074,
											"end": 8084,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8065,
											"end": 8085,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 8062,
											"end": 8063,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8086,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8109,
											"end": 8113,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8099,
											"end": 8114,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8137,
											"end": 8141,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8142,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7991,
											"end": 8152,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 7991,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7991,
											"end": 8152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 8158,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 8158,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 8158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 8158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8949,
											"end": 9076,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 8949,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9010,
											"end": 9020,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9005,
											"end": 9008,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9001,
											"end": 9021,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 8998,
											"end": 8999,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9022,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9041,
											"end": 9045,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9031,
											"end": 9046,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9065,
											"end": 9069,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9062,
											"end": 9063,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9070,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9081,
											"end": 9206,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 9081,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9167,
											"end": 9177,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9164,
											"end": 9200,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9164,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 9164,
											"end": 9200,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9180,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 9180,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 9180,
											"end": 9198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 9855,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 9337,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9439,
											"end": 9441,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9431,
											"end": 9442,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9428,
											"end": 9849,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9428,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 9428,
											"end": 9849,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9475,
											"end": 9480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9519,
											"end": 9523,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9516,
											"end": 9517,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 9589,
											"end": 9591,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9577,
											"end": 9587,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9573,
											"end": 9592,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9570,
											"end": 9571,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 9566,
											"end": 9593,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9556,
											"end": 9594,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9625,
											"end": 9629,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9623,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9607,
											"end": 9654,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9607,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 9607,
											"end": 9654,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 9652,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9607,
											"end": 9654,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 9607,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9694,
											"end": 9706,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9691,
											"end": 9692,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 9687,
											"end": 9707,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9677,
											"end": 9708,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9667,
											"end": 9708,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9667,
											"end": 9708,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9769,
											"end": 9774,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9779,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9835,
											"end": 9836,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9821,
											"end": 9837,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9821,
											"end": 9837,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 9802,
											"end": 9803,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 9791,
											"end": 9804,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 9758,
											"end": 9839,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10031,
											"end": 11330,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 10031,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10151,
											"end": 10161,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10176,
											"end": 10182,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10173,
											"end": 10203,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10170,
											"end": 10226,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10170,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 10170,
											"end": 10226,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 10206,
											"end": 10224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10235,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 10325,
											"end": 10331,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 10317,
											"end": 10321,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10311,
											"end": 10322,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 10285,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 10285,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10279,
											"end": 10283,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10235,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 10235,
											"end": 10332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10235,
											"end": 10332,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 10235,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10381,
											"end": 10385,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10401,
											"end": 10415,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10401,
											"end": 10415,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11117,
											"end": 11118,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11140,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11180,
											"end": 11206,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9988,
											"end": 9989,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9980,
											"end": 10004,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 9976,
											"end": 10005,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 9966,
											"end": 10006,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10012,
											"end": 10013,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10008,
											"end": 10019,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10008,
											"end": 10019,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10008,
											"end": 10019,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9963,
											"end": 10020,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 11233,
											"end": 11314,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11233,
											"end": 11314,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 10394,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 10394,
											"end": 11324,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 10424,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9291,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9277,
											"end": 9291,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9277,
											"end": 9291,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9321,
											"end": 9325,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10460,
											"end": 10480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10592,
											"end": 10599,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10586,
											"end": 10600,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10674,
											"end": 10693,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10674,
											"end": 10693,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10674,
											"end": 10693,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10668,
											"end": 10694,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10653,
											"end": 10695,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10653,
											"end": 10695,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 10781,
											"end": 10785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10734,
											"end": 10735,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10722,
											"end": 10736,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10722,
											"end": 10736,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10722,
											"end": 10736,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10722,
											"end": 10736,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10608,
											"end": 10620,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 10578,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10582,
											"end": 10585,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10828,
											"end": 10834,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10816,
											"end": 10835,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 10813,
											"end": 11014,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10813,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 10813,
											"end": 11014,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10908,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10908,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10908,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10883,
											"end": 10909,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10972,
											"end": 10973,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 10968,
											"end": 10982,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 10982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 10982,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 10984,
											"end": 10987,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 10964,
											"end": 10988,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10960,
											"end": 10997,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 10956,
											"end": 10998,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 10941,
											"end": 10999,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 10926,
											"end": 11000,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10926,
											"end": 11000,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 10813,
											"end": 11014,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 10813,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11044,
											"end": 11058,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11044,
											"end": 11058,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11044,
											"end": 11058,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 11040,
											"end": 11062,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11027,
											"end": 11063,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11027,
											"end": 11063,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10031,
											"end": 11330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11335,
											"end": 11470,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 11335,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11374,
											"end": 11377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11412,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11395,
											"end": 11412,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11395,
											"end": 11412,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11392,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 11392,
											"end": 11435,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 11415,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 11415,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11451,
											"end": 11464,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11451,
											"end": 11464,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11335,
											"end": 11470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11475,
											"end": 11602,
											"name": "tag",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 11475,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11536,
											"end": 11546,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 11531,
											"end": 11534,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 11527,
											"end": 11547,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 11524,
											"end": 11525,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11548,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11567,
											"end": 11571,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 11557,
											"end": 11572,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11591,
											"end": 11595,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11596,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 11607,
											"end": 11743,
											"name": "tag",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 11607,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11646,
											"end": 11649,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11679,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11664,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 11664,
											"end": 11703,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 11683,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11607,
											"end": 11743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11748,
											"end": 12233,
											"name": "tag",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 11748,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11979,
											"end": 12011,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11979,
											"end": 12011,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11979,
											"end": 12011,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11961,
											"end": 12012,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11961,
											"end": 12012,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12048,
											"end": 12080,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12043,
											"end": 12045,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12028,
											"end": 12046,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12028,
											"end": 12046,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12021,
											"end": 12081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12160,
											"end": 12163,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 12155,
											"end": 12157,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12140,
											"end": 12158,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 12158,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12181,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 12181,
											"end": 12227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12207,
											"end": 12226,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12207,
											"end": 12226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12181,
											"end": 12227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 12181,
											"end": 12227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12181,
											"end": 12227,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 12181,
											"end": 12227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12173,
											"end": 12227,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 11748,
											"end": 12233,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 12233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12238,
											"end": 12487,
											"name": "tag",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 12238,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12362,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12339,
											"end": 12346,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12335,
											"end": 12358,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12331,
											"end": 12363,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12328,
											"end": 12380,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12328,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 12328,
											"end": 12380,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12376,
											"end": 12377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12366,
											"end": 12378,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12328,
											"end": 12380,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 12328,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12408,
											"end": 12417,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12402,
											"end": 12418,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12427,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 12451,
											"end": 12456,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12427,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 12427,
											"end": 12457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12492,
											"end": 12988,
											"name": "tag",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 12492,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12671,
											"end": 12674,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12703,
											"end": 12716,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 12784,
											"end": 12790,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12779,
											"end": 12782,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12772,
											"end": 12776,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12760,
											"end": 12777,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 12725,
											"end": 12791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12791,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 12725,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12854,
											"end": 12867,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12854,
											"end": 12867,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 12854,
											"end": 12867,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12829,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12923,
											"end": 12927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12911,
											"end": 12928,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12911,
											"end": 12928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 12876,
											"end": 12946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 12876,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12492,
											"end": 12988,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12492,
											"end": 12988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Element of Soul/Land.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NftId(address,uint256)": "fbbffcb0",
							"NftMinting(uint256)": "2295370a",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"count(address)": "05d85eda",
							"getApproved(uint256)": "081812fc",
							"getTokenId(address)": "f1537686",
							"getTokenUri(uint256)": "8ad91345",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(string)": "695850fb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unwhitelist(address)": "9a590427",
							"updateTokenId(address,uint256,address)": "6e0cee09",
							"whitelist(address)": "9b19251a",
							"whitelisted(address)": "d936547e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NftMinting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mintTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"mintTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"internalType\":\"struct SuperVet.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"updateTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateTokenId(address,uint256,address)\":{\"details\":\"Transfers a token ID from one owner to another and updates internal tracking.\",\"params\":{\"_seller\":\"The current owner of the token ID. This function updates the internal mapping of token IDs to reflect a change in ownership. It also adjusts the count of NFTs owned by both the seller and the buyer. Note: This function does not perform the actual transfer of tokens but is intended to be called in conjunction with a transfer function that handles ownership change.\",\"_to\":\"The address to receive the token ID.\",\"_tokenId\":\"The token ID to be transferred.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Element of Soul/Land.sol\":\"SuperVet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x23be80beb2b5bce2da52e2e5579137c259f582c1b3819aee7b107113053970e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ffbe7736166b19ecbe033cf1b8bc965e8066aab1060346f4fbad4d85fb8b90e\",\"dweb:/ipfs/QmP2qBJdbSF2rShE4RuMGWhJo9vhXf5NWeswaw1q9tB64r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Element of Soul/Land.sol\":{\"keccak256\":\"0x46da7643438b33279e7ac5aa520728ba2627e0408e1004ba9737f514fdd9bb89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e085064391772ef67c0752486ab1e2105691433d840defd61ebd192c463d33\",\"dweb:/ipfs/Qmd3mqjpwT4FS4tAP42F9YFR9KR9QHyvNKBJN6RstLt1Rn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3187,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "_itemsId",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)1650_storage"
							},
							{
								"astId": 3204,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "NftId",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 3208,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "count",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3213,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "NftMinting",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_struct(NFT)3198_storage)"
							},
							{
								"astId": 3217,
								"contract": "contracts/Element of Soul/Land.sol:SuperVet",
								"label": "whitelisted",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(NFT)3198_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SuperVet.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)3198_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1650_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1649,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFT)3198_storage": {
								"encoding": "inplace",
								"label": "struct SuperVet.NFT",
								"members": [
									{
										"astId": 3189,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3191,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "count",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3193,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "uri",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 3195,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "mintTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3197,
										"contract": "contracts/Element of Soul/Land.sol:SuperVet",
										"label": "minted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1645,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1644
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2010,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2009
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1997
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2009
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1973
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1645,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1974,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1998,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1997,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"805:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "805:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "805:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"814:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1997,
										"src": "814:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "814:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"822:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "822:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"831:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "831:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "831:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"848:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "848:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "848:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "530:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1997,
								2009,
								1644
							],
							"name": "ERC721",
							"nameLocation": "795:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1094:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1052:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1068:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1060:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1052:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1077:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1154:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1110:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1126:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1118:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1110:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1137:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1244:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1176:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1192:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1184:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1176:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1217:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1209:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1201:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1229:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1438:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1448:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1456:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1448:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1448:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1471:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1481:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1471:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1471:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1269:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1408:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1394:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1394:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1415:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1415:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:5"
									},
									"scope": 1325,
									"src": "1382:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1996,
										2008
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1670:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1699:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1719:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1714:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1714:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1728:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1714:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1699:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1755:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1775:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1770:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1770:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1792:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1770:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1755:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1699:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1843:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1819:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1825:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1996,
															"src": "1819:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1819:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1699:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1680:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1501:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1571:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1638:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1997,
												"src": "1638:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1646:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2009,
												"src": "1646:7:5"
											}
										],
										"src": "1629:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1596:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1589:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1589:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1664:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:6:5"
									},
									"scope": 1325,
									"src": "1562:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1993:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2007:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2024:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2016:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2016:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2007:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2003:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2028:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2076:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2068:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2068:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2068:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2049:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2049:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2042:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2106:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2116:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2106:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2099:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1868:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1930:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1948:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1940:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1984:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:9:5"
									},
									"scope": 1325,
									"src": "1921:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2258:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2289:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2275:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2268:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2135:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:5"
									},
									"scope": 1325,
									"src": "2186:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2426:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2443:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2436:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2310:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2375:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2411:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2411:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:15:5"
									},
									"scope": 1325,
									"src": "2366:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2581:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2598:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2591:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2461:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2528:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2534:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2566:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2566:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:15:5"
									},
									"scope": 1325,
									"src": "2519:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2757:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2781:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2767:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2767:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2814:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2800:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2800:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2824:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2824:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2800:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2857:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2851:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2851:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2851:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2866:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2851:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2851:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2924:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2851:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2893:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2902:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2910:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1786,
																	"src": "2902:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2902:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2879:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2879:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2886:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2879:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2879:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2844:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2618:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2687:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2704:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2696:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2742:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:5"
									},
									"scope": 1325,
									"src": "2678:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3241:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3258:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3251:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2939:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3184:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3192:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3226:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3226:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:15:5"
									},
									"scope": 1325,
									"src": "3175:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3385:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3404:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3408:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3417:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3395:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3395:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3273:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3333:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3349:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3341:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3361:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3353:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:0:5"
									},
									"scope": 1325,
									"src": "3324:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3574:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3598:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3584:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3584:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3624:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3617:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3443:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3507:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3527:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3519:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3565:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3564:9:5"
									},
									"scope": 1325,
									"src": "3498:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3794:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3823:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3823:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3837:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3847:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3804:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3804:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3804:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3658:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3728:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3754:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3746:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3769:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3764:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3764:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3745:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3794:0:5"
									},
									"scope": 1325,
									"src": "3719:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4023:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4040:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4059:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4040:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4066:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4040:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4033:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3869:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3938:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3963:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3955:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3978:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3970:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4017:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4017:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:6:5"
									},
									"scope": 1325,
									"src": "3929:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4224:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4238:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4252:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4244:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4244:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4244:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4238:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4234:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4256:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4307:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4299:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4299:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4299:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4277:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4270:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4547:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4539:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4539:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4571:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4584:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4584:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4563:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4611:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4628:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4611:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4607:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4634:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4676:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4682:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4691:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4655:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4655:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4648:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4088:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4153:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4174:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4166:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4188:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4180:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4200:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4192:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4224:0:5"
									},
									"scope": 1325,
									"src": "4144:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4864:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4891:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4897:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4901:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4910:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4874:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4874:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4874:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4728:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4797:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4822:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4814:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4836:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4828:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4848:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4840:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4840:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4864:0:5"
									},
									"scope": 1325,
									"src": "4788:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5089:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5112:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5118:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5122:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5099:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5099:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5099:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5163:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5169:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5173:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5182:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5140:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5140:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4926:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4995:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5012:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5034:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5026:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5046:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5038:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5068:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5055:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5055:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:5"
									},
									"scope": 1325,
									"src": "4986:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5783:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5800:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5800:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5793:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5200:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5717:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5734:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5726:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5774:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5774:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5773:9:5"
									},
									"scope": 1325,
									"src": "5708:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6018:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6035:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6051:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6035:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6028:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5829:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5948:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5969:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5961:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6009:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6008:9:5"
									},
									"scope": 1325,
									"src": "5939:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6486:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6534:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6526:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6526:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6526:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6515:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6553:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6562:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6553:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6590:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6597:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6573:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6573:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6553:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6622:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6609:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6609:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6634:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6609:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6553:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6552:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6515:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6496:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6072:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6386:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6408:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6400:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6423:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6415:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6440:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6432:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6432:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6399:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6480:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:6:5"
									},
									"scope": 1325,
									"src": "6377:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7180:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7194:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7209:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7225:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7195:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7195:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7190:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7235:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7253:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7270:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7262:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7262:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7262:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7253:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7351:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7403:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7412:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7376:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7376:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7369:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7249:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7274:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7322:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7299:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7299:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7292:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6655:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7092:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7109:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7132:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7124:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7108:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7180:0:5"
									},
									"scope": 1325,
									"src": "7083:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8168:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8178:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8202:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8212:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8202:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8224:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8202:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8202:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7457:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8102:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8127:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8119:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8119:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8144:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8136:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8118:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8168:0:5"
									},
									"scope": 1325,
									"src": "8093:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8934:733:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8952:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8944:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8944:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8968:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8959:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8959:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8944:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9036:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9052:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9044:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9044:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9036:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9032:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9056:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9087:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9093:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9099:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9070:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9070:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9070:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9162:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9178:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9170:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9170:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9170:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9162:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9158:273:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9182:249:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9295:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9287:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9287:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9287:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9299:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9316:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9308:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9308:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9308:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9320:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9278:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9278:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9278:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9341:80:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9369:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9379:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9369:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9388:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9369:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9369:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9445:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9459:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9451:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9451:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9451:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9445:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9441:123:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9463:101:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9477:77:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9505:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9515:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9505:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9522:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9505:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9582:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9574:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9593:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9574:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9574:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9620:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9630:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9611:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9611:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9606:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9656:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9649:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8252:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8848:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8876:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8868:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8855:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8925:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8925:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8924:9:5"
									},
									"scope": 1325,
									"src": "8839:828:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10042:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10056:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10070:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10062:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10062:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10062:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10056:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10052:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10074:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10095:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10095:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10088:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10156:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10148:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10148:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10180:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10184:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10201:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10193:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10193:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10193:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10172:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10172:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10148:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10218:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10243:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10235:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10235:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10235:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10218:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10214:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10247:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10296:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10288:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10288:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10288:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10268:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10268:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10261:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9673:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9998:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10012:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "10004:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10024:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "10016:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10003:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10042:0:5"
									},
									"scope": 1325,
									"src": "9989:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10724:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10744:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10748:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10757:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10734:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10734:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10734:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10322:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10676:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10694:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10686:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10686:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10706:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10698:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10698:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10685:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10724:0:5"
									},
									"scope": 1325,
									"src": "10667:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11072:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11088:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11092:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11082:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11082:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11082:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11141:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11133:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11133:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11133:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11145:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11149:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11158:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11110:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11110:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11110:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10773:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10997:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11015:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11007:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11007:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11027:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11019:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11049:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11036:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11036:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11006:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11072:0:5"
									},
									"scope": 1325,
									"src": "10988:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11537:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11555:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11547:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11547:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11587:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11579:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11579:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11579:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11591:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11608:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11600:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11600:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11600:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11571:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11571:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11547:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11625:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11650:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11642:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11642:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11642:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11625:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11621:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11654:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11698:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11675:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11675:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11668:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11176:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11505:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11519:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11511:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11510:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11537:0:5"
									},
									"scope": 1325,
									"src": "11496:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12118:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12132:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12146:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12138:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12138:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12138:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12132:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12128:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12150:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12201:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12193:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12193:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12193:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12171:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12171:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12164:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12232:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12224:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12224:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12256:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12260:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12277:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12269:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12269:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12269:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12248:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12248:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12224:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12294:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12319:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12311:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12311:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12311:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12294:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12396:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12413:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12396:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12392:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12419:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12461:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12467:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12476:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12440:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12440:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12433:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12290:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12323:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12367:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12344:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12337:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11729:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12056:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12074:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12066:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12066:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12088:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12080:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12100:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12092:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12065:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12118:0:5"
									},
									"scope": 1325,
									"src": "12047:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13515:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13539:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13545:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13549:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13558:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13525:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13525:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13525:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12513:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13449:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13471:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13463:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13485:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13477:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13497:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13489:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13462:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13515:0:5"
									},
									"scope": 1325,
									"src": "13440:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13907:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13927:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13933:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13937:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13917:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13917:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13917:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13978:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13984:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13988:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13997:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13955:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13955:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13955:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13574:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13814:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13836:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13828:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13850:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13842:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13862:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13854:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13854:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13884:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13871:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13871:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13827:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13907:0:5"
									},
									"scope": 1325,
									"src": "13805:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14522:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14541:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14554:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14560:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14532:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14532:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14532:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "14015:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14461:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14478:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14470:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14470:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14490:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14482:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14482:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14507:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14499:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14469:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14522:0:5"
									},
									"scope": 1325,
									"src": "14452:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14848:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14914:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14927:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14943:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14935:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14935:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14935:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14927:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14914:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14910:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14947:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14969:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14961:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14961:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14991:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14977:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14977:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14961:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15127:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15143:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15135:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15135:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15135:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15127:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15149:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15158:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15149:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15127:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15166:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15184:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15191:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15167:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15167:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15127:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15123:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15198:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15245:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15223:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15223:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15216:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15283:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15279:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15294:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15326:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15333:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15337:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15317:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15317:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15312:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15380:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15396:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15380:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15407:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15380:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15380:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14578:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14763:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14780:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14772:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14772:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14792:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14784:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14809:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14801:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14801:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14820:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14815:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14815:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14771:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14848:0:5"
									},
									"scope": 1325,
									"src": "14754:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15718:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15732:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15752:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15744:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15744:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15744:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15732:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15728:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15756:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15799:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15777:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15777:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15770:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15828:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15847:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15828:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15854:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15828:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15866:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15828:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15828:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15904:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15911:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15921:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15889:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15889:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15884:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15422:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15634:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15653:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15691:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15686:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15686:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15652:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15718:0:5"
									},
									"scope": 1325,
									"src": "15625:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16244:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16262:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16254:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16254:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16279:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16270:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16270:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16254:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16301:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16318:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16310:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16310:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16310:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16301:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16297:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16322:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16366:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16343:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16343:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16336:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16401:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16394:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15943:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16181:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16195:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16194:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16234:9:5"
									},
									"scope": 1325,
									"src": "16172:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17054:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17068:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17071:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17068:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17076:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17068:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17085:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17068:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17064:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17088:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17202:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17224:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17234:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17250:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17234:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17267:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17234:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17224:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17220:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17277:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17328:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17306:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17306:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17299:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17194:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17187:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17187:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17186:15:5"
																	},
																	"src": "17178:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17393:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17415:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17422:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17415:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17432:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17415:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17514:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17600:86:5",
																								"nodeType": "YulBlock",
																								"src": "17600:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17637:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17637:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17641:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17641:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17633:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17633:3:5"
																													},
																													"nativeSrc": "17633:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17633:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17656:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17656:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17650:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17650:5:5"
																													},
																													"nativeSrc": "17650:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17650:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17626:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17626:6:5"
																											},
																											"nativeSrc": "17626:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17626:38:5"
																										},
																										"nativeSrc": "17626:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17626:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17641:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17656:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17591:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17411:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17435:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17486:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17464:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17464:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17457:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17385:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17372:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17372:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17371:21:5"
																	},
																	"src": "17365:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17143:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17143:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17157:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17163:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17172:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17122:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17106:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17106:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17126:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17106:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17106:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17102:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16419:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16961:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16992:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16984:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16984:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17006:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16998:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16998:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17018:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17010:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17010:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "17027:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17027:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16983:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17054:0:5"
									},
									"scope": 1325,
									"src": "16952:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "777:16959:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17630:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2010,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2009
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1973
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1974,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1997,
								2009,
								1644
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2008
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2009,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1586,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1586,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1586,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "431:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								2009
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1614,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1614,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1614,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1644
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1644,
							"linearizedBaseContracts": [
								1644
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1644,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1644,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1639,
												"id": 1641,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1644,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1718
						]
					},
					"id": 1719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1647,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:11",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1718,
							"linearizedBaseContracts": [
								1718
							],
							"name": "Counters",
							"nameLocation": "432:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1650,
									"members": [
										{
											"constant": false,
											"id": 1649,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1650,
											"src": "786:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1648,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:11",
									"nodeType": "StructDefinition",
									"scope": 1718,
									"src": "447:374:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "901:38:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1658,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1649,
													"src": "918:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1660,
												"nodeType": "Return",
												"src": "911:21:11"
											}
										]
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "844:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1651,
														"name": "Counter",
														"nameLocations": [
															"844:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "844:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:11"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:11"
									},
									"scope": 1718,
									"src": "827:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "998:70:11",
										"statements": [
											{
												"id": 1674,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:11",
												"statements": [
													{
														"expression": {
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1668,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1032:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1649,
																"src": "1032:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1673,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:11"
													}
												]
											}
										]
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "964:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1663,
														"name": "Counter",
														"nameLocations": [
															"964:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "964:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:11"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:11"
									},
									"scope": 1718,
									"src": "945:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "1127:176:11",
										"statements": [
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "1137:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": {
													"expression": {
														"id": 1684,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "1153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1649,
													"src": "1153:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "1185:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:11"
											},
											{
												"id": 1702,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:11",
												"statements": [
													{
														"expression": {
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1694,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "1260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1649,
																"src": "1260:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1277:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1701,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:11"
													}
												]
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1093:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1677,
														"name": "Counter",
														"nameLocations": [
															"1093:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "1093:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:11"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:11"
									},
									"scope": 1718,
									"src": "1074:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "1358:35:11",
										"statements": [
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1710,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "1368:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:11",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1649,
														"src": "1368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:11"
											}
										]
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1324:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1705,
														"name": "Counter",
														"nameLocations": [
															"1324:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1650,
														"src": "1324:7:11"
													},
													"referencedDeclaration": 1650,
													"src": "1324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:11"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:11"
									},
									"scope": 1718,
									"src": "1309:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "424:971:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3063
						],
						"SignedMath": [
							3168
						],
						"Strings": [
							1973
						]
					},
					"id": 1974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1722,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1974,
							"sourceUnit": 3064,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1721,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3063,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1974,
							"sourceUnit": 3169,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1723,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3168,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1973,
							"linearizedBaseContracts": [
								1973
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1728,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1973,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1726,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1727,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1731,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1973,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1729,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1730,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1738,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1784,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1747
														],
														"declarations": [
															{
																"constant": false,
																"id": 1747,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1754,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1748,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3063,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3063_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2883,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1756
														],
														"declarations": [
															{
																"constant": false,
																"id": 1756,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1755,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1761,
														"initialValue": {
															"arguments": [
																{
																	"id": 1759,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1757,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1763
														],
														"declarations": [
															{
																"constant": false,
																"id": 1763,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1784,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1764,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1756,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1747,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1765,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1780,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1767,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1763,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1769,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1728,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1763,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1741,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1770,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1774,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1779,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1778,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1781,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1782,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1783,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1973,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1804,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3168,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3168_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3167,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1803,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1794,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1810,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1788,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1973,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1830,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1821,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1824,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1815,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1822,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3063,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3063_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3005,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1820,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1832,
																	1915,
																	1935
																],
																"referencedDeclaration": 1915,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1819,
														"id": 1829,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1973,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1843
												],
												"declarations": [
													{
														"constant": false,
														"id": 1843,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"id": 1844,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1835,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1914,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1856,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1851,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1848,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1857,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1859,
														"indexExpression": {
															"hexValue": "30",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1863,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1865,
														"indexExpression": {
															"hexValue": "31",
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1897,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1883,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1885,
																	"indexExpression": {
																		"id": 1884,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1886,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1890,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1887,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1843,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1892,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1893,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1896,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1877,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"initializationExpression": {
													"assignments": [
														1870
													],
													"declarations": [
														{
															"constant": false,
															"id": 1870,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1898,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1869,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1876,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1872,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1880,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1882,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1899,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1908,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1907,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1903,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1904,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1902,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1906,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1911,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1909,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1913,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1973,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1928,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1918,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1926,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1931,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1923,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1915,
															1935
														],
														"referencedDeclaration": 1915,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1933,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1973,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1947,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1952,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1959,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1957,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1956,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1965,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1963,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1962,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1970,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1973,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "251:2847:12",
							"usedErrors": [
								1738
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1997
						],
						"IERC165": [
							2009
						]
					},
					"id": 1998,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 2010,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1976,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1979,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "687:7:13"
									},
									"id": 1980,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1978,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1997,
							"linearizedBaseContracts": [
								1997,
								2009
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2008
									],
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1988,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1990,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2009_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2009_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1989,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2009",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1987,
												"id": 1994,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 1997,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1998,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2009
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1999,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2000,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 2009,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2010,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3063
						]
					},
					"id": 3064,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2012,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3063,
							"linearizedBaseContracts": [
								3063
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2015,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2020,
									"members": [
										{
											"id": 2016,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 2017,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 2018,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 2019,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 2050,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															2033
														],
														"declarations": [
															{
																"constant": false,
																"id": 2033,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2050,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2032,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2037,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2034,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2038,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2039,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2031,
															"id": 2044,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2047,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2048,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2031,
														"id": 2049,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3063,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2078,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2064,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2065,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2071,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2063,
															"id": 2070,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2073,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2074,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2076,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2063,
														"id": 2077,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3063,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2120,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2092,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2099,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2097,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2098,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2101
														],
														"declarations": [
															{
																"constant": false,
																"id": 2101,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2105,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2107,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2109,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2091,
															"id": 2114,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2117,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2091,
														"id": 2119,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3063,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2148,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2141,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2140,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2143,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2144,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2146,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2133,
														"id": 2147,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3063,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2176,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2169,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2167,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2161,
															"id": 2168,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2171,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2153,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2172,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2174,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2161,
														"id": 2175,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3063,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2188,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2189,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2192,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2191,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2187,
												"id": 2194,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3063,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2212,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3063,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2224,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2225,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2229,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2231,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2235,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3063,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2247,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2254,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2250,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2251,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2246,
															"id": 2253,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2256,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2260,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2264,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2246,
												"id": 2269,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3063,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2395,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2284
														],
														"declarations": [
															{
																"constant": false,
																"id": 2284,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2288,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2285,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2286,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2290
														],
														"declarations": [
															{
																"constant": false,
																"id": 2290,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2291,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2274,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2292,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2296,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2297,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2282,
																	"id": 2299,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2302,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2303,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2305,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2307,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2311
														],
														"declarations": [
															{
																"constant": false,
																"id": 2311,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2312,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2290,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2311,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2274,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2313,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2315
														],
														"declarations": [
															{
																"constant": false,
																"id": 2315,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2322,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2316,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2318,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2278,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2284,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2323,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2324,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2325,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2290,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2326,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2329,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2331
														],
														"declarations": [
															{
																"constant": false,
																"id": 2331,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2395,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2338,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2333,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2341,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2342,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2346,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2347,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2349,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2350,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2354,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2355,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2357,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2358,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2365,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2366,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2370,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2373,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2374,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2379,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2381,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2382,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2388,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2389,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2392,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2393,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2282,
														"id": 2394,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3063,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2413
												],
												"declarations": [
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2439,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2419,
												"initialValue": {
													"arguments": [
														{
															"id": 2415,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2416,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2417,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2414,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2397,
															2440
														],
														"referencedDeclaration": 2397,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2421,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2020",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2020",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2420,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2424,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2425,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2426,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2423,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2436,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2435,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2431,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2434,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2437,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2413,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2411,
												"id": 2438,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2405,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3063,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2448,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2453,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2447,
															"id": 2452,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2456
												],
												"declarations": [
													{
														"constant": false,
														"id": 2456,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2551,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2465,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2459,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2458,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2719,
																			2754
																		],
																		"referencedDeclaration": 2719,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2463,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2550,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2466,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2467,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2469,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2476,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2478,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2480,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2487,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2499,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2500,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2501,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2502,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2509,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2510,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2511,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2512,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2513,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2516,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2520,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2521,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2522,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2523,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2524,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2527,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2531,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2532,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2533,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2535,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2456,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2538,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2542,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2544,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2545,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2546,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2543,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2447,
														"id": 2549,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3063,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2564
														],
														"declarations": [
															{
																"constant": false,
																"id": 2564,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2563,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2568,
														"initialValue": {
															"arguments": [
																{
																	"id": 2566,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2565,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2552,
																	2587
																],
																"referencedDeclaration": 2552,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2571,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2558,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2570,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2573,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2574,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2576,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2555,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2562,
														"id": 2584,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2556,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3063,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2718,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2596
												],
												"declarations": [
													{
														"constant": false,
														"id": 2596,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2718,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2598,
												"initialValue": {
													"hexValue": "30",
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2715,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2613,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2612,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2611,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2614,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2629,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2641,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2702,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2590,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2714,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2713,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2716,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2596,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2594,
												"id": 2717,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3063,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2753,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2752,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2731
														],
														"declarations": [
															{
																"constant": false,
																"id": 2731,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2752,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2730,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2735,
														"initialValue": {
															"arguments": [
																{
																	"id": 2733,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2732,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2719,
																	2754
																],
																"referencedDeclaration": 2719,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2738,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2725,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2737,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2741,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2731,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2743,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2729,
														"id": 2751,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2720,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2724,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2723,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3063,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2765,
												"initialValue": {
													"hexValue": "30",
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 2879,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2782,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2781,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2783,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2799,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2798,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2800,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2816,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 2815,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2817,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2833,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 2832,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2827,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2828,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2831,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2834,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2850,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 2849,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2839,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2844,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2845,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2848,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2851,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2867,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 2866,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2856,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2757,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2861,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2865,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2757,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2878,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 2877,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2880,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2763,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2881,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3063,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 2916,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															2895
														],
														"declarations": [
															{
																"constant": false,
																"id": 2895,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2916,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2894,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2899,
														"initialValue": {
															"arguments": [
																{
																	"id": 2897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2886,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2896,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2883,
																	2918
																],
																"referencedDeclaration": 2883,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2900,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2902,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2889,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2901,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2904,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2905,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2895,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2907,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2886,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2913,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2893,
														"id": 2915,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2884,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2887,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3063,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3004,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													2927
												],
												"declarations": [
													{
														"constant": false,
														"id": 2927,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3004,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2926,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2929,
												"initialValue": {
													"hexValue": "30",
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 3001,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2944,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 2943,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2935,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2938,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2942,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2959,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 2958,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2974,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 2973,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2968,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2969,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2972,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2989,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 2988,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2980,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2921,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2983,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2984,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2987,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3000,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 2999,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2998,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3002,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2927,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2925,
												"id": 3003,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3063,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 3041,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															3017
														],
														"declarations": [
															{
																"constant": false,
																"id": 3017,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3041,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3021,
														"initialValue": {
															"arguments": [
																{
																	"id": 3019,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3008,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3018,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3005,
																	3043
																],
																"referencedDeclaration": 3005,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3024,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3011,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2020",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3023,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3062,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2020_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3031,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3026,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3029,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3027,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3017,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3028,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3030,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3032,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3038,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3015,
														"id": 3040,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3006,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3009,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3063,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3061,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3054,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3047,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2020",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2020",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3052,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3051,
												"id": 3060,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2020",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3045,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 2020,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2020",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3063,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3064,
							"src": "203:14914:15",
							"usedErrors": [
								2015
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3168
						]
					},
					"id": 3169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3065,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3066,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3168,
							"linearizedBaseContracts": [
								3168
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3076,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3069,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3077,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3080,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3079,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3075,
												"id": 3082,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3068,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3070,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3073,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3168,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3094,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3095,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3098,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3097,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3093,
												"id": 3100,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3085,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3086,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3088,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3091,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3168,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3113
												],
												"declarations": [
													{
														"constant": false,
														"id": 3113,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3112,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3114,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3115,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3107,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3118,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3119,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3107,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3121,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3127,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3132,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3113,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3130,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3128,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3137,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3138,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3107,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3140,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3142,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3111,
												"id": 3144,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3109,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3168,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3165,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3156,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3160,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3149,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3159,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3149,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3154,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3153,
														"id": 3164,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3147,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3168,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3169,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contracts/Element of Soul/Land.sol": {
				"ast": {
					"absolutePath": "contracts/Element of Soul/Land.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Counters": [
							1718
						],
						"ERC165": [
							1997
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							2009
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Ownable": [
							147
						],
						"Strings": [
							1973
						],
						"SuperVet": [
							3514
						]
					},
					"id": 3515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3515,
							"sourceUnit": 1326,
							"src": "183:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3515,
							"sourceUnit": 1587,
							"src": "241:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3515,
							"sourceUnit": 148,
							"src": "320:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3515,
							"sourceUnit": 1719,
							"src": "373:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3175,
										"name": "ERC721",
										"nameLocations": [
											"606:6:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "606:6:17"
									},
									"id": 3176,
									"nodeType": "InheritanceSpecifier",
									"src": "606:6:17"
								},
								{
									"baseName": {
										"id": 3177,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"614:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1586,
										"src": "614:16:17"
									},
									"id": 3178,
									"nodeType": "InheritanceSpecifier",
									"src": "614:16:17"
								},
								{
									"baseName": {
										"id": 3179,
										"name": "Ownable",
										"nameLocations": [
											"632:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "632:7:17"
									},
									"id": 3180,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:17"
								}
							],
							"canonicalName": "SuperVet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3514,
							"linearizedBaseContracts": [
								3514,
								147,
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1997,
								2009,
								1644
							],
							"name": "SuperVet",
							"nameLocation": "594:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3184,
									"libraryName": {
										"id": 3181,
										"name": "Counters",
										"nameLocations": [
											"652:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1718,
										"src": "652:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "646:36:17",
									"typeName": {
										"id": 3183,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3182,
											"name": "Counters.Counter",
											"nameLocations": [
												"665:8:17",
												"674:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1650,
											"src": "665:16:17"
										},
										"referencedDeclaration": 1650,
										"src": "665:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3187,
									"mutability": "mutable",
									"name": "_itemsId",
									"nameLocation": "756:8:17",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "731:33:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1650_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3186,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3185,
											"name": "Counters.Counter",
											"nameLocations": [
												"731:8:17",
												"740:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1650,
											"src": "731:16:17"
										},
										"referencedDeclaration": 1650,
										"src": "731:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1650_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SuperVet.NFT",
									"id": 3198,
									"members": [
										{
											"constant": false,
											"id": 3189,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "884:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3198,
											"src": "876:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "876:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3191,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "913:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3198,
											"src": "905:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3190,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "905:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3193,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "935:3:17",
											"nodeType": "VariableDeclaration",
											"scope": 3198,
											"src": "928:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3192,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "928:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3195,
											"mutability": "mutable",
											"name": "mintTime",
											"nameLocation": "953:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 3198,
											"src": "948:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3194,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "948:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3197,
											"mutability": "mutable",
											"name": "minted",
											"nameLocation": "984:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 3198,
											"src": "979:11:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3196,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "979:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "861:3:17",
									"nodeType": "StructDefinition",
									"scope": 3514,
									"src": "854:143:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbbffcb0",
									"id": 3204,
									"mutability": "mutable",
									"name": "NftId",
									"nameLocation": "1124:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "1075:54:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 3203,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1083:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1075:41:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3202,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3200,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1102:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1094:21:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3201,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1110:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05d85eda",
									"id": 3208,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "1224:5:17",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "1192:37:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3207,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1200:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1192:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3206,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1211:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2295370a",
									"id": 3213,
									"mutability": "mutable",
									"name": "NftMinting",
									"nameLocation": "1312:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "1284:38:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3198_storage_$",
										"typeString": "mapping(uint256 => struct SuperVet.NFT)"
									},
									"typeName": {
										"id": 3212,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3209,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1292:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1284:20:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3198_storage_$",
											"typeString": "mapping(uint256 => struct SuperVet.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3211,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3210,
												"name": "NFT",
												"nameLocations": [
													"1300:3:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3198,
												"src": "1300:3:17"
											},
											"referencedDeclaration": 3198,
											"src": "1300:3:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$3198_storage_ptr",
												"typeString": "struct SuperVet.NFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d936547e",
									"id": 3217,
									"mutability": "mutable",
									"name": "whitelisted",
									"nameLocation": "1400:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "1368:43:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3216,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3214,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1376:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1368:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3215,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1387:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "1737:7:17",
										"statements": []
									},
									"id": 3230,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c616e6473",
													"id": 3222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1698:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f5d052dee6af811bf919a0e12a7b04cc5851b99589d49627e68d9e974e0b1a19",
														"typeString": "literal_string \"Lands\""
													},
													"value": "Lands"
												},
												{
													"hexValue": "4c616e64",
													"id": 3223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1707:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e00be196005ee459c06fe10b71e524927448e2a0f78b75d6c82d61f5fd9b7907",
														"typeString": "literal_string \"Land\""
													},
													"value": "Land"
												}
											],
											"id": 3224,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3221,
												"name": "ERC721",
												"nameLocations": [
													"1691:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1691:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1691:23:17"
										},
										{
											"arguments": [
												{
													"id": 3226,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3219,
													"src": "1723:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3227,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3225,
												"name": "Ownable",
												"nameLocations": [
													"1715:7:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1715:7:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1715:21:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1677:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "1669:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:22:17"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:0:17"
									},
									"scope": 3514,
									"src": "1657:87:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3243,
										"nodeType": "Block",
										"src": "1964:48:17",
										"statements": [
											{
												"expression": {
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3237,
															"name": "whitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3217,
															"src": "1974:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3239,
														"indexExpression": {
															"id": 3238,
															"name": "_authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "1986:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1974:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2001:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1974:31:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3242,
												"nodeType": "ExpressionStatement",
												"src": "1974:31:17"
											}
										]
									},
									"functionSelector": "9b19251a",
									"id": 3244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3234,
												"name": "onlyOwner",
												"nameLocations": [
													"1954:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1954:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1954:9:17"
										}
									],
									"name": "whitelist",
									"nameLocation": "1916:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "_authorized",
												"nameLocation": "1934:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "1926:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:21:17"
									},
									"returnParameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:0:17"
									},
									"scope": 3514,
									"src": "1907:105:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3257,
										"nodeType": "Block",
										"src": "2254:49:17",
										"statements": [
											{
												"expression": {
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3251,
															"name": "whitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3217,
															"src": "2264:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3253,
														"indexExpression": {
															"id": 3252,
															"name": "_authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "2276:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2264:24:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2291:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2264:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3256,
												"nodeType": "ExpressionStatement",
												"src": "2264:32:17"
											}
										]
									},
									"functionSelector": "9a590427",
									"id": 3258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3248,
												"name": "onlyOwner",
												"nameLocations": [
													"2244:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2244:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:17"
										}
									],
									"name": "unwhitelist",
									"nameLocation": "2204:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3246,
												"mutability": "mutable",
												"name": "_authorized",
												"nameLocation": "2224:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3258,
												"src": "2216:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:21:17"
									},
									"returnParameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:17"
									},
									"scope": 3514,
									"src": "2195:108:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3331,
										"nodeType": "Block",
										"src": "2522:450:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3264,
																"name": "whitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3217,
																"src": "2540:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3267,
															"indexExpression": {
																"expression": {
																	"id": 3265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2552:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2556:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2552:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2540:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420617574686f72697a656420666f72206d696e74696e67206c616e642121",
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2565:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0857ca2ab96eb0bca607d99a40522e0bce8a8d7e5db4afb0608a9031d239c2f9",
																"typeString": "literal_string \"You are not authorized for minting land!!\""
															},
															"value": "You are not authorized for minting land!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0857ca2ab96eb0bca607d99a40522e0bce8a8d7e5db4afb0608a9031d239c2f9",
																"typeString": "literal_string \"You are not authorized for minting land!!\""
															}
														],
														"id": 3263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2532:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2532:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3270,
												"nodeType": "ExpressionStatement",
												"src": "2532:77:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3271,
															"name": "_itemsId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "2619:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2628:9:17",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1676,
														"src": "2619:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1650_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2619:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3275,
												"nodeType": "ExpressionStatement",
												"src": "2619:20:17"
											},
											{
												"assignments": [
													3277
												],
												"declarations": [
													{
														"constant": false,
														"id": 3277,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "2659:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 3331,
														"src": "2651:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2651:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3281,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3278,
															"name": "_itemsId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "2671:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1650_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2680:7:17",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "2671:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1650_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1650_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:18:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2651:38:17"
											},
											{
												"expression": {
													"id": 3294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3282,
																"name": "NftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3204,
																"src": "2701:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3291,
															"indexExpression": {
																"expression": {
																	"id": 3283,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2707:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2711:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2707:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2701:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3292,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3285,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3208,
																	"src": "2719:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3288,
																"indexExpression": {
																	"expression": {
																		"id": 3286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2725:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2729:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2725:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2719:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2739:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2719:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2701:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3293,
														"name": "newItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3277,
														"src": "2744:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2701:52:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3295,
												"nodeType": "ExpressionStatement",
												"src": "2701:52:17"
											},
											{
												"expression": {
													"id": 3312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3296,
															"name": "NftMinting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3213,
															"src": "2763:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3198_storage_$",
																"typeString": "mapping(uint256 => struct SuperVet.NFT storage ref)"
															}
														},
														"id": 3298,
														"indexExpression": {
															"id": 3297,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "2774:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2763:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3198_storage",
															"typeString": "struct SuperVet.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3300,
																"name": "newItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3277,
																"src": "2791:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3301,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3208,
																		"src": "2802:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3304,
																	"indexExpression": {
																		"expression": {
																			"id": 3302,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2808:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2812:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2808:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2802:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2822:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2802:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3307,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3260,
																"src": "2825:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"expression": {
																	"id": 3308,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2830:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2836:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2830:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2847:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3299,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "2787:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$3198_storage_ptr_$",
																"typeString": "type(struct SuperVet.NFT storage pointer)"
															}
														},
														"id": 3311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2787:65:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3198_memory_ptr",
															"typeString": "struct SuperVet.NFT memory"
														}
													},
													"src": "2763:89:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$3198_storage",
														"typeString": "struct SuperVet.NFT storage ref"
													}
												},
												"id": 3313,
												"nodeType": "ExpressionStatement",
												"src": "2763:89:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3315,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2872:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2876:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2872:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3317,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "2884:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3314,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "2862:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2862:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3319,
												"nodeType": "ExpressionStatement",
												"src": "2862:32:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3321,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "2919:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3322,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "2930:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3320,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "2906:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3324,
												"nodeType": "ExpressionStatement",
												"src": "2906:28:17"
											},
											{
												"expression": {
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2945:19:17",
													"subExpression": {
														"baseExpression": {
															"id": 3325,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "2945:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3328,
														"indexExpression": {
															"expression": {
																"id": 3326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2951:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2955:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2951:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2945:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3330,
												"nodeType": "ExpressionStatement",
												"src": "2945:19:17"
											}
										]
									},
									"functionSelector": "695850fb",
									"id": 3332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "2487:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2510:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3332,
												"src": "2496:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2496:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:19:17"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:0:17"
									},
									"scope": 3514,
									"src": "2478:494:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3389,
										"nodeType": "Block",
										"src": "3159:251:17",
										"statements": [
											{
												"assignments": [
													3345
												],
												"declarations": [
													{
														"constant": false,
														"id": 3345,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "3182:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3389,
														"src": "3169:20:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SuperVet.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3343,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3342,
																	"name": "NFT",
																	"nameLocations": [
																		"3169:3:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3198,
																	"src": "3169:3:17"
																},
																"referencedDeclaration": 3198,
																"src": "3169:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3198_storage_ptr",
																	"typeString": "struct SuperVet.NFT"
																}
															},
															"id": 3344,
															"nodeType": "ArrayTypeName",
															"src": "3169:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$3198_storage_$dyn_storage_ptr",
																"typeString": "struct SuperVet.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3354,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3350,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3208,
																"src": "3202:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3352,
															"indexExpression": {
																"id": 3351,
																"name": "_seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3334,
																"src": "3208:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3202:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3192:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SuperVet.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3347,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3346,
																	"name": "NFT",
																	"nameLocations": [
																		"3196:3:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3198,
																	"src": "3196:3:17"
																},
																"referencedDeclaration": 3198,
																"src": "3196:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3198_storage_ptr",
																	"typeString": "struct SuperVet.NFT"
																}
															},
															"id": 3348,
															"nodeType": "ArrayTypeName",
															"src": "3196:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$3198_storage_$dyn_storage_ptr",
																"typeString": "struct SuperVet.NFT[]"
															}
														}
													},
													"id": 3353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3192:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SuperVet.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:48:17"
											},
											{
												"body": {
													"id": 3385,
													"nodeType": "Block",
													"src": "3271:109:17",
													"statements": [
														{
															"assignments": [
																3368
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3368,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "3291:7:17",
																	"nodeType": "VariableDeclaration",
																	"scope": 3385,
																	"src": "3286:12:17",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3367,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3286:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3376,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3369,
																		"name": "NftId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3204,
																		"src": "3301:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 3371,
																	"indexExpression": {
																		"id": 3370,
																		"name": "_seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3334,
																		"src": "3307:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3301:14:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3375,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3372,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3356,
																		"src": "3316:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3320:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3316:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3301:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3286:36:17"
														},
														{
															"expression": {
																"id": 3383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3377,
																		"name": "myArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3345,
																		"src": "3336:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct SuperVet.NFT memory[] memory"
																		}
																	},
																	"id": 3379,
																	"indexExpression": {
																		"id": 3378,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3356,
																		"src": "3344:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3336:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$3198_memory_ptr",
																		"typeString": "struct SuperVet.NFT memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3380,
																		"name": "NftMinting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3213,
																		"src": "3349:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3198_storage_$",
																			"typeString": "mapping(uint256 => struct SuperVet.NFT storage ref)"
																		}
																	},
																	"id": 3382,
																	"indexExpression": {
																		"id": 3381,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3368,
																		"src": "3360:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3349:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$3198_storage",
																		"typeString": "struct SuperVet.NFT storage ref"
																	}
																},
																"src": "3336:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3198_memory_ptr",
																	"typeString": "struct SuperVet.NFT memory"
																}
															},
															"id": 3384,
															"nodeType": "ExpressionStatement",
															"src": "3336:32:17"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3359,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3356,
														"src": "3246:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"baseExpression": {
															"id": 3360,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "3250:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3362,
														"indexExpression": {
															"id": 3361,
															"name": "_seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "3256:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3250:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3246:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3386,
												"initializationExpression": {
													"assignments": [
														3356
													],
													"declarations": [
														{
															"constant": false,
															"id": 3356,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3239:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3386,
															"src": "3234:6:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3355,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3234:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3358,
													"initialValue": {
														"hexValue": "30",
														"id": 3357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3243:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3234:10:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3266:3:17",
														"subExpression": {
															"id": 3364,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3356,
															"src": "3266:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3366,
													"nodeType": "ExpressionStatement",
													"src": "3266:3:17"
												},
												"nodeType": "ForStatement",
												"src": "3229:151:17"
											},
											{
												"expression": {
													"id": 3387,
													"name": "myArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3345,
													"src": "3396:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SuperVet.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3340,
												"id": 3388,
												"nodeType": "Return",
												"src": "3389:14:17"
											}
										]
									},
									"functionSelector": "f1537686",
									"id": 3390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "3097:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3334,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "3116:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3108:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:17:17"
									},
									"returnParameters": {
										"id": 3340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3390,
												"src": "3145:12:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SuperVet.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3337,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3336,
															"name": "NFT",
															"nameLocations": [
																"3145:3:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3198,
															"src": "3145:3:17"
														},
														"referencedDeclaration": 3198,
														"src": "3145:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3198_storage_ptr",
															"typeString": "struct SuperVet.NFT"
														}
													},
													"id": 3338,
													"nodeType": "ArrayTypeName",
													"src": "3145:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3198_storage_$dyn_storage_ptr",
														"typeString": "struct SuperVet.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:14:17"
									},
									"scope": 3514,
									"src": "3088:322:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3468,
										"nodeType": "Block",
										"src": "4119:355:17",
										"statements": [
											{
												"expression": {
													"id": 3410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3400,
																"name": "NftId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3204,
																"src": "4129:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3407,
															"indexExpression": {
																"id": 3401,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3393,
																"src": "4135:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4129:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3408,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3402,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3208,
																	"src": "4140:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3404,
																"indexExpression": {
																	"id": 3403,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3393,
																	"src": "4146:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4140:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4153:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4140:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4129:26:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3409,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3395,
														"src": "4158:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4129:37:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3411,
												"nodeType": "ExpressionStatement",
												"src": "4129:37:17"
											},
											{
												"assignments": [
													3416
												],
												"declarations": [
													{
														"constant": false,
														"id": 3416,
														"mutability": "mutable",
														"name": "myArray",
														"nameLocation": "4189:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3468,
														"src": "4176:20:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SuperVet.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3414,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3413,
																	"name": "NFT",
																	"nameLocations": [
																		"4176:3:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3198,
																	"src": "4176:3:17"
																},
																"referencedDeclaration": 3198,
																"src": "4176:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$3198_storage_ptr",
																	"typeString": "struct SuperVet.NFT"
																}
															},
															"id": 3415,
															"nodeType": "ArrayTypeName",
															"src": "4176:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$3198_storage_$dyn_storage_ptr",
																"typeString": "struct SuperVet.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3420,
												"initialValue": {
													"arguments": [
														{
															"id": 3418,
															"name": "_seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3397,
															"src": "4211:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3417,
														"name": "getTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "4200:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (struct SuperVet.NFT memory[] memory)"
														}
													},
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4200:19:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SuperVet.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4176:43:17"
											},
											{
												"body": {
													"id": 3461,
													"nodeType": "Block",
													"src": "4269:177:17",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3432,
																			"name": "myArray",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3416,
																			"src": "4286:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct SuperVet.NFT memory[] memory"
																			}
																		},
																		"id": 3434,
																		"indexExpression": {
																			"id": 3433,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "4294:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4286:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$3198_memory_ptr",
																			"typeString": "struct SuperVet.NFT memory"
																		}
																	},
																	"id": 3435,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4297:7:17",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3189,
																	"src": "4286:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3436,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3395,
																	"src": "4308:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4286:30:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3460,
															"nodeType": "IfStatement",
															"src": "4283:153:17",
															"trueBody": {
																"id": 3459,
																"nodeType": "Block",
																"src": "4317:119:17",
																"statements": [
																	{
																		"expression": {
																			"id": 3452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 3438,
																						"name": "NftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3204,
																						"src": "4335:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 3443,
																					"indexExpression": {
																						"id": 3439,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3397,
																						"src": "4341:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4335:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 3444,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3440,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3422,
																						"src": "4350:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3441,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4352:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4350:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4335:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 3445,
																						"name": "NftId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3204,
																						"src": "4357:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(uint256 => uint256))"
																						}
																					},
																					"id": 3447,
																					"indexExpression": {
																						"id": 3446,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3397,
																						"src": "4363:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4357:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 3451,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 3448,
																						"name": "count",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3208,
																						"src": "4372:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 3450,
																					"indexExpression": {
																						"id": 3449,
																						"name": "_seller",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3397,
																						"src": "4378:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4372:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4357:30:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4335:52:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3453,
																		"nodeType": "ExpressionStatement",
																		"src": "4335:52:17"
																	},
																	{
																		"expression": {
																			"id": 3457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "4405:16:17",
																			"subExpression": {
																				"baseExpression": {
																					"id": 3454,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3208,
																					"src": "4405:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 3456,
																				"indexExpression": {
																					"id": 3455,
																					"name": "_seller",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3397,
																					"src": "4411:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4405:14:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3458,
																		"nodeType": "ExpressionStatement",
																		"src": "4405:16:17"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3425,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3422,
														"src": "4244:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3426,
															"name": "myArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3416,
															"src": "4248:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$3198_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct SuperVet.NFT memory[] memory"
															}
														},
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4256:6:17",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4248:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4244:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3462,
												"initializationExpression": {
													"assignments": [
														3422
													],
													"declarations": [
														{
															"constant": false,
															"id": 3422,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4238:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3462,
															"src": "4233:6:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3421,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4233:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3424,
													"initialValue": {
														"hexValue": "30",
														"id": 3423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4240:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4233:8:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4265:3:17",
														"subExpression": {
															"id": 3429,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3422,
															"src": "4265:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3431,
													"nodeType": "ExpressionStatement",
													"src": "4265:3:17"
												},
												"nodeType": "ForStatement",
												"src": "4229:217:17"
											},
											{
												"expression": {
													"id": 3466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4455:12:17",
													"subExpression": {
														"baseExpression": {
															"id": 3463,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "4455:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3465,
														"indexExpression": {
															"id": 3464,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3393,
															"src": "4461:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4455:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3467,
												"nodeType": "ExpressionStatement",
												"src": "4455:12:17"
											}
										]
									},
									"documentation": {
										"id": 3391,
										"nodeType": "StructuredDocumentation",
										"src": "3417:624:17",
										"text": " @dev Transfers a token ID from one owner to another and updates internal tracking.\n @param _to The address to receive the token ID.\n @param _tokenId The token ID to be transferred.\n @param _seller The current owner of the token ID.\n This function updates the internal mapping of token IDs to reflect a change in ownership.\n It also adjusts the count of NFTs owned by both the seller and the buyer.\n Note: This function does not perform the actual transfer of tokens but is intended to be called\n in conjunction with a transfer function that handles ownership change."
									},
									"functionSelector": "6e0cee09",
									"id": 3469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTokenId",
									"nameLocation": "4055:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4077:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3469,
												"src": "4069:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4086:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3469,
												"src": "4081:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4081:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "4103:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3469,
												"src": "4095:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:43:17"
									},
									"returnParameters": {
										"id": 3399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4119:0:17"
									},
									"scope": 3514,
									"src": "4046:428:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "4722:41:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3477,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3471,
															"src": "4748:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3476,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3497
														],
														"referencedDeclaration": 3497,
														"src": "4739:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4739:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3475,
												"id": 3479,
												"nodeType": "Return",
												"src": "4732:24:17"
											}
										]
									},
									"functionSelector": "8ad91345",
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenUri",
									"nameLocation": "4659:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3471,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4676:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "4671:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4671:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:14:17"
									},
									"returnParameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "4707:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4707:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4706:15:17"
									},
									"scope": 3514,
									"src": "4650:113:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										512,
										1566
									],
									"body": {
										"id": 3496,
										"nodeType": "Block",
										"src": "5115:47:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3483,
															"src": "5147:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3491,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5132:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SuperVet_$3514_$",
																"typeString": "type(contract super SuperVet)"
															}
														},
														"id": 3492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5138:8:17",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "5132:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5132:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3490,
												"id": 3495,
												"nodeType": "Return",
												"src": "5125:30:17"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4982:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3487,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3485,
												"name": "ERC721",
												"nameLocations": [
													"5053:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "5053:6:17"
											},
											{
												"id": 3486,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"5061:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "5061:16:17"
											}
										],
										"src": "5044:34:17"
									},
									"parameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4999:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "4991:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:17:17"
									},
									"returnParameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "5096:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5096:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5095:15:17"
									},
									"scope": 3514,
									"src": "4973:189:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417,
										1509
									],
									"body": {
										"id": 3512,
										"nodeType": "Block",
										"src": "5569:60:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3509,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3499,
															"src": "5610:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3507,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5586:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SuperVet_$3514_$",
																"typeString": "type(contract super SuperVet)"
															}
														},
														"id": 3508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5592:17:17",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1509,
														"src": "5586:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5586:36:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3506,
												"id": 3511,
												"nodeType": "Return",
												"src": "5579:43:17"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5433:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3503,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3501,
												"name": "ERC721",
												"nameLocations": [
													"5516:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "5516:6:17"
											},
											{
												"id": 3502,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"5524:16:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "5524:16:17"
											}
										],
										"src": "5507:34:17"
									},
									"parameters": {
										"id": 3500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3499,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5458:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3513,
												"src": "5451:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3498,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5451:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5450:20:17"
									},
									"returnParameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3513,
												"src": "5559:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5559:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5558:6:17"
									},
									"scope": 3514,
									"src": "5424:205:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3515,
							"src": "585:5046:17",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "81:5551:17"
				},
				"id": 17
			}
		}
	}
}